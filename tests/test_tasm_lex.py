from __future__ import absolute_import
from __future__ import print_function

from tasm import lex

import tasm.cpp
import tasm.lex
import tasm.op
import tasm.parser
import tasm.proc
import unittest

class LexTest(unittest.TestCase):
    def test_parse_args(self):

        self.assertEqual(tasm.lex.parse_args(text="'%-10s %d',0Ah,0     ; DATA XREF: test_jcc+28\xe2\x86\x91o"),[u"'%-10s %d'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'%-10s A=%08lx B=%08lx C=%08lx R=%08lx CCIN=%04lx CC=%04lx',0Ah,0"),[u"'%-10s A=%08lx B=%08lx C=%08lx R=%08lx CCIN=%04lx CC=%04lx'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'%-10s A=%08lx B=%08lx R=%08lx CC=%04lx',0Ah,0"),[u"'%-10s A=%08lx B=%08lx R=%08lx CC=%04lx'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'%-10s A=%08lx B=%08lx R=%08lx CCIN=%04lx CC=%04lx',0Ah,0"),[u"'%-10s A=%08lx B=%08lx R=%08lx CCIN=%04lx CC=%04lx'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'%-10s A=%08lx B=%08lx',0Ah,0"),[u"'%-10s A=%08lx B=%08lx'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'%-10s A=%08lx R=%08lx %ld',0Ah,0"),[u"'%-10s A=%08lx R=%08lx %ld'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'%-10s A=%08lx R=%08lx CCIN=%04lx CC=%04lx',0Ah,0"),[u"'%-10s A=%08lx R=%08lx CCIN=%04lx CC=%04lx'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'%-10s A=%08lx R=%08lx',0Ah,0"),[u"'%-10s A=%08lx R=%08lx'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'%-10s A=%08lx R=%08lx:%08lx',0Ah,0"),[u"'%-10s A=%08lx R=%08lx:%08lx'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'%-10s A=%08x R=%08x CCIN=%04x CC=%04x',0Ah,0"),[u"'%-10s A=%08x R=%08x CCIN=%04x CC=%04x'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'%-10s AH=%08lx AL=%08lx B=%08lx RH=%08lx RL=%08lx CC=%04lx',0Ah,0"),[u"'%-10s AH=%08lx AL=%08lx B=%08lx RH=%08lx RL=%08lx CC=%04lx'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'%-10s EAX=%08lx A=%08lx C=%08lx CC=%02lx',0Ah,0"),[u"'%-10s EAX=%08lx A=%08lx C=%08lx CC=%02lx'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'%-10s ECX=%08lx ZF=%ld r=%d',0Ah,0"),[u"'%-10s ECX=%08lx ZF=%ld r=%d'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'%-10s ESI=%08lx EDI=%08lx EAX=%08lx ECX=%08lx EFL=%04x',0Ah,0"),[u"'%-10s ESI=%08lx EDI=%08lx EAX=%08lx ECX=%08lx EFL=%04x'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'%-10s R=%08lx',0Ah,0 ; DATA XREF: test_jcc+74\xe2\x86\x91o"),[u"'%-10s R=%08lx'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'%-10s: A=%08lx R=%08lx',0Ah,0"),[u"'%-10s: A=%08lx R=%08lx'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'(%%eax)',0          ; DATA XREF: test_lea+4F\xe2\x86\x91o"),[u"'(%%eax)'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'(%%eax, %%ecx)',0   ; DATA XREF: test_lea+34F\xe2\x86\x91o"),[u"'(%%eax, %%ecx)'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'(%%ebx)',0          ; DATA XREF: test_lea+78\xe2\x86\x91o"),[u"'(%%ebx)'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'(%%ebx, %%edx)',0   ; DATA XREF: test_lea+379\xe2\x86\x91o"),[u"'(%%ebx, %%edx)'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'(%%ecx)',0          ; DATA XREF: test_lea+A1\xe2\x86\x91o"),[u"'(%%ecx)'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'(%%ecx, %%ecx)',0   ; DATA XREF: test_lea+3A3\xe2\x86\x91o"),[u"'(%%ecx, %%ecx)'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'(%%ecx, %%ecx, 2)',0 ; DATA XREF: test_lea+4A4\xe2\x86\x91o"),[u"'(%%ecx, %%ecx, 2)'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'(%%edi)',0          ; DATA XREF: test_lea+11C\xe2\x86\x91o"),[u"'(%%edi)'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'(%%edi, %%ecx)',0   ; DATA XREF: test_lea+421\xe2\x86\x91o"),[u"'(%%edi, %%ecx)'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'(%%edx)',0          ; DATA XREF: test_lea+CA\xe2\x86\x91o"),[u"'(%%edx)'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'(%%edx, %%ecx)',0   ; DATA XREF: test_lea+3CD\xe2\x86\x91o"),[u"'(%%edx, %%ecx)'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'(%%edx, %%ecx, 4)',0 ; DATA XREF: test_lea+4CE\xe2\x86\x91o"),[u"'(%%edx, %%ecx, 4)'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'(%%esi)',0          ; DATA XREF: test_lea+F3\xe2\x86\x91o"),[u"'(%%esi)'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'(%%esi, %%ecx)',0   ; DATA XREF: test_lea+3F7\xe2\x86\x91o"),[u"'(%%esi, %%ecx)'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'(%%esi, %%ecx, 8)',0 ; DATA XREF: test_lea+4F8\xe2\x86\x91o"),[u"'(%%esi, %%ecx, 8)'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'(,%%eax, 2)',0      ; DATA XREF: test_lea+522\xe2\x86\x91o"),[u"'(,%%eax, 2)'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'(,%%ebx, 4)',0      ; DATA XREF: test_lea+550\xe2\x86\x91o"),[u"'(,%%ebx, 4)'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'(,%%ecx, 8)',0      ; DATA XREF: test_lea+57E\xe2\x86\x91o"),[u"'(,%%ecx, 8)'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'(float)%f = %f',0Ah,0 ; DATA XREF: test_fcvt+A\xe2\x86\x91o"),[u"'(float)%f = %f'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'(int)a = %d',0Ah,0  ; DATA XREF: test_fcvt+D7\xe2\x86\x91o"),[u"'(int)a = %d'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'(int64_t)a = %016llx',0Ah,0"),[u"'(int64_t)a = %016llx'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'(long double)%f = %Lf',0Ah,0"),[u"'(long double)%f = %Lf'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'(short)a = %d',0Ah,0 ; DATA XREF: test_fcvt+BF\xe2\x86\x91o"),[u"'(short)a = %d'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'-10(%%ecx, %%ecx, 2)',0 ; DATA XREF: test_lea+636\xe2\x86\x91o"),[u"'-10(%%ecx, %%ecx, 2)'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'-10(%%edx, %%ecx, 4)',0 ; DATA XREF: test_lea+661\xe2\x86\x91o"),[u"'-10(%%edx, %%ecx, 4)'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'-10(%%esi, %%ecx, 8)',0 ; DATA XREF: test_lea+68C\xe2\x86\x91o"),[u"'-10(%%esi, %%ecx, 8)'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'00000000',0Dh,0Ah,'$' ; buffer for ASCII string"),[u"'00000000'", u'0Dh', u'0Ah', u"'$'"])
        self.assertEqual(tasm.lex.parse_args(text="'0x40(%%eax)',0      ; DATA XREF: test_lea+145\xe2\x86\x91o"),[u"'0x40(%%eax)'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'0x40(%%eax, %%ecx)',0 ; DATA XREF: test_lea+44B\xe2\x86\x91o"),[u"'0x40(%%eax, %%ecx)'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'0x40(%%ebx)',0      ; DATA XREF: test_lea+16F\xe2\x86\x91o"),[u"'0x40(%%ebx)'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'0x40(%%ecx)',0      ; DATA XREF: test_lea+199\xe2\x86\x91o"),[u"'0x40(%%ecx)'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'0x40(%%edi)',0      ; DATA XREF: test_lea+217\xe2\x86\x91o"),[u"'0x40(%%edi)'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'0x40(%%edx)',0      ; DATA XREF: test_lea+1C3\xe2\x86\x91o"),[u"'0x40(%%edx)'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'0x40(%%esi)',0      ; DATA XREF: test_lea+1ED\xe2\x86\x91o"),[u"'0x40(%%esi)'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'0x40(,%%eax, 2)',0  ; DATA XREF: test_lea+5AC\xe2\x86\x91o"),[u"'0x40(,%%eax, 2)'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'0x40(,%%ebx, 4)',0  ; DATA XREF: test_lea+5DA\xe2\x86\x91o"),[u"'0x40(,%%ebx, 4)'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'0x40(,%%ecx, 8)',0  ; DATA XREF: test_lea+608\xe2\x86\x91o"),[u"'0x40(,%%ecx, 8)'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'0x4000',0           ; DATA XREF: test_lea+22\xe2\x86\x91o"),[u"'0x4000'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'0x4000(%%eax)',0    ; DATA XREF: test_lea+241\xe2\x86\x91o"),[u"'0x4000(%%eax)'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'0x4000(%%ebx)',0    ; DATA XREF: test_lea+26E\xe2\x86\x91o"),[u"'0x4000(%%ebx)'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'0x4000(%%ebx, %%edx)',0 ; DATA XREF: test_lea+476\xe2\x86\x91o"),[u"'0x4000(%%ebx, %%edx)'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'0x4000(%%ecx)',0    ; DATA XREF: test_lea+29B\xe2\x86\x91o"),[u"'0x4000(%%ecx)'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'0x4000(%%ecx, %%ecx, 2)',0"),[u"'0x4000(%%ecx, %%ecx, 2)'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'0x4000(%%edi)',0    ; DATA XREF: test_lea+322\xe2\x86\x91o"),[u"'0x4000(%%edi)'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'0x4000(%%edx)',0    ; DATA XREF: test_lea+2C8\xe2\x86\x91o"),[u"'0x4000(%%edx)'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'0x4000(%%edx, %%ecx, 4)',0"),[u"'0x4000(%%edx, %%ecx, 4)'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'0x4000(%%esi)',0    ; DATA XREF: test_lea+2F5\xe2\x86\x91o"),[u"'0x4000(%%esi)'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'0x4000(%%esi, %%ecx, 8)',0"),[u"'0x4000(%%esi, %%ecx, 8)'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'GCC: (GNU) 6.4.0 20170704 (Fedora Cygwin 6.4.0-1)',0"),[u"'GCC: (GNU) 6.4.0 20170704 (Fedora Cygwin 6.4.0-1)'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'GCC: (GNU) 7.3.0',0"),[u"'GCC: (GNU) 7.3.0'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'Hello World From Protected Mode!',10,13,'$'"),[u"'Hello World From Protected Mode!'", u'10', u'13', u"'$'"])
        self.assertEqual(tasm.lex.parse_args(text="'NOT enought memory for VGA display, controls work for network games',13,10,'$'"),[u"'NOT enought memory for VGA display, controls work for network games'", u'13', u'10', u"'$'"])
        self.assertEqual(tasm.lex.parse_args(text="'OKOKOKOK'"),[u"'OKOKOKOK'"])
        self.assertEqual(tasm.lex.parse_args(text="'OKOKOKOK',10,13"),[u"'OKOKOKOK'", u'10', u'13'])
        self.assertEqual(tasm.lex.parse_args(text="'__deregister_frame_info',0"),[u"'__deregister_frame_info'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'__register_frame_info',0"),[u"'__register_frame_info'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'a=%016llx',0Ah,0    ; DATA XREF: test_fcvt+52\xe2\x86\x91o"),[u"'a=%016llx'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'a=%f b=%f =%f',0Ah,0 ; DATA XREF: test_fops+9D\xe2\x86\x91o"),[u"'a=%f b=%f =%f'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'a=%f b=%f a*b=%f',0Ah,0 ; DATA XREF: test_fops+52\xe2\x86\x91o"),[u"'a=%f b=%f a*b=%f'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'a=%f b=%f a+b=%f',0Ah,0 ; DATA XREF: test_fops+10\xe2\x86\x91o"),[u"'a=%f b=%f a+b=%f'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'a=%f b=%f a-b=%f',0Ah,0 ; DATA XREF: test_fops+2E\xe2\x86\x91o"),[u"'a=%f b=%f a-b=%f'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'a=%f b=%f a/b=%f',0Ah,0 ; DATA XREF: test_fops+79\xe2\x86\x91o"),[u"'a=%f b=%f a/b=%f'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'a=%f b=%f fmod(a, b)=%f',0Ah,0"),[u"'a=%f b=%f fmod(a, b)=%f'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'a=%f bcd=%04x%04x%04x%04x%04x b=%f',0Ah,0"),[u"'a=%f bcd=%04x%04x%04x%04x%04x b=%f'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'a=%f copysign(a,b)=%f',0Ah,0"),[u"'a=%f copysign(a,b)=%f'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'a=%f exp(a)=%f',0Ah,0 ; DATA XREF: test_fops+1B3\xe2\x86\x91o"),[u"'a=%f exp(a)=%f'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'a=%f sqrt(a)=%f',0Ah,0 ; DATA XREF: test_fops+191\xe2\x86\x91o"),[u"'a=%f sqrt(a)=%f'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'aaa',0              ; DATA XREF: test_bcd+6A6\xe2\x86\x91o"),[u"'aaa'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'aad',0              ; DATA XREF: test_bcd+A98\xe2\x86\x91o"),[u"'aad'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'aam',0              ; DATA XREF: test_bcd+A56\xe2\x86\x91o"),[u"'aam'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'aas',0              ; DATA XREF: test_bcd+87D\xe2\x86\x91o"),[u"'aas'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'ab''cd'"),[u"'ab''cd'"])
        self.assertEqual(tasm.lex.parse_args(text="'abcd'"),[u"'abcd'"])
        self.assertEqual(tasm.lex.parse_args(text="'abcde'"),[u"'abcde'"])
        self.assertEqual(tasm.lex.parse_args(text="'adcb',0             ; DATA XREF: exec_adcb+34\xe2\x86\x91o"),[u"'adcb'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'adcl',0             ; DATA XREF: exec_adcl+34\xe2\x86\x91o"),[u"'adcl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'adcw',0             ; DATA XREF: exec_adcw+35\xe2\x86\x91o"),[u"'adcw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'addb',0             ; DATA XREF: exec_addb+34\xe2\x86\x91o"),[u"'addb'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'addl',0             ; DATA XREF: exec_addl+34\xe2\x86\x91o"),[u"'addl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'addw',0             ; DATA XREF: exec_addw+35\xe2\x86\x91o"),[u"'addw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'andb',0             ; DATA XREF: exec_andb+34\xe2\x86\x91o"),[u"'andb'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'andl',0             ; DATA XREF: exec_andl+34\xe2\x86\x91o"),[u"'andl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'andw',0             ; DATA XREF: exec_andw+35\xe2\x86\x91o"),[u"'andw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'b',0                ; DATA XREF: test_fcmov+30\xe2\x86\x91o"),[u"'b'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'be',0               ; DATA XREF: test_fcmov+85\xe2\x86\x91o"),[u"'be'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'bsfl',0             ; DATA XREF: test_bsx+290\xe2\x86\x91o"),[u"'bsfl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'bsfw',0             ; DATA XREF: test_bsx+F6\xe2\x86\x91o"),[u"'bsfw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'bsrl',0             ; DATA XREF: test_bsx+1C2\xe2\x86\x91o"),[u"'bsrl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'bsrw',0             ; DATA XREF: test_bsx+29\xe2\x86\x91o"),[u"'bsrw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'bswapl',0           ; DATA XREF: test_conv+BF\xe2\x86\x91o"),[u"'bswapl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'btcl',0             ; DATA XREF: exec_btcl+3B\xe2\x86\x91o"),[u"'btcl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'btcw',0             ; DATA XREF: exec_btcw+3C\xe2\x86\x91o"),[u"'btcw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'btl',0              ; DATA XREF: exec_btl+3B\xe2\x86\x91o"),[u"'btl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'btrl',0             ; DATA XREF: exec_btrl+3B\xe2\x86\x91o"),[u"'btrl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'btrw',0             ; DATA XREF: exec_btrw+3C\xe2\x86\x91o"),[u"'btrw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'btsl',0             ; DATA XREF: exec_btsl+3B\xe2\x86\x91o"),[u"'btsl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'btsw',0             ; DATA XREF: exec_btsw+3C\xe2\x86\x91o"),[u"'btsw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'btw',0              ; DATA XREF: exec_btw+3C\xe2\x86\x91o"),[u"'btw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'cbw',0              ; DATA XREF: test_conv+1D\xe2\x86\x91o"),[u"'cbw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'cdeab'"),[u"'cdeab'"])
        self.assertEqual(tasm.lex.parse_args(text="'cdq',0              ; DATA XREF: test_conv+98\xe2\x86\x91o"),[u"'cdq'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'cmovael',0          ; DATA XREF: test_jcc+D22\xe2\x86\x91o"),[u"'cmovael'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'cmovaew',0          ; DATA XREF: test_jcc+D51\xe2\x86\x91o"),[u"'cmovaew'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'cmoval',0           ; DATA XREF: test_jcc+EE4\xe2\x86\x91o"),[u"'cmoval'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'cmovaw',0           ; DATA XREF: test_jcc+F13\xe2\x86\x91o"),[u"'cmovaw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'cmovbel',0          ; DATA XREF: test_jcc+B60\xe2\x86\x91o"),[u"'cmovbel'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'cmovbew',0          ; DATA XREF: test_jcc+B8F\xe2\x86\x91o"),[u"'cmovbew'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'cmovbl',0           ; DATA XREF: test_jcc+99E\xe2\x86\x91o"),[u"'cmovbl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'cmovbw',0           ; DATA XREF: test_jcc+9CD\xe2\x86\x91o"),[u"'cmovbw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'cmovel',0           ; DATA XREF: test_jcc+184\xe2\x86\x91o"),[u"'cmovel'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'cmovew',0           ; DATA XREF: test_jcc+1A2\xe2\x86\x91o"),[u"'cmovew'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'cmovgel',0          ; DATA XREF: test_jcc+61A\xe2\x86\x91o"),[u"'cmovgel'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'cmovgew',0          ; DATA XREF: test_jcc+649\xe2\x86\x91o"),[u"'cmovgew'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'cmovgl',0           ; DATA XREF: test_jcc+7DC\xe2\x86\x91o"),[u"'cmovgl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'cmovgw',0           ; DATA XREF: test_jcc+80B\xe2\x86\x91o"),[u"'cmovgw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'cmovlel',0          ; DATA XREF: test_jcc+458\xe2\x86\x91o"),[u"'cmovlel'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'cmovlew',0          ; DATA XREF: test_jcc+487\xe2\x86\x91o"),[u"'cmovlew'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'cmovll',0           ; DATA XREF: test_jcc+2A4\xe2\x86\x91o"),[u"'cmovll'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'cmovlw',0           ; DATA XREF: test_jcc+2C2\xe2\x86\x91o"),[u"'cmovlw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'cmovnel',0          ; DATA XREF: test_jcc+68\xe2\x86\x91o"),[u"'cmovnel'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'cmovnew',0          ; DATA XREF: test_jcc+85\xe2\x86\x91o"),[u"'cmovnew'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'cmovnol',0          ; DATA XREF: test_jcc+1461\xe2\x86\x91o"),[u"'cmovnol'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'cmovnow',0          ; DATA XREF: test_jcc+148F\xe2\x86\x91o"),[u"'cmovnow'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'cmovnpl',0          ; DATA XREF: test_jcc+11D2\xe2\x86\x91o"),[u"'cmovnpl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'cmovnpw',0          ; DATA XREF: test_jcc+1201\xe2\x86\x91o"),[u"'cmovnpw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'cmovnsl',0          ; DATA XREF: test_jcc+1768\xe2\x86\x91o"),[u"'cmovnsl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'cmovnsw',0          ; DATA XREF: test_jcc+1797\xe2\x86\x91o"),[u"'cmovnsw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'cmovol',0           ; DATA XREF: test_jcc+130D\xe2\x86\x91o"),[u"'cmovol'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'cmovow',0           ; DATA XREF: test_jcc+133B\xe2\x86\x91o"),[u"'cmovow'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'cmovpl',0           ; DATA XREF: test_jcc+10A6\xe2\x86\x91o"),[u"'cmovpl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'cmovpw',0           ; DATA XREF: test_jcc+10D5\xe2\x86\x91o"),[u"'cmovpw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'cmovsl',0           ; DATA XREF: test_jcc+15A6\xe2\x86\x91o"),[u"'cmovsl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'cmovsw',0           ; DATA XREF: test_jcc+15D5\xe2\x86\x91o"),[u"'cmovsw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'cmpb',0             ; DATA XREF: exec_cmpb+34\xe2\x86\x91o"),[u"'cmpb'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'cmpl',0             ; DATA XREF: exec_cmpl+34\xe2\x86\x91o"),[u"'cmpl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'cmpsb',0            ; DATA XREF: test_string+110B\xe2\x86\x91o"),[u"'cmpsb'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'cmpsl',0            ; DATA XREF: test_string+1198\xe2\x86\x91o"),[u"'cmpsl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'cmpsw',0            ; DATA XREF: test_string+1152\xe2\x86\x91o"),[u"'cmpsw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'cmpw',0             ; DATA XREF: exec_cmpw+35\xe2\x86\x91o"),[u"'cmpw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'cmpxchg8b: eax=%08lx edx=%08lx op1=%016llx CC=%02lx',0Ah,0"),[u"'cmpxchg8b: eax=%08lx edx=%08lx op1=%016llx CC=%02lx'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'cmpxchgb',0         ; DATA XREF: test_xchg+295\xe2\x86\x91o"),[u"'cmpxchgb'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'cmpxchgl',0         ; DATA XREF: test_xchg+226\xe2\x86\x91o"),[u"'cmpxchgl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'cmpxchgw',0         ; DATA XREF: test_xchg+25E\xe2\x86\x91o"),[u"'cmpxchgw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'cwd',0              ; DATA XREF: test_conv+6F\xe2\x86\x91o"),[u"'cwd'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'cwde',0             ; DATA XREF: test_conv+45\xe2\x86\x91o"),[u"'cwde'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'cyggcc_s-1.dll',0   ; DATA XREF: sub_401090+9\xe2\x86\x91o"),[u"'cyggcc_s-1.dll'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'daa',0              ; DATA XREF: test_bcd+3D\xe2\x86\x91o"),[u"'daa'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'das',0              ; DATA XREF: test_bcd+373\xe2\x86\x91o"),[u"'das'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'decb',0             ; DATA XREF: exec_decb+2C\xe2\x86\x91o"),[u"'decb'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'decl',0             ; DATA XREF: exec_decl+2B\xe2\x86\x91o"),[u"'decl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'decw',0             ; DATA XREF: exec_decw+2C\xe2\x86\x91o"),[u"'decw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'divb',0             ; DATA XREF: test_divb+2B\xe2\x86\x91o"),[u"'divb'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'divl',0             ; DATA XREF: test_divl+3A\xe2\x86\x91o"),[u"'divl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'divw',0             ; DATA XREF: test_divw+3B\xe2\x86\x91o"),[u"'divw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'e',0                ; DATA XREF: test_fcmov+5B\xe2\x86\x91o"),[u"'e'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'fcmov%s eflags=0x%04lx-> %f',0Ah,0"),[u"'fcmov%s eflags=0x%04lx-> %f'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'fcom(%f %f)=%04lx',0Ah,0 ; DATA XREF: test_fcmp+17\xe2\x86\x91o"),[u"'fcom(%f %f)=%04lx'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'fcomi(%f %f)=%04lx %02lx',0Ah,0"),[u"'fcomi(%f %f)=%04lx %02lx'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'file.txt',0"),[u"'file.txt'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'fld1= %f',0Ah,0     ; DATA XREF: test_fconst+C\xe2\x86\x91o"),[u"'fld1= %f'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'fldl2e= %f',0Ah,0   ; DATA XREF: test_fconst+2A\xe2\x86\x91o"),[u"'fldl2e= %f'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'fldl2t= %f',0Ah,0   ; DATA XREF: test_fconst+18\xe2\x86\x91o"),[u"'fldl2t= %f'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'fldlg2= %f',0Ah,0   ; DATA XREF: test_fconst+4E\xe2\x86\x91o"),[u"'fldlg2= %f'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'fldln2= %f',0Ah,0   ; DATA XREF: test_fconst+60\xe2\x86\x91o"),[u"'fldln2= %f'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'fldpi= %f',0Ah,0    ; DATA XREF: test_fconst+3C\xe2\x86\x91o"),[u"'fldpi= %f'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'fldz= %f',0Ah,0     ; DATA XREF: test_fconst+72\xe2\x86\x91o"),[u"'fldz= %f'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'fptag=%04x',0Ah,0   ; DATA XREF: test_fenv+1B6\xe2\x86\x91o"),[u"'fptag=%04x'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'fpuc=%04x fpus=%04x fptag=%04x',0Ah,0"),[u"'fpuc=%04x fpus=%04x fptag=%04x'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'fucom(%f %f)=%04lx',0Ah,0"),[u"'fucom(%f %f)=%04lx'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'fucomi(%f %f)=%04lx %02lx',0Ah,0"),[u"'fucomi(%f %f)=%04lx %02lx'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'fxam(%f)=%04lx',0Ah,0 ; DATA XREF: test_fcmp+F6\xe2\x86\x91o"),[u"'fxam(%f)=%04lx'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'idivb',0            ; DATA XREF: test_idivb+2B\xe2\x86\x91o"),[u"'idivb'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'idivl',0            ; DATA XREF: test_idivl+3A\xe2\x86\x91o"),[u"'idivl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'idivw',0            ; DATA XREF: test_idivw+3B\xe2\x86\x91o"),[u"'idivw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'imulb',0            ; DATA XREF: test_imulb+2D\xe2\x86\x91o"),[u"'imulb'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'imull im',0         ; DATA XREF: test_mul+575\xe2\x86\x91o"),[u"'imull im'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'imull',0            ; DATA XREF: test_imull+3C\xe2\x86\x91o"),[u"'imull'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'imulw im',0         ; DATA XREF: test_mul+46C\xe2\x86\x91o"),[u"'imulw im'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'imulw',0            ; DATA XREF: test_imulw+3D\xe2\x86\x91o"),[u"'imulw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'incb',0             ; DATA XREF: exec_incb+2C\xe2\x86\x91o"),[u"'incb'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'incl',0             ; DATA XREF: exec_incl+2B\xe2\x86\x91o"),[u"'incl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'incw',0             ; DATA XREF: exec_incw+2C\xe2\x86\x91o"),[u"'incw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'ja',0               ; DATA XREF: test_jcc+E95\xe2\x86\x91o"),[u"'ja'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'jae',0              ; DATA XREF: test_jcc+CD3\xe2\x86\x91o"),[u"'jae'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'jb',0               ; DATA XREF: test_jcc+94F\xe2\x86\x91o"),[u"'jb'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'jbe',0              ; DATA XREF: test_jcc+B11\xe2\x86\x91o"),[u"'jbe'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'jcxz',0             ; DATA XREF: test_loop:loc_4081F6\xe2\x86\x91o"),[u"'jcxz'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'je',0               ; DATA XREF: test_jcc+130\xe2\x86\x91o"),[u"'je'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'jecxz',0            ; DATA XREF: test_loop:loc_4083E9\xe2\x86\x91o"),[u"'jecxz'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'jg',0               ; DATA XREF: test_jcc+78D\xe2\x86\x91o"),[u"'jg'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'jge',0              ; DATA XREF: test_jcc+5CB\xe2\x86\x91o"),[u"'jge'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'jl',0               ; DATA XREF: test_jcc+250\xe2\x86\x91o"),[u"'jl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'jle',0              ; DATA XREF: test_jcc+409\xe2\x86\x91o"),[u"'jle'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'jne',0              ; DATA XREF: test_jcc:loc_4068F5\xe2\x86\x91o"),[u"'jne'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'jno',0              ; DATA XREF: test_jcc+1403\xe2\x86\x91o"),[u"'jno'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'jnp',0              ; DATA XREF: test_jcc+1183\xe2\x86\x91o"),[u"'jnp'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'jns',0              ; DATA XREF: test_jcc+1719\xe2\x86\x91o"),[u"'jns'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'jo',0               ; DATA XREF: test_jcc+12AF\xe2\x86\x91o"),[u"'jo'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'jp',0               ; DATA XREF: test_jcc+1057\xe2\x86\x91o"),[u"'jp'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'js',0               ; DATA XREF: test_jcc+1557\xe2\x86\x91o"),[u"'js'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'la=%016llx %04x',0Ah,0 ; DATA XREF: test_fcvt+5E\xe2\x86\x91o"),[u"'la=%016llx %04x'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'lea %s = %08lx',0Ah,0 ; DATA XREF: test_lea+2A\xe2\x86\x91o"),[u"'lea %s = %08lx'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'lodsb',0            ; DATA XREF: test_string+3AB\xe2\x86\x91o"),[u"'lodsb'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'lodsl',0            ; DATA XREF: test_string+438\xe2\x86\x91o"),[u"'lodsl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'lodsw',0            ; DATA XREF: test_string+3F2\xe2\x86\x91o"),[u"'lodsw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'loopl',0            ; DATA XREF: test_loop:loc_408464\xe2\x86\x91o"),[u"'loopl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'loopnzl',0          ; DATA XREF: test_loop:loc_40855A\xe2\x86\x91o"),[u"'loopnzl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'loopnzw',0          ; DATA XREF: test_loop:loc_40836D\xe2\x86\x91o"),[u"'loopnzw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'loopw',0            ; DATA XREF: test_loop:loc_408273\xe2\x86\x91o"),[u"'loopw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'loopzl',0           ; DATA XREF: test_loop:loc_4084DF\xe2\x86\x91o"),[u"'loopzl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'loopzw',0           ; DATA XREF: test_loop:loc_4082F0\xe2\x86\x91o"),[u"'loopzw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'movsb',0            ; DATA XREF: test_string+703\xe2\x86\x91o"),[u"'movsb'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'movsl',0            ; DATA XREF: test_string+790\xe2\x86\x91o"),[u"'movsl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'movsw',0            ; DATA XREF: test_string+74A\xe2\x86\x91o"),[u"'movsw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'mulb',0             ; DATA XREF: test_mulb+2D\xe2\x86\x91o"),[u"'mulb'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'mull',0             ; DATA XREF: test_mull+3C\xe2\x86\x91o"),[u"'mull'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'mulw',0             ; DATA XREF: test_mulw+3D\xe2\x86\x91o"),[u"'mulw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'nb',0               ; DATA XREF: test_fcmov+AF\xe2\x86\x91o"),[u"'nb'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'nbe',0              ; DATA XREF: test_fcmov+103\xe2\x86\x91o"),[u"'nbe'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'ne',0               ; DATA XREF: test_fcmov+D9\xe2\x86\x91o"),[u"'ne'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'negb',0             ; DATA XREF: exec_negb+2C\xe2\x86\x91o"),[u"'negb'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'negl',0             ; DATA XREF: exec_negl+2C\xe2\x86\x91o"),[u"'negl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'negw',0             ; DATA XREF: exec_negw+2D\xe2\x86\x91o"),[u"'negw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'notb',0             ; DATA XREF: exec_notb+2C\xe2\x86\x91o"),[u"'notb'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'notl',0             ; DATA XREF: exec_notl+2C\xe2\x86\x91o"),[u"'notl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'notw',0             ; DATA XREF: exec_notw+2D\xe2\x86\x91o"),[u"'notw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'nu',0               ; DATA XREF: test_fcmov+199\xe2\x86\x91o"),[u"'nu'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'orb',0              ; DATA XREF: exec_orb+34\xe2\x86\x91o"),[u"'orb'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'orl',0              ; DATA XREF: exec_orl+34\xe2\x86\x91o"),[u"'orl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'orw',0              ; DATA XREF: exec_orw+35\xe2\x86\x91o"),[u"'orw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'popcnt A=%08lx R=%08lx flags=%lx',0Ah,0"),[u"'popcnt A=%08lx R=%08lx flags=%lx'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'popl esp=%08lx',0Ah,0 ; DATA XREF: test_misc+4D\xe2\x86\x91o"),[u"'popl esp=%08lx'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'popw esp=%08lx',0Ah,0 ; DATA XREF: test_misc+6F\xe2\x86\x91o"),[u"'popw esp=%08lx'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'probleme dans allocation de descriptor..',13,10,'$'"),[u"'probleme dans allocation de descriptor..'", u'13', u'10', u"'$'"])
        self.assertEqual(tasm.lex.parse_args(text="'probleme dans dans definition de la taille du segment',13,10,'$'"),[u"'probleme dans dans definition de la taille du segment'", u'13', u'10', u"'$'"])
        self.assertEqual(tasm.lex.parse_args(text="'rclb',0             ; DATA XREF: exec_rclb+3C\xe2\x86\x91o"),[u"'rclb'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'rcll',0             ; DATA XREF: exec_rcll+3C\xe2\x86\x91o"),[u"'rcll'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'rclw',0             ; DATA XREF: exec_rclw+3D\xe2\x86\x91o"),[u"'rclw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'rcrb',0             ; DATA XREF: exec_rcrb+3C\xe2\x86\x91o"),[u"'rcrb'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'rcrl',0             ; DATA XREF: exec_rcrl+3C\xe2\x86\x91o"),[u"'rcrl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'rcrw',0             ; DATA XREF: exec_rcrw+3D\xe2\x86\x91o"),[u"'rcrw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'rep lodsb',0        ; DATA XREF: test_string+555\xe2\x86\x91o"),[u"'rep lodsb'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'rep lodsl',0        ; DATA XREF: test_string+5E4\xe2\x86\x91o"),[u"'rep lodsl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'rep lodsw',0        ; DATA XREF: test_string+59D\xe2\x86\x91o"),[u"'rep lodsw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'rep movsb',0        ; DATA XREF: test_string+8AD\xe2\x86\x91o"),[u"'rep movsb'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'rep movsl',0        ; DATA XREF: test_string+93C\xe2\x86\x91o"),[u"'rep movsl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'rep movsw',0        ; DATA XREF: test_string+8F5\xe2\x86\x91o"),[u"'rep movsw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'rep stosb',0        ; DATA XREF: test_string+1FD\xe2\x86\x91o"),[u"'rep stosb'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'rep stosl',0        ; DATA XREF: test_string+28C\xe2\x86\x91o"),[u"'rep stosl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'rep stosw',0        ; DATA XREF: test_string+245\xe2\x86\x91o"),[u"'rep stosw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'repnz cmpsb',0      ; DATA XREF: test_string+1464\xe2\x86\x91o"),[u"'repnz cmpsb'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'repnz cmpsl',0      ; DATA XREF: test_string+14F3\xe2\x86\x91o"),[u"'repnz cmpsl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'repnz cmpsw',0      ; DATA XREF: test_string+14AC\xe2\x86\x91o"),[u"'repnz cmpsw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'repnz scasb',0      ; DATA XREF: test_string+F5D\xe2\x86\x91o"),[u"'repnz scasb'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'repnz scasl',0      ; DATA XREF: test_string+FEC\xe2\x86\x91o"),[u"'repnz scasl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'repnz scasw',0      ; DATA XREF: test_string+FA5\xe2\x86\x91o"),[u"'repnz scasw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'repz cmpsb',0       ; DATA XREF: test_string+12B5\xe2\x86\x91o"),[u"'repz cmpsb'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'repz cmpsl',0       ; DATA XREF: test_string+1344\xe2\x86\x91o"),[u"'repz cmpsl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'repz cmpsw',0       ; DATA XREF: test_string+12FD\xe2\x86\x91o"),[u"'repz cmpsw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'repz scasb',0       ; DATA XREF: test_string+DAE\xe2\x86\x91o"),[u"'repz scasb'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'repz scasl',0       ; DATA XREF: test_string+E3D\xe2\x86\x91o"),[u"'repz scasl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'repz scasw',0       ; DATA XREF: test_string+DF6\xe2\x86\x91o"),[u"'repz scasw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'res[%d]=%f',0Ah,0   ; DATA XREF: test_fenv+8D\xe2\x86\x91o"),[u"'res[%d]=%f'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'rint(a) = %f',0Ah,0 ; DATA XREF: test_fcvt+101\xe2\x86\x91o"),[u"'rint(a) = %f'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'rolb',0             ; DATA XREF: exec_rolb+3C\xe2\x86\x91o"),[u"'rolb'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'roll',0             ; DATA XREF: exec_roll+3C\xe2\x86\x91o"),[u"'roll'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'rolw',0             ; DATA XREF: exec_rolw+3D\xe2\x86\x91o"),[u"'rolw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'rorb',0             ; DATA XREF: exec_rorb+3C\xe2\x86\x91o"),[u"'rorb'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'rorl',0             ; DATA XREF: exec_rorl+3C\xe2\x86\x91o"),[u"'rorl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'rorw',0             ; DATA XREF: exec_rorw+3D\xe2\x86\x91o"),[u"'rorw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'sarb',0             ; DATA XREF: exec_sarb+3C\xe2\x86\x91o"),[u"'sarb'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'sarl',0             ; DATA XREF: exec_sarl+3C\xe2\x86\x91o"),[u"'sarl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'sarw',0             ; DATA XREF: exec_sarw+3D\xe2\x86\x91o"),[u"'sarw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'sbbb',0             ; DATA XREF: exec_sbbb+34\xe2\x86\x91o"),[u"'sbbb'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'sbbl',0             ; DATA XREF: exec_sbbl+34\xe2\x86\x91o"),[u"'sbbl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'sbbw',0             ; DATA XREF: exec_sbbw+35\xe2\x86\x91o"),[u"'sbbw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'scasb',0            ; DATA XREF: test_string+C04\xe2\x86\x91o"),[u"'scasb'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'scasl',0            ; DATA XREF: test_string+C91\xe2\x86\x91o"),[u"'scasl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'scasw',0            ; DATA XREF: test_string+C4B\xe2\x86\x91o"),[u"'scasw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'seta',0             ; DATA XREF: test_jcc+EBB\xe2\x86\x91o"),[u"'seta'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'setae',0            ; DATA XREF: test_jcc+CF9\xe2\x86\x91o"),[u"'setae'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'setb',0             ; DATA XREF: test_jcc+975\xe2\x86\x91o"),[u"'setb'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'setbe',0            ; DATA XREF: test_jcc+B37\xe2\x86\x91o"),[u"'setbe'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'sete',0             ; DATA XREF: test_jcc+156\xe2\x86\x91o"),[u"'sete'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'setg',0             ; DATA XREF: test_jcc+7B3\xe2\x86\x91o"),[u"'setg'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'setge',0            ; DATA XREF: test_jcc+5F1\xe2\x86\x91o"),[u"'setge'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'setl',0             ; DATA XREF: test_jcc+276\xe2\x86\x91o"),[u"'setl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'setle',0            ; DATA XREF: test_jcc+42F\xe2\x86\x91o"),[u"'setle'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'setne',0            ; DATA XREF: test_jcc+39\xe2\x86\x91o"),[u"'setne'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'setno',0            ; DATA XREF: test_jcc+142E\xe2\x86\x91o"),[u"'setno'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'setnp',0            ; DATA XREF: test_jcc+11A9\xe2\x86\x91o"),[u"'setnp'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'setns',0            ; DATA XREF: test_jcc+173F\xe2\x86\x91o"),[u"'setns'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'seto',0             ; DATA XREF: test_jcc+12DA\xe2\x86\x91o"),[u"'seto'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'setp',0             ; DATA XREF: test_jcc+107D\xe2\x86\x91o"),[u"'setp'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'sets',0             ; DATA XREF: test_jcc+157D\xe2\x86\x91o"),[u"'sets'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'shlb',0             ; DATA XREF: exec_shlb+3C\xe2\x86\x91o"),[u"'shlb'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'shldl',0            ; DATA XREF: exec_shldl+45\xe2\x86\x91o"),[u"'shldl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'shldw',0            ; DATA XREF: exec_shldw+46\xe2\x86\x91o"),[u"'shldw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'shll',0             ; DATA XREF: exec_shll+3C\xe2\x86\x91o"),[u"'shll'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'shlw',0             ; DATA XREF: exec_shlw+3D\xe2\x86\x91o"),[u"'shlw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'shrb',0             ; DATA XREF: exec_shrb+3C\xe2\x86\x91o"),[u"'shrb'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'shrdl',0            ; DATA XREF: exec_shrdl+45\xe2\x86\x91o"),[u"'shrdl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'shrdw',0            ; DATA XREF: exec_shrdw+46\xe2\x86\x91o"),[u"'shrdw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'shrl',0             ; DATA XREF: exec_shrl+3C\xe2\x86\x91o"),[u"'shrl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'shrw',0             ; DATA XREF: exec_shrw+3D\xe2\x86\x91o"),[u"'shrw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'stosb',0            ; DATA XREF: test_string+53\xe2\x86\x91o"),[u"'stosb'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'stosl',0            ; DATA XREF: test_string+E0\xe2\x86\x91o"),[u"'stosl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'stosw',0            ; DATA XREF: test_string+9A\xe2\x86\x91o"),[u"'stosw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'subb',0             ; DATA XREF: exec_subb+34\xe2\x86\x91o"),[u"'subb'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'subl',0             ; DATA XREF: exec_subl+34\xe2\x86\x91o"),[u"'subl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'subw',0             ; DATA XREF: exec_subw+35\xe2\x86\x91o"),[u"'subw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'u',0                ; DATA XREF: test_fcmov+13B\xe2\x86\x91o"),[u"'u'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'xaddb',0            ; DATA XREF: test_xchg+14A\xe2\x86\x91o"),[u"'xaddb'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'xaddl same res=%08x',0Ah,0"),[u"'xaddl same res=%08x'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'xaddl',0            ; DATA XREF: test_xchg+103\xe2\x86\x91o"),[u"'xaddl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'xaddw',0            ; DATA XREF: test_xchg+126\xe2\x86\x91o"),[u"'xaddw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'xchgb',0            ; DATA XREF: test_xchg+5F\xe2\x86\x91o"),[u"'xchgb'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'xchgl',0            ; DATA XREF: test_xchg+17\xe2\x86\x91o"),[u"'xchgl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'xchgw',0            ; DATA XREF: test_xchg+3D\xe2\x86\x91o"),[u"'xchgw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'xlat: EAX=%08lx',0Ah,0 ; DATA XREF: test_misc+25\xe2\x86\x91o"),[u"'xlat: EAX=%08lx'", u'0Ah', u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'xorb',0             ; DATA XREF: exec_xorb+34\xe2\x86\x91o"),[u"'xorb'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'xorl',0             ; DATA XREF: exec_xorl+34\xe2\x86\x91o"),[u"'xorl'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="'xorw',0             ; DATA XREF: exec_xorw+35\xe2\x86\x91o"),[u"'xorw'", u'0'])
        self.assertEqual(tasm.lex.parse_args(text="27h ; '"),[u'27h'])
        self.assertEqual(tasm.lex.parse_args(text="[doublequote+4],'d'"),[u'[doublequote+4]', u"'d'"])
        self.assertEqual(tasm.lex.parse_args(text="ah,9 ; DS:DX->'$'-terminated string"),[u'ah', u'9'])
        self.assertEqual(tasm.lex.parse_args(text="al, 'Z' - 'A' +1"),[u'al', u"'Z' - 'A' +1"])
        self.assertEqual(tasm.lex.parse_args(text="cx, 80h ; '\x80'"),[u'cx', u'80h'])
        self.assertEqual(tasm.lex.parse_args(text="dl,'a'"),[u'dl', u"'a'"])
        self.assertEqual(tasm.lex.parse_args(text="dl,'c'"),[u'dl', u"'c'"])
        self.assertEqual(tasm.lex.parse_args(text="dword ptr buffer,'tseT'"),[u'dword ptr buffer', u"'tseT'"])
        self.assertEqual(tasm.lex.parse_args(text="ebx,'dcba'"),[u'ebx', u"'dcba'"])
        self.assertEqual(tasm.lex.parse_args(text="ecx,'dcba'"),[u'ecx', u"'dcba'"])
        self.assertEqual(tasm.lex.parse_args(text=''),[])
        self.assertEqual(tasm.lex.parse_args(text='((((2030080+64000*26)/4096)+1)*4096)-1'),[u'((((2030080+64000*26)/4096)+1)*4096)-1'])
        self.assertEqual(tasm.lex.parse_args(text='(00+38*3)*320+1/2+33*(3-1)'),[u'(00+38*3)*320+1/2+33*(3-1)'])
        self.assertEqual(tasm.lex.parse_args(text='-0.5                 ; DATA XREF: test_floats+5E\xe2\x86\x91r'),[u'-0.5'])
        self.assertEqual(tasm.lex.parse_args(text='-1'),[u'-1'])
        self.assertEqual(tasm.lex.parse_args(text='-13'),[u'-13'])
        self.assertEqual(tasm.lex.parse_args(text='-20.5                ; DATA XREF: test_floats+46\xe2\x86\x91r'),[u'-20.5'])
        self.assertEqual(tasm.lex.parse_args(text='-4.0                 ; DATA XREF: test_floats+54\xe2\x86\x91r'),[u'-4.0'])
        self.assertEqual(tasm.lex.parse_args(text='-5.0                 ; DATA XREF: test_floats+25\xe2\x86\x91r'),[u'-5.0'])
        self.assertEqual(tasm.lex.parse_args(text='0                    ; DATA XREF: sub_401090+60\xe2\x86\x91w'),[u'0'])
        self.assertEqual(tasm.lex.parse_args(text='0                 ; DATA XREF: _cygwin_crt0_common@8+19C\xe2\x86\x91o'),[u'0'])
        self.assertEqual(tasm.lex.parse_args(text='0                 ; DATA XREF: _cygwin_crt0_common@8+1B1\xe2\x86\x91o'),[u'0'])
        self.assertEqual(tasm.lex.parse_args(text='0                 ; DATA XREF: main:loc_40D571\xe2\x86\x91o'),[u'0'])
        self.assertEqual(tasm.lex.parse_args(text='0                 ; DATA XREF: sub_401090:loc_40110A\xe2\x86\x91o'),[u'0'])
        self.assertEqual(tasm.lex.parse_args(text='0                 ; DATA XREF: test_loop+11\xe2\x86\x91o'),[u'0'])
        self.assertEqual(tasm.lex.parse_args(text='0'),[u'0'])
        self.assertEqual(tasm.lex.parse_args(text='0.5                  ; DATA XREF: test_floats+114\xe2\x86\x91r'),[u'0.5'])
        self.assertEqual(tasm.lex.parse_args(text='000,000,000,000,000,021,000,000,042,000,000,063,009,000,000,009'),[u'000', u'000', u'000', u'000', u'000', u'021', u'000', u'000', u'042', u'000', u'000', u'063', u'009', u'000', u'000', u'009'])
        self.assertEqual(tasm.lex.parse_args(text='000,009,000,000,009,021,000,009,042,000,009,063,009,009,000,009'),[u'000', u'009', u'000', u'000', u'009', u'021', u'000', u'009', u'042', u'000', u'009', u'063', u'009', u'009', u'000', u'009'])
        self.assertEqual(tasm.lex.parse_args(text='000,018,000,000,018,021,000,018,042,000,018,063,009,018,000,009'),[u'000', u'018', u'000', u'000', u'018', u'021', u'000', u'018', u'042', u'000', u'018', u'063', u'009', u'018', u'000', u'009'])
        self.assertEqual(tasm.lex.parse_args(text='000,021,009,000,042,009,000,063,018,000,000,018,000,021,018,000'),[u'000', u'021', u'009', u'000', u'042', u'009', u'000', u'063', u'018', u'000', u'000', u'018', u'000', u'021', u'018', u'000'])
        self.assertEqual(tasm.lex.parse_args(text='000,021,045,000,042,045,000,063,054,000,000,054,000,021,054,000'),[u'000', u'021', u'045', u'000', u'042', u'045', u'000', u'063', u'054', u'000', u'000', u'054', u'000', u'021', u'054', u'000'])
        self.assertEqual(tasm.lex.parse_args(text='000,027,000,000,027,021,000,027,042,000,027,063,009,027,000,009'),[u'000', u'027', u'000', u'000', u'027', u'021', u'000', u'027', u'042', u'000', u'027', u'063', u'009', u'027', u'000', u'009'])
        self.assertEqual(tasm.lex.parse_args(text='000,036,000,000,036,021,000,036,042,000,036,063,009,036,000,009'),[u'000', u'036', u'000', u'000', u'036', u'021', u'000', u'036', u'042', u'000', u'036', u'063', u'009', u'036', u'000', u'009'])
        self.assertEqual(tasm.lex.parse_args(text='000,045,000,000,045,021,000,045,042,000,045,063,009,045,000,009'),[u'000', u'045', u'000', u'000', u'045', u'021', u'000', u'045', u'042', u'000', u'045', u'063', u'009', u'045', u'000', u'009'])
        self.assertEqual(tasm.lex.parse_args(text='000,054,000,000,054,021,000,054,042,000,054,063,009,054,000,009'),[u'000', u'054', u'000', u'000', u'054', u'021', u'000', u'054', u'042', u'000', u'054', u'063', u'009', u'054', u'000', u'009'])
        self.assertEqual(tasm.lex.parse_args(text='000,063,000,000,063,021,000,063,042,000,063,063,009,063,000,009'),[u'000', u'063', u'000', u'000', u'063', u'021', u'000', u'063', u'042', u'000', u'063', u'063', u'009', u'063', u'000', u'009'])
        self.assertEqual(tasm.lex.parse_args(text='009,021,009,009,042,009,009,063,018,009,000,018,009,021,018,009'),[u'009', u'021', u'009', u'009', u'042', u'009', u'009', u'063', u'018', u'009', u'000', u'018', u'009', u'021', u'018', u'009'])
        self.assertEqual(tasm.lex.parse_args(text='009,021,045,009,042,045,009,063,054,009,000,054,009,021,054,009'),[u'009', u'021', u'045', u'009', u'042', u'045', u'009', u'063', u'054', u'009', u'000', u'054', u'009', u'021', u'054', u'009'])
        self.assertEqual(tasm.lex.parse_args(text='018,021,009,018,042,009,018,063,018,018,000,018,018,021,018,018'),[u'018', u'021', u'009', u'018', u'042', u'009', u'018', u'063', u'018', u'018', u'000', u'018', u'018', u'021', u'018', u'018'])
        self.assertEqual(tasm.lex.parse_args(text='018,021,045,018,042,045,018,063,054,018,000,054,018,021,054,018'),[u'018', u'021', u'045', u'018', u'042', u'045', u'018', u'063', u'054', u'018', u'000', u'054', u'018', u'021', u'054', u'018'])
        self.assertEqual(tasm.lex.parse_args(text='027,021,009,027,042,009,027,063,018,027,000,018,027,021,018,027'),[u'027', u'021', u'009', u'027', u'042', u'009', u'027', u'063', u'018', u'027', u'000', u'018', u'027', u'021', u'018', u'027'])
        self.assertEqual(tasm.lex.parse_args(text='027,021,045,027,042,045,027,063,054,027,000,054,027,021,054,027'),[u'027', u'021', u'045', u'027', u'042', u'045', u'027', u'063', u'054', u'027', u'000', u'054', u'027', u'021', u'054', u'027'])
        self.assertEqual(tasm.lex.parse_args(text='036,000,000,036,000,021,036,000,042,036,000,063,045,000,000,045'),[u'036', u'000', u'000', u'036', u'000', u'021', u'036', u'000', u'042', u'036', u'000', u'063', u'045', u'000', u'000', u'045'])
        self.assertEqual(tasm.lex.parse_args(text='036,009,000,036,009,021,036,009,042,036,009,063,045,009,000,045'),[u'036', u'009', u'000', u'036', u'009', u'021', u'036', u'009', u'042', u'036', u'009', u'063', u'045', u'009', u'000', u'045'])
        self.assertEqual(tasm.lex.parse_args(text='036,018,000,036,018,021,036,018,042,036,018,063,045,018,000,045'),[u'036', u'018', u'000', u'036', u'018', u'021', u'036', u'018', u'042', u'036', u'018', u'063', u'045', u'018', u'000', u'045'])
        self.assertEqual(tasm.lex.parse_args(text='036,021,009,036,042,009,036,063,018,036,000,018,036,021,018,036'),[u'036', u'021', u'009', u'036', u'042', u'009', u'036', u'063', u'018', u'036', u'000', u'018', u'036', u'021', u'018', u'036'])
        self.assertEqual(tasm.lex.parse_args(text='036,021,045,036,042,045,036,063,054,036,000,054,036,021,054,036'),[u'036', u'021', u'045', u'036', u'042', u'045', u'036', u'063', u'054', u'036', u'000', u'054', u'036', u'021', u'054', u'036'])
        self.assertEqual(tasm.lex.parse_args(text='036,027,000,036,027,021,036,027,042,036,027,063,045,027,000,045'),[u'036', u'027', u'000', u'036', u'027', u'021', u'036', u'027', u'042', u'036', u'027', u'063', u'045', u'027', u'000', u'045'])
        self.assertEqual(tasm.lex.parse_args(text='036,036,000,036,036,021,036,036,042,036,036,063,045,036,000,045'),[u'036', u'036', u'000', u'036', u'036', u'021', u'036', u'036', u'042', u'036', u'036', u'063', u'045', u'036', u'000', u'045'])
        self.assertEqual(tasm.lex.parse_args(text='036,045,000,036,045,021,036,045,042,036,045,063,045,045,000,045'),[u'036', u'045', u'000', u'036', u'045', u'021', u'036', u'045', u'042', u'036', u'045', u'063', u'045', u'045', u'000', u'045'])
        self.assertEqual(tasm.lex.parse_args(text='036,054,000,036,054,021,036,054,042,036,054,063,045,054,000,045'),[u'036', u'054', u'000', u'036', u'054', u'021', u'036', u'054', u'042', u'036', u'054', u'063', u'045', u'054', u'000', u'045'])
        self.assertEqual(tasm.lex.parse_args(text='036,063,000,036,063,021,036,063,042,036,063,063,045,063,000,045'),[u'036', u'063', u'000', u'036', u'063', u'021', u'036', u'063', u'042', u'036', u'063', u'063', u'045', u'063', u'000', u'045'])
        self.assertEqual(tasm.lex.parse_args(text='042,018,000,063,027,000,000,027,000,021,027,000,042,027,000,063'),[u'042', u'018', u'000', u'063', u'027', u'000', u'000', u'027', u'000', u'021', u'027', u'000', u'042', u'027', u'000', u'063'])
        self.assertEqual(tasm.lex.parse_args(text='042,018,009,063,027,009,000,027,009,021,027,009,042,027,009,063'),[u'042', u'018', u'009', u'063', u'027', u'009', u'000', u'027', u'009', u'021', u'027', u'009', u'042', u'027', u'009', u'063'])
        self.assertEqual(tasm.lex.parse_args(text='042,018,018,063,027,018,000,027,018,021,027,018,042,027,018,063'),[u'042', u'018', u'018', u'063', u'027', u'018', u'000', u'027', u'018', u'021', u'027', u'018', u'042', u'027', u'018', u'063'])
        self.assertEqual(tasm.lex.parse_args(text='042,018,027,063,027,027,000,027,027,021,027,027,042,027,027,063'),[u'042', u'018', u'027', u'063', u'027', u'027', u'000', u'027', u'027', u'021', u'027', u'027', u'042', u'027', u'027', u'063'])
        self.assertEqual(tasm.lex.parse_args(text='042,018,036,063,027,036,000,027,036,021,027,036,042,027,036,063'),[u'042', u'018', u'036', u'063', u'027', u'036', u'000', u'027', u'036', u'021', u'027', u'036', u'042', u'027', u'036', u'063'])
        self.assertEqual(tasm.lex.parse_args(text='042,018,045,063,027,045,000,027,045,021,027,045,042,027,045,063'),[u'042', u'018', u'045', u'063', u'027', u'045', u'000', u'027', u'045', u'021', u'027', u'045', u'042', u'027', u'045', u'063'])
        self.assertEqual(tasm.lex.parse_args(text='042,018,054,063,027,054,000,027,054,021,027,054,042,027,054,063'),[u'042', u'018', u'054', u'063', u'027', u'054', u'000', u'027', u'054', u'021', u'027', u'054', u'042', u'027', u'054', u'063'])
        self.assertEqual(tasm.lex.parse_args(text='042,018,063,063,027,063,000,027,063,021,027,063,042,027,063,063'),[u'042', u'018', u'063', u'063', u'027', u'063', u'000', u'027', u'063', u'021', u'027', u'063', u'042', u'027', u'063', u'063'])
        self.assertEqual(tasm.lex.parse_args(text='042,054,000,063,063,000,000,063,000,021,063,000,042,063,000,063'),[u'042', u'054', u'000', u'063', u'063', u'000', u'000', u'063', u'000', u'021', u'063', u'000', u'042', u'063', u'000', u'063'])
        self.assertEqual(tasm.lex.parse_args(text='042,054,009,063,063,009,000,063,009,021,063,009,042,063,009,063'),[u'042', u'054', u'009', u'063', u'063', u'009', u'000', u'063', u'009', u'021', u'063', u'009', u'042', u'063', u'009', u'063'])
        self.assertEqual(tasm.lex.parse_args(text='042,054,018,063,063,018,000,063,018,021,063,018,042,063,018,063'),[u'042', u'054', u'018', u'063', u'063', u'018', u'000', u'063', u'018', u'021', u'063', u'018', u'042', u'063', u'018', u'063'])
        self.assertEqual(tasm.lex.parse_args(text='042,054,027,063,063,027,000,063,027,021,063,027,042,063,027,063'),[u'042', u'054', u'027', u'063', u'063', u'027', u'000', u'063', u'027', u'021', u'063', u'027', u'042', u'063', u'027', u'063'])
        self.assertEqual(tasm.lex.parse_args(text='042,054,036,063,063,036,000,063,036,021,063,036,042,063,036,063'),[u'042', u'054', u'036', u'063', u'063', u'036', u'000', u'063', u'036', u'021', u'063', u'036', u'042', u'063', u'036', u'063'])
        self.assertEqual(tasm.lex.parse_args(text='042,054,045,063,063,045,000,063,045,021,063,045,042,063,045,063'),[u'042', u'054', u'045', u'063', u'063', u'045', u'000', u'063', u'045', u'021', u'063', u'045', u'042', u'063', u'045', u'063'])
        self.assertEqual(tasm.lex.parse_args(text='042,054,054,063,063,054,000,063,054,021,063,054,042,063,054,063'),[u'042', u'054', u'054', u'063', u'063', u'054', u'000', u'063', u'054', u'021', u'063', u'054', u'042', u'063', u'054', u'063'])
        self.assertEqual(tasm.lex.parse_args(text='042,054,063,063,063,063,000,063,063,021,063,063,042,063,063,063'),[u'042', u'054', u'063', u'063', u'063', u'063', u'000', u'063', u'063', u'021', u'063', u'063', u'042', u'063', u'063', u'063'])
        self.assertEqual(tasm.lex.parse_args(text='045,021,009,045,042,009,045,063,018,045,000,018,045,021,018,045'),[u'045', u'021', u'009', u'045', u'042', u'009', u'045', u'063', u'018', u'045', u'000', u'018', u'045', u'021', u'018', u'045'])
        self.assertEqual(tasm.lex.parse_args(text='045,021,045,045,042,045,045,063,054,045,000,054,045,021,054,045'),[u'045', u'021', u'045', u'045', u'042', u'045', u'045', u'063', u'054', u'045', u'000', u'054', u'045', u'021', u'054', u'045'])
        self.assertEqual(tasm.lex.parse_args(text='054,021,009,054,042,009,054,063,018,054,000,018,054,021,018,054'),[u'054', u'021', u'009', u'054', u'042', u'009', u'054', u'063', u'018', u'054', u'000', u'018', u'054', u'021', u'018', u'054'])
        self.assertEqual(tasm.lex.parse_args(text='054,021,045,054,042,045,054,063,054,054,000,054,054,021,054,054'),[u'054', u'021', u'045', u'054', u'042', u'045', u'054', u'063', u'054', u'054', u'000', u'054', u'054', u'021', u'054', u'054'])
        self.assertEqual(tasm.lex.parse_args(text='063,021,009,063,042,009,063,063,018,063,000,018,063,021,018,063'),[u'063', u'021', u'009', u'063', u'042', u'009', u'063', u'063', u'018', u'063', u'000', u'018', u'063', u'021', u'018', u'063'])
        self.assertEqual(tasm.lex.parse_args(text='063,021,045,063,042,045,063,063,054,063,000,054,063,021,054,063'),[u'063', u'021', u'045', u'063', u'042', u'045', u'063', u'063', u'054', u'063', u'000', u'054', u'063', u'021', u'054', u'063'])
        self.assertEqual(tasm.lex.parse_args(text='0A0h ; \xc2\xa0'),[u'0A0h'])
        self.assertEqual(tasm.lex.parse_args(text='0A2h ; \xd1\x9e'),[u'0A2h'])
        self.assertEqual(tasm.lex.parse_args(text='0A3h ; \xd0\x88'),[u'0A3h'])
        self.assertEqual(tasm.lex.parse_args(text='0A4h ; \xc2\xa4'),[u'0A4h'])
        self.assertEqual(tasm.lex.parse_args(text='0A5h ; \xd2\x90'),[u'0A5h'])
        self.assertEqual(tasm.lex.parse_args(text='0A6h ; \xc2\xa6'),[u'0A6h'])
        self.assertEqual(tasm.lex.parse_args(text='0A8h ; \xd0\x81'),[u'0A8h'])
        self.assertEqual(tasm.lex.parse_args(text='0A9h ; \xc2\xa9'),[u'0A9h'])
        self.assertEqual(tasm.lex.parse_args(text='0ACh ; \xc2\xac'),[u'0ACh'])
        self.assertEqual(tasm.lex.parse_args(text='0AEh ; \xc2\xae'),[u'0AEh'])
        self.assertEqual(tasm.lex.parse_args(text='0Ah'),[u'0Ah'])
        self.assertEqual(tasm.lex.parse_args(text='0B0h ; \xc2\xb0'),[u'0B0h'])
        self.assertEqual(tasm.lex.parse_args(text='0B1h ; \xc2\xb1'),[u'0B1h'])
        self.assertEqual(tasm.lex.parse_args(text='0B2h ; \xd0\x86'),[u'0B2h'])
        self.assertEqual(tasm.lex.parse_args(text='0B3h ; \xd1\x96'),[u'0B3h'])
        self.assertEqual(tasm.lex.parse_args(text='0B4h ; \xd2\x91'),[u'0B4h'])
        self.assertEqual(tasm.lex.parse_args(text='0B5h ; \xc2\xb5'),[u'0B5h'])
        self.assertEqual(tasm.lex.parse_args(text='0BAh ; \xd1\x94'),[u'0BAh'])
        self.assertEqual(tasm.lex.parse_args(text='0BC6058h'),[u'0BC6058h'])
        self.assertEqual(tasm.lex.parse_args(text='0BCh ; \xd1\x98'),[u'0BCh'])
        self.assertEqual(tasm.lex.parse_args(text='0BEh ; \xd1\x95'),[u'0BEh'])
        self.assertEqual(tasm.lex.parse_args(text='0BFh ; \xd1\x97'),[u'0BFh'])
        self.assertEqual(tasm.lex.parse_args(text='0Bh'),[u'0Bh'])
        self.assertEqual(tasm.lex.parse_args(text='0C0h ; \xd0\x90'),[u'0C0h'])
        self.assertEqual(tasm.lex.parse_args(text='0C1h ; \xd0\x91'),[u'0C1h'])
        self.assertEqual(tasm.lex.parse_args(text='0C2h ; \xd0\x92'),[u'0C2h'])
        self.assertEqual(tasm.lex.parse_args(text='0C3h ; \xd0\x93'),[u'0C3h'])
        self.assertEqual(tasm.lex.parse_args(text='0C4h ; \xd0\x94'),[u'0C4h'])
        self.assertEqual(tasm.lex.parse_args(text='0C5h ; \xd0\x95'),[u'0C5h'])
        self.assertEqual(tasm.lex.parse_args(text='0C6h ; \xd0\x96'),[u'0C6h'])
        self.assertEqual(tasm.lex.parse_args(text='0C7h ; \xd0\x97'),[u'0C7h'])
        self.assertEqual(tasm.lex.parse_args(text='0C8h ; \xd0\x98'),[u'0C8h'])
        self.assertEqual(tasm.lex.parse_args(text='0C9h ; \xd0\x99'),[u'0C9h'])
        self.assertEqual(tasm.lex.parse_args(text='0CAh ; \xd0\x9a'),[u'0CAh'])
        self.assertEqual(tasm.lex.parse_args(text='0CBh ; \xd0\x9b'),[u'0CBh'])
        self.assertEqual(tasm.lex.parse_args(text='0CCh ; \xd0\x9c'),[u'0CCh'])
        self.assertEqual(tasm.lex.parse_args(text='0CDh ; \xd0\x9d'),[u'0CDh'])
        self.assertEqual(tasm.lex.parse_args(text='0Ch'),[u'0Ch'])
        self.assertEqual(tasm.lex.parse_args(text='0D0h ; \xd0\xa0'),[u'0D0h'])
        self.assertEqual(tasm.lex.parse_args(text='0D1h ; \xd0\xa1'),[u'0D1h'])
        self.assertEqual(tasm.lex.parse_args(text='0D2h ; \xd0\xa2'),[u'0D2h'])
        self.assertEqual(tasm.lex.parse_args(text='0D4h ; \xd0\xa4'),[u'0D4h'])
        self.assertEqual(tasm.lex.parse_args(text='0D9h ; \xd0\xa9'),[u'0D9h'])
        self.assertEqual(tasm.lex.parse_args(text='0DAh ; \xd0\xaa'),[u'0DAh'])
        self.assertEqual(tasm.lex.parse_args(text='0DBh ; \xd0\xab'),[u'0DBh'])
        self.assertEqual(tasm.lex.parse_args(text='0DCh ; \xd0\xac'),[u'0DCh'])
        self.assertEqual(tasm.lex.parse_args(text='0DDh ; \xd0\xad'),[u'0DDh'])
        self.assertEqual(tasm.lex.parse_args(text='0DEh ; \xd0\xae'),[u'0DEh'])
        self.assertEqual(tasm.lex.parse_args(text='0Dh'),[u'0Dh'])
        self.assertEqual(tasm.lex.parse_args(text='0E0h ; \xd0\xb0'),[u'0E0h'])
        self.assertEqual(tasm.lex.parse_args(text='0E1h ; \xd0\xb1'),[u'0E1h'])
        self.assertEqual(tasm.lex.parse_args(text='0E3h ; \xd0\xb3'),[u'0E3h'])
        self.assertEqual(tasm.lex.parse_args(text='0E4h ; \xd0\xb4'),[u'0E4h'])
        self.assertEqual(tasm.lex.parse_args(text='0E5h ; \xd0\xb5'),[u'0E5h'])
        self.assertEqual(tasm.lex.parse_args(text='0E7h ; \xd0\xb7'),[u'0E7h'])
        self.assertEqual(tasm.lex.parse_args(text='0E8h ; \xd0\xb8'),[u'0E8h'])
        self.assertEqual(tasm.lex.parse_args(text='0E9h ; \xd0\xb9'),[u'0E9h'])
        self.assertEqual(tasm.lex.parse_args(text='0EBh ; \xd0\xbb'),[u'0EBh'])
        self.assertEqual(tasm.lex.parse_args(text='0ECh ; \xd0\xbc'),[u'0ECh'])
        self.assertEqual(tasm.lex.parse_args(text='0EDh ; \xd0\xbd'),[u'0EDh'])
        self.assertEqual(tasm.lex.parse_args(text='0EEh ; \xd0\xbe'),[u'0EEh'])
        self.assertEqual(tasm.lex.parse_args(text='0EFh ; \xd0\xbf'),[u'0EFh'])
        self.assertEqual(tasm.lex.parse_args(text='0Eh'),[u'0Eh'])
        self.assertEqual(tasm.lex.parse_args(text='0F0h ; \xd1\x80'),[u'0F0h'])
        self.assertEqual(tasm.lex.parse_args(text='0F1h ; \xd1\x81'),[u'0F1h'])
        self.assertEqual(tasm.lex.parse_args(text='0F3h ; \xd1\x83'),[u'0F3h'])
        self.assertEqual(tasm.lex.parse_args(text='0F4h ; \xd1\x84'),[u'0F4h'])
        self.assertEqual(tasm.lex.parse_args(text='0F5h ; \xd1\x85'),[u'0F5h'])
        self.assertEqual(tasm.lex.parse_args(text='0F6h ; \xd1\x86'),[u'0F6h'])
        self.assertEqual(tasm.lex.parse_args(text='0F7h ; \xd1\x87'),[u'0F7h'])
        self.assertEqual(tasm.lex.parse_args(text='0F8h ; \xd1\x88'),[u'0F8h'])
        self.assertEqual(tasm.lex.parse_args(text='0F9h ; \xd1\x89'),[u'0F9h'])
        self.assertEqual(tasm.lex.parse_args(text='0FAh ; \xd1\x8a'),[u'0FAh'])
        self.assertEqual(tasm.lex.parse_args(text='0FBh ; \xd1\x8b'),[u'0FBh'])
        self.assertEqual(tasm.lex.parse_args(text='0FCh ; \xd1\x8c'),[u'0FCh'])
        self.assertEqual(tasm.lex.parse_args(text='0FEh ; \xd1\x8e'),[u'0FEh'])
        self.assertEqual(tasm.lex.parse_args(text='0FFFFFFFFh, 40D5C0h, 0'),[u'0FFFFFFFFh', u'40D5C0h', u'0'])
        self.assertEqual(tasm.lex.parse_args(text='0FFFFFFFFh, 8 dup(0) ; DATA XREF: _cygwin_crt0_common@8+59\xe2\x86\x91o'),[u'0FFFFFFFFh', u'8 dup(0)'])
        self.assertEqual(tasm.lex.parse_args(text='0FFh ; \xd1\x8f'),[u'0FFh'])
        self.assertEqual(tasm.lex.parse_args(text='0Fh'),[u'0Fh'])
        self.assertEqual(tasm.lex.parse_args(text='0ffh,0dfh,0h'),[u'0ffh', u'0dfh', u'0h'])
        self.assertEqual(tasm.lex.parse_args(text='1'),[u'1'])
        self.assertEqual(tasm.lex.parse_args(text='1,2,3,4'),[u'1', u'2', u'3', u'4'])
        self.assertEqual(tasm.lex.parse_args(text='1,2,3,4,5,6,7,8,9,10,11,12,13,14'),[u'1', u'2', u'3', u'4', u'5', u'6', u'7', u'8', u'9', u'10', u'11', u'12', u'13', u'14'])
        self.assertEqual(tasm.lex.parse_args(text='10 dup (?)'),[u'10 dup (?)'])
        self.assertEqual(tasm.lex.parse_args(text='100 dup (1)'),[u'100 dup (1)'])
        self.assertEqual(tasm.lex.parse_args(text='1000h dup(?) ;IGNORE'),[u'1000h dup(?)'])
        self.assertEqual(tasm.lex.parse_args(text='1000h dup(?)'),[u'1000h dup(?)'])
        self.assertEqual(tasm.lex.parse_args(text='10h'),[u'10h'])
        self.assertEqual(tasm.lex.parse_args(text='11'),[u'11'])
        self.assertEqual(tasm.lex.parse_args(text='11,-11,2,4'),[u'11', u'-11', u'2', u'4'])
        self.assertEqual(tasm.lex.parse_args(text='11,-11,2,4000000'),[u'11', u'-11', u'2', u'4000000'])
        self.assertEqual(tasm.lex.parse_args(text='111,1'),[u'111', u'1'])
        self.assertEqual(tasm.lex.parse_args(text='11h'),[u'11h'])
        self.assertEqual(tasm.lex.parse_args(text='12'),[u'12'])
        self.assertEqual(tasm.lex.parse_args(text='12345'),[u'12345'])
        self.assertEqual(tasm.lex.parse_args(text='128.0                ; DATA XREF: test_floats+3C\xe2\x86\x91r'),[u'128.0'])
        self.assertEqual(tasm.lex.parse_args(text='12h'),[u'12h'])
        self.assertEqual(tasm.lex.parse_args(text='13'),[u'13'])
        self.assertEqual(tasm.lex.parse_args(text='131'),[u'131'])
        self.assertEqual(tasm.lex.parse_args(text='13h'),[u'13h'])
        self.assertEqual(tasm.lex.parse_args(text='141'),[u'141'])
        self.assertEqual(tasm.lex.parse_args(text='14h                 ; DATA XREF: sub_401090+71\xe2\x86\x91o'),[u'14h'])
        self.assertEqual(tasm.lex.parse_args(text='14h'),[u'14h'])
        self.assertEqual(tasm.lex.parse_args(text='1500 ; 8*2*3 ;+1 +19*13*2*4'),[u'1500'])
        self.assertEqual(tasm.lex.parse_args(text='15h'),[u'15h'])
        self.assertEqual(tasm.lex.parse_args(text='16h'),[u'16h'])
        self.assertEqual(tasm.lex.parse_args(text='17h'),[u'17h'])
        self.assertEqual(tasm.lex.parse_args(text='18h'),[u'18h'])
        self.assertEqual(tasm.lex.parse_args(text='1Ah'),[u'1Ah'])
        self.assertEqual(tasm.lex.parse_args(text='1Bh'),[u'1Bh'])
        self.assertEqual(tasm.lex.parse_args(text='1Ch'),[u'1Ch'])
        self.assertEqual(tasm.lex.parse_args(text='1Dh'),[u'1Dh'])
        self.assertEqual(tasm.lex.parse_args(text='1Eh'),[u'1Eh'])
        self.assertEqual(tasm.lex.parse_args(text='1Fh'),[u'1Fh'])
        self.assertEqual(tasm.lex.parse_args(text='2'),[u'2'])
        self.assertEqual(tasm.lex.parse_args(text='2,5,0'),[u'2', u'5', u'0'])
        self.assertEqual(tasm.lex.parse_args(text='2,5,6'),[u'2', u'5', u'6'])
        self.assertEqual(tasm.lex.parse_args(text='2.0                  ; DATA XREF: test_fcmov:loc_40A370\xe2\x86\x91r'),[u'2.0'])
        self.assertEqual(tasm.lex.parse_args(text='2.0                  ; DATA XREF: test_floats+10\xe2\x86\x91r'),[u'2.0'])
        self.assertEqual(tasm.lex.parse_args(text='20h'),[u'20h'])
        self.assertEqual(tasm.lex.parse_args(text='21h ; !'),[u'21h'])
        self.assertEqual(tasm.lex.parse_args(text='21h ; DOS - 2+ - CLOSE A FILE WITH HANDLE'),[u'21h'])
        self.assertEqual(tasm.lex.parse_args(text='21h ; DOS - 2+ - MOVE FILE READ/WRITE POINTER (LSEEK)'),[u'21h'])
        self.assertEqual(tasm.lex.parse_args(text='21h ; DOS - 2+ - OPEN DISK FILE WITH HANDLE'),[u'21h'])
        self.assertEqual(tasm.lex.parse_args(text='21h ; DOS INT 21h ; DOS INT 21h'),[u'21h'])
        self.assertEqual(tasm.lex.parse_args(text='21h ; DOS INT 21h'),[u'21h'])
        self.assertEqual(tasm.lex.parse_args(text='21h ; maybe redirected under DOS 2+ for output to file'),[u'21h'])
        self.assertEqual(tasm.lex.parse_args(text='21h'),[u'21h'])
        self.assertEqual(tasm.lex.parse_args(text='223,22'),[u'223', u'22'])
        self.assertEqual(tasm.lex.parse_args(text='22h ; "'),[u'22h'])
        self.assertEqual(tasm.lex.parse_args(text='23h ; #'),[u'23h'])
        self.assertEqual(tasm.lex.parse_args(text='24h ; $'),[u'24h'])
        self.assertEqual(tasm.lex.parse_args(text='25h ; %'),[u'25h'])
        self.assertEqual(tasm.lex.parse_args(text='26h ; &'),[u'26h'])
        self.assertEqual(tasm.lex.parse_args(text='280h dup(?)'),[u'280h dup(?)'])
        self.assertEqual(tasm.lex.parse_args(text='28h ; ('),[u'28h'])
        self.assertEqual(tasm.lex.parse_args(text='29h ; )'),[u'29h'])
        self.assertEqual(tasm.lex.parse_args(text='2Ah ; *'),[u'2Ah'])
        self.assertEqual(tasm.lex.parse_args(text='2Bh ; +'),[u'2Bh'])
        self.assertEqual(tasm.lex.parse_args(text='2Ch ; ,'),[u'2Ch'])
        self.assertEqual(tasm.lex.parse_args(text='2Dh ; -'),[u'2Dh'])
        self.assertEqual(tasm.lex.parse_args(text='2Eh ; .'),[u'2Eh'])
        self.assertEqual(tasm.lex.parse_args(text='2Fh ; /'),[u'2Fh'])
        self.assertEqual(tasm.lex.parse_args(text='3'),[u'3'])
        self.assertEqual(tasm.lex.parse_args(text='3.0                  ; DATA XREF: test_fops+101\xe2\x86\x91r'),[u'3.0'])
        self.assertEqual(tasm.lex.parse_args(text='3.5                  ; DATA XREF: test_fops+F7\xe2\x86\x91r'),[u'3.5'])
        self.assertEqual(tasm.lex.parse_args(text='3.7                  ; DATA XREF: test_fops+C9\xe2\x86\x91r'),[u'3.7'])
        self.assertEqual(tasm.lex.parse_args(text='30h ; 0'),[u'30h'])
        self.assertEqual(tasm.lex.parse_args(text='31h'),[u'31h'])
        self.assertEqual(tasm.lex.parse_args(text='32768.0              ; DATA XREF: test_floats+158\xe2\x86\x91r'),[u'32768.0'])
        self.assertEqual(tasm.lex.parse_args(text='32h ; 2'),[u'32h'])
        self.assertEqual(tasm.lex.parse_args(text='34'),[u'34'])
        self.assertEqual(tasm.lex.parse_args(text='34h ; 4'),[u'34h'])
        self.assertEqual(tasm.lex.parse_args(text='35h ; 5'),[u'35h'])
        self.assertEqual(tasm.lex.parse_args(text='36h ; 6'),[u'36h'])
        self.assertEqual(tasm.lex.parse_args(text='38h ; 8'),[u'38h'])
        self.assertEqual(tasm.lex.parse_args(text='3Ah ; :'),[u'3Ah'])
        self.assertEqual(tasm.lex.parse_args(text='3Bh ; ;'),[u'3Bh'])
        self.assertEqual(tasm.lex.parse_args(text='3Ch ; <'),[u'3Ch'])
        self.assertEqual(tasm.lex.parse_args(text='3Dh ; ='),[u'3Dh'])
        self.assertEqual(tasm.lex.parse_args(text='3Eh ; >'),[u'3Eh'])
        self.assertEqual(tasm.lex.parse_args(text='3Fh ; ?'),[u'3Fh'])
        self.assertEqual(tasm.lex.parse_args(text='4 dup (5)'),[u'4 dup (5)'])
        self.assertEqual(tasm.lex.parse_args(text='4'),[u'4'])
        self.assertEqual(tasm.lex.parse_args(text='4,6,9'),[u'4', u'6', u'9'])
        self.assertEqual(tasm.lex.parse_args(text='40h ; @'),[u'40h'])
        self.assertEqual(tasm.lex.parse_args(text='41h ; A'),[u'41h'])
        self.assertEqual(tasm.lex.parse_args(text='42h ; B'),[u'42h'])
        self.assertEqual(tasm.lex.parse_args(text='43h ; C'),[u'43h'])
        self.assertEqual(tasm.lex.parse_args(text='44h ; D'),[u'44h'])
        self.assertEqual(tasm.lex.parse_args(text='45h ; E'),[u'45h'])
        self.assertEqual(tasm.lex.parse_args(text='46h ; F'),[u'46h'])
        self.assertEqual(tasm.lex.parse_args(text='47h ; G'),[u'47h'])
        self.assertEqual(tasm.lex.parse_args(text='48h ; H'),[u'48h'])
        self.assertEqual(tasm.lex.parse_args(text='49h ; I'),[u'49h'])
        self.assertEqual(tasm.lex.parse_args(text='4Ah ; J'),[u'4Ah'])
        self.assertEqual(tasm.lex.parse_args(text='4Bh ; K'),[u'4Bh'])
        self.assertEqual(tasm.lex.parse_args(text='4Ch ; L'),[u'4Ch'])
        self.assertEqual(tasm.lex.parse_args(text='4Dh ; M'),[u'4Dh'])
        self.assertEqual(tasm.lex.parse_args(text='4Eh ; N'),[u'4Eh'])
        self.assertEqual(tasm.lex.parse_args(text='4Fh ; O'),[u'4Fh'])
        self.assertEqual(tasm.lex.parse_args(text='5 dup (0)'),[u'5 dup (0)'])
        self.assertEqual(tasm.lex.parse_args(text='5'),[u'5'])
        self.assertEqual(tasm.lex.parse_args(text='5*5 dup (0,testEqu*2,2*2,3)'),[u'5*5 dup (0', u'testEqu*2', u'2*2', u'3)'])
        self.assertEqual(tasm.lex.parse_args(text='5.5                  ; DATA XREF: test_fops+DD\xe2\x86\x91r'),[u'5.5'])
        self.assertEqual(tasm.lex.parse_args(text='50h ; P'),[u'50h'])
        self.assertEqual(tasm.lex.parse_args(text='51h ; Q'),[u'51h'])
        self.assertEqual(tasm.lex.parse_args(text='52h ; R'),[u'52h'])
        self.assertEqual(tasm.lex.parse_args(text='53h ; S'),[u'53h'])
        self.assertEqual(tasm.lex.parse_args(text='54h ; T'),[u'54h'])
        self.assertEqual(tasm.lex.parse_args(text='55h ; U'),[u'55h'])
        self.assertEqual(tasm.lex.parse_args(text='56h ; V'),[u'56h'])
        self.assertEqual(tasm.lex.parse_args(text='57h ; W'),[u'57h'])
        self.assertEqual(tasm.lex.parse_args(text='58h ; X'),[u'58h'])
        self.assertEqual(tasm.lex.parse_args(text='59h ; Y'),[u'59h'])
        self.assertEqual(tasm.lex.parse_args(text='5Ah ; Z'),[u'5Ah'])
        self.assertEqual(tasm.lex.parse_args(text='5Bh ; ['),[u'5Bh'])
        self.assertEqual(tasm.lex.parse_args(text='5Ch ; \\'),[u'5Ch'])
        self.assertEqual(tasm.lex.parse_args(text='5Dh ; ]'),[u'5Dh'])
        self.assertEqual(tasm.lex.parse_args(text='5Fh ; _'),[u'5Fh'])
        self.assertEqual(tasm.lex.parse_args(text='6'),[u'6'])
        self.assertEqual(tasm.lex.parse_args(text='6.5                  ; DATA XREF: test_fops+B0\xe2\x86\x91r'),[u'6.5'])
        self.assertEqual(tasm.lex.parse_args(text='60h ; `'),[u'60h'])
        self.assertEqual(tasm.lex.parse_args(text='61h ; a'),[u'61h'])
        self.assertEqual(tasm.lex.parse_args(text='62h ; b'),[u'62h'])
        self.assertEqual(tasm.lex.parse_args(text='63h ; c'),[u'63h'])
        self.assertEqual(tasm.lex.parse_args(text='64000 dup(0)'),[u'64000 dup(0)'])
        self.assertEqual(tasm.lex.parse_args(text='64h ; d'),[u'64h'])
        self.assertEqual(tasm.lex.parse_args(text='66h ; f'),[u'66h'])
        self.assertEqual(tasm.lex.parse_args(text='67h ; g'),[u'67h'])
        self.assertEqual(tasm.lex.parse_args(text='68h ; h'),[u'68h'])
        self.assertEqual(tasm.lex.parse_args(text='69h ; i'),[u'69h'])
        self.assertEqual(tasm.lex.parse_args(text='6Ah ; j'),[u'6Ah'])
        self.assertEqual(tasm.lex.parse_args(text='6Bh ; k'),[u'6Bh'])
        self.assertEqual(tasm.lex.parse_args(text='6Ch ; l'),[u'6Ch'])
        self.assertEqual(tasm.lex.parse_args(text='6Dh ; m'),[u'6Dh'])
        self.assertEqual(tasm.lex.parse_args(text='6Eh ; n'),[u'6Eh'])
        self.assertEqual(tasm.lex.parse_args(text='6Fh ; o'),[u'6Fh'])
        self.assertEqual(tasm.lex.parse_args(text='7'),[u'7'])
        self.assertEqual(tasm.lex.parse_args(text='70h ; p'),[u'70h'])
        self.assertEqual(tasm.lex.parse_args(text='71h ; q'),[u'71h'])
        self.assertEqual(tasm.lex.parse_args(text='72h ; r'),[u'72h'])
        self.assertEqual(tasm.lex.parse_args(text='73h ; s'),[u'73h'])
        self.assertEqual(tasm.lex.parse_args(text='74h ; t'),[u'74h'])
        self.assertEqual(tasm.lex.parse_args(text='75h ; u'),[u'75h'])
        self.assertEqual(tasm.lex.parse_args(text='76h ; v'),[u'76h'])
        self.assertEqual(tasm.lex.parse_args(text='78h ; x'),[u'78h'])
        self.assertEqual(tasm.lex.parse_args(text='79h ; y'),[u'79h'])
        self.assertEqual(tasm.lex.parse_args(text='7Ah ; z'),[u'7Ah'])
        self.assertEqual(tasm.lex.parse_args(text='7Bh ; {'),[u'7Bh'])
        self.assertEqual(tasm.lex.parse_args(text='7Ch ; |'),[u'7Ch'])
        self.assertEqual(tasm.lex.parse_args(text='7Dh ; }'),[u'7Dh'])
        self.assertEqual(tasm.lex.parse_args(text='7Eh ; ~'),[u'7Eh'])
        self.assertEqual(tasm.lex.parse_args(text='7Fh ; \x7f'),[u'7Fh'])
        self.assertEqual(tasm.lex.parse_args(text='8'),[u'8'])
        self.assertEqual(tasm.lex.parse_args(text='80h ; \xd0\x82'),[u'80h'])
        self.assertEqual(tasm.lex.parse_args(text='82h ; \xe2\x80\x9a'),[u'82h'])
        self.assertEqual(tasm.lex.parse_args(text='83h ; \xd1\x93'),[u'83h'])
        self.assertEqual(tasm.lex.parse_args(text='84h ; \xe2\x80\x9e'),[u'84h'])
        self.assertEqual(tasm.lex.parse_args(text='85h ; \xe2\x80\xa6'),[u'85h'])
        self.assertEqual(tasm.lex.parse_args(text='86h ; \xe2\x80\xa0'),[u'86h'])
        self.assertEqual(tasm.lex.parse_args(text='87h ; \xe2\x80\xa1'),[u'87h'])
        self.assertEqual(tasm.lex.parse_args(text='88h ; \xe2\x82\xac'),[u'88h'])
        self.assertEqual(tasm.lex.parse_args(text='8Ah ; \xd0\x89'),[u'8Ah'])
        self.assertEqual(tasm.lex.parse_args(text='8Ch ; \xd0\x8a'),[u'8Ch'])
        self.assertEqual(tasm.lex.parse_args(text='8Dh ; \xd0\x8c'),[u'8Dh'])
        self.assertEqual(tasm.lex.parse_args(text='8Eh ; \xd0\x8b'),[u'8Eh'])
        self.assertEqual(tasm.lex.parse_args(text='8Fh ; \xd0\x8f'),[u'8Fh'])
        self.assertEqual(tasm.lex.parse_args(text='9'),[u'9'])
        self.assertEqual(tasm.lex.parse_args(text='9,8,7,1'),[u'9', u'8', u'7', u'1'])
        self.assertEqual(tasm.lex.parse_args(text='90h ; \xd1\x92'),[u'90h'])
        self.assertEqual(tasm.lex.parse_args(text='91h ; \xe2\x80\x98'),[u'91h'])
        self.assertEqual(tasm.lex.parse_args(text='94h ; \xe2\x80\x9d'),[u'94h'])
        self.assertEqual(tasm.lex.parse_args(text='95h ; \xe2\x80\xa2'),[u'95h'])
        self.assertEqual(tasm.lex.parse_args(text='96h ; \xe2\x80\x93'),[u'96h'])
        self.assertEqual(tasm.lex.parse_args(text='97h ; \xe2\x80\x94'),[u'97h'])
        self.assertEqual(tasm.lex.parse_args(text='99h ; \xe2\x84\xa2'),[u'99h'])
        self.assertEqual(tasm.lex.parse_args(text='9ABCDEFh'),[u'9ABCDEFh'])
        self.assertEqual(tasm.lex.parse_args(text='9Ah ; \xd1\x99'),[u'9Ah'])
        self.assertEqual(tasm.lex.parse_args(text='9Ch ; \xd1\x9a'),[u'9Ch'])
        self.assertEqual(tasm.lex.parse_args(text='9Dh ; \xd1\x9c'),[u'9Dh'])
        self.assertEqual(tasm.lex.parse_args(text='9Eh ; \xd1\x9b'),[u'9Eh'])
        self.assertEqual(tasm.lex.parse_args(text='9Fh ; \xd1\x9f'),[u'9Fh'])
        self.assertEqual(tasm.lex.parse_args(text='?                    ; DATA XREF: __dllMain+15\xe2\x86\x91r'),[u'?'])
        self.assertEqual(tasm.lex.parse_args(text='?                    ; DATA XREF: __dllMain+3\xe2\x86\x91r'),[u'?'])
        self.assertEqual(tasm.lex.parse_args(text='?                    ; DATA XREF: __dllMain+C\xe2\x86\x91r'),[u'?'])
        self.assertEqual(tasm.lex.parse_args(text='?                    ; DATA XREF: _cygwin_crt0_common@8+60\xe2\x86\x91o'),[u'?'])
        self.assertEqual(tasm.lex.parse_args(text='?                    ; DATA XREF: _cygwin_crt0_common@8+89\xe2\x86\x91o'),[u'?'])
        self.assertEqual(tasm.lex.parse_args(text='?                    ; DATA XREF: _cygwin_dll_entry@12+8B\xe2\x86\x91r'),[u'?'])
        self.assertEqual(tasm.lex.parse_args(text='?                    ; DATA XREF: sub_401090+39\xe2\x86\x91w'),[u'?'])
        self.assertEqual(tasm.lex.parse_args(text='?                    ; DATA XREF: test_string+F\xe2\x86\x91w'),[u'?'])
        self.assertEqual(tasm.lex.parse_args(text='?               ; DATA XREF: _cygwin_crt0_common@8:loc_40D11D\xe2\x86\x91r'),[u'?'])
        self.assertEqual(tasm.lex.parse_args(text='? ;               ; DATA XREF: _cygwin_crt0_common@8+1AA\xe2\x86\x91o'),[u'?'])
        self.assertEqual(tasm.lex.parse_args(text='? ;               ; DATA XREF: sub_401090+69\xe2\x86\x91o'),[u'?'])
        self.assertEqual(tasm.lex.parse_args(text='? ;'),[u'?'])
        self.assertEqual(tasm.lex.parse_args(text='@@saaccvaaaax'),[u'@@saaccvaaaax'])
        self.assertEqual(tasm.lex.parse_args(text='@VBL1 ;on attends le retrace'),[u'@VBL1'])
        self.assertEqual(tasm.lex.parse_args(text='@VBL12 ;on attends le retrace'),[u'@VBL12'])
        self.assertEqual(tasm.lex.parse_args(text='@VBL2 ;on attends la fin du retrace'),[u'@VBL2'])
        self.assertEqual(tasm.lex.parse_args(text='@VBL22 ;on attends la fin du retrace'),[u'@VBL22'])
        self.assertEqual(tasm.lex.parse_args(text='@df@@@@'),[u'@df@@@@'])
        self.assertEqual(tasm.lex.parse_args(text='@df@@@@1'),[u'@df@@@@1'])
        self.assertEqual(tasm.lex.parse_args(text='@df@@@@2'),[u'@df@@@@2'])
        self.assertEqual(tasm.lex.parse_args(text='@df@@@@3'),[u'@df@@@@3'])
        self.assertEqual(tasm.lex.parse_args(text='@df@@@@4'),[u'@df@@@@4'])
        self.assertEqual(tasm.lex.parse_args(text='@df@@@@5'),[u'@df@@@@5'])
        self.assertEqual(tasm.lex.parse_args(text='@df@@@@6'),[u'@df@@@@6'])
        self.assertEqual(tasm.lex.parse_args(text='@df@@@@7'),[u'@df@@@@7'])
        self.assertEqual(tasm.lex.parse_args(text='@df@@@@8'),[u'@df@@@@8'])
        self.assertEqual(tasm.lex.parse_args(text='@df@@@@9'),[u'@df@@@@9'])
        self.assertEqual(tasm.lex.parse_args(text='AL,8'),[u'AL', u'8'])
        self.assertEqual(tasm.lex.parse_args(text='DX,3DAh'),[u'DX', u'3DAh'])
        self.assertEqual(tasm.lex.parse_args(text='OK'),[u'OK'])
        self.assertEqual(tasm.lex.parse_args(text='P1 ; jump if cl is not equal 0 (zeroflag is not set)'),[u'P1'])
        self.assertEqual(tasm.lex.parse_args(text='[a],5'),[u'[a]', u'5'])
        self.assertEqual(tasm.lex.parse_args(text='[cs:table+ax]'),[u'[cs:table+ax]'])
        self.assertEqual(tasm.lex.parse_args(text='[ebp+ecx_0], ecx_0_0'),[u'[ebp+ecx_0]', u'ecx_0_0'])
        self.assertEqual(tasm.lex.parse_args(text='[ebp+edx_0], edx'),[u'[ebp+edx_0]', u'edx'])
        self.assertEqual(tasm.lex.parse_args(text='[ebp+i+table], dl'),[u'[ebp+i+table]', u'dl'])
        self.assertEqual(tasm.lex.parse_args(text='[ebp+s0], esi'),[u'[ebp+s0]', u'esi'])
        self.assertEqual(tasm.lex.parse_args(text='[ebp+s1], 0'),[u'[ebp+s1]', u'0'])
        self.assertEqual(tasm.lex.parse_args(text='[ebp+s1], 1'),[u'[ebp+s1]', u'1'])
        self.assertEqual(tasm.lex.parse_args(text='[ebp+s2], ebx'),[u'[ebp+s2]', u'ebx'])
        self.assertEqual(tasm.lex.parse_args(text='[ebp+var_1C], edx'),[u'[ebp+var_1C]', u'edx'])
        self.assertEqual(tasm.lex.parse_args(text='[ebp+var_20]'),[u'[ebp+var_20]'])
        self.assertEqual(tasm.lex.parse_args(text='[ebp+var_20], ecx'),[u'[ebp+var_20]', u'ecx'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+0Ch], ebx'),[u'[esp+0Ch]', u'ebx'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+0Ch], ecx'),[u'[esp+0Ch]', u'ecx'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+0Ch], edi'),[u'[esp+0Ch]', u'edi'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+0Ch], edi_0'),[u'[esp+0Ch]', u'edi_0'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+0Ch], edx'),[u'[esp+0Ch]', u'edx'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+0Ch], op0'),[u'[esp+0Ch]', u'op0'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+0Ch], op1'),[u'[esp+0Ch]', u'op1'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+0Ch], r'),[u'[esp+0Ch]', u'r'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+0Ch], res'),[u'[esp+0Ch]', u'res'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+0Ch], resz'),[u'[esp+0Ch]', u'resz'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+0Ch], s1_0'),[u'[esp+0Ch]', u's1_0'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+10h], eax'),[u'[esp+10h]', u'eax'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+10h], eax_0'),[u'[esp+10h]', u'eax_0'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+10h], ebx'),[u'[esp+10h]', u'ebx'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+10h], ecx'),[u'[esp+10h]', u'ecx'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+10h], op1'),[u'[esp+10h]', u'op1'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+10h], res'),[u'[esp+10h]', u'res'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+10h], resz'),[u'[esp+10h]', u'resz'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+10h], rh'),[u'[esp+10h]', u'rh'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+10h], s1_0'),[u'[esp+10h]', u's1_0'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+14h], eax'),[u'[esp+14h]', u'eax'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+14h], ebx'),[u'[esp+14h]', u'ebx'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+14h], ecx'),[u'[esp+14h]', u'ecx'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+14h], ecx_0'),[u'[esp+14h]', u'ecx_0'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+14h], edi'),[u'[esp+14h]', u'edi'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+14h], edx'),[u'[esp+14h]', u'edx'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+14h], esi'),[u'[esp+14h]', u'esi'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+14h], flags'),[u'[esp+14h]', u'flags'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+14h], res'),[u'[esp+14h]', u'res'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+14h], resh'),[u'[esp+14h]', u'resh'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+18h], eax'),[u'[esp+18h]', u'eax'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+18h], edi'),[u'[esp+18h]', u'edi'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+18h], edx'),[u'[esp+18h]', u'edx'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+18h], res'),[u'[esp+18h]', u'res'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+1Ch], eax'),[u'[esp+1Ch]', u'eax'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+1Ch], ebx'),[u'[esp+1Ch]', u'ebx'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+4], eax_0'),[u'[esp+4]', u'eax_0'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+4], ebx ; s0'),[u'[esp+4]', u'ebx'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+4], edi ; op0'),[u'[esp+4]', u'edi'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+4], esi ; s0'),[u'[esp+4]', u'esi'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+4], esi ; s1'),[u'[esp+4]', u'esi'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+4], i ; op0'),[u'[esp+4]', u'i'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+4], res'),[u'[esp+4]', u'res'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+8], eax'),[u'[esp+8]', u'eax'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+8], ebx ; op1'),[u'[esp+8]', u'ebx'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+8], ebx'),[u'[esp+8]', u'ebx'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+8], ecx'),[u'[esp+8]', u'ecx'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+8], ecx_0_0'),[u'[esp+8]', u'ecx_0_0'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+8], edi ; op1'),[u'[esp+8]', u'edi'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+8], edi ; s1'),[u'[esp+8]', u'edi'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+8], edx_0_0'),[u'[esp+8]', u'edx_0_0'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+8], esi ; op1'),[u'[esp+8]', u'esi'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+8], esi ; s1'),[u'[esp+8]', u'esi'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+8], esi'),[u'[esp+8]', u'esi'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+8], esi_0'),[u'[esp+8]', u'esi_0'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+8], i ; s1'),[u'[esp+8]', u'i'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+8], i'),[u'[esp+8]', u'i'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+8], op0'),[u'[esp+8]', u'op0'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+8], res'),[u'[esp+8]', u'res'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+8], resh'),[u'[esp+8]', u'resh'])
        self.assertEqual(tasm.lex.parse_args(text='[esp+8], s0_0'),[u'[esp+8]', u's0_0'])
        self.assertEqual(tasm.lex.parse_args(text='[esp], ebx ; s0'),[u'[esp]', u'ebx'])
        self.assertEqual(tasm.lex.parse_args(text='[esp], ebx ; s2'),[u'[esp]', u'ebx'])
        self.assertEqual(tasm.lex.parse_args(text='[esp], edi ; s2'),[u'[esp]', u'edi'])
        self.assertEqual(tasm.lex.parse_args(text='[load_handle],eax'),[u'[load_handle]', u'eax'])
        self.assertEqual(tasm.lex.parse_args(text='[var+3],5'),[u'[var+3]', u'5'])
        self.assertEqual(tasm.lex.parse_args(text='[var+4],0'),[u'[var+4]', u'0'])
        self.assertEqual(tasm.lex.parse_args(text='[var-1],0'),[u'[var-1]', u'0'])
        self.assertEqual(tasm.lex.parse_args(text='[var0+5],0'),[u'[var0+5]', u'0'])
        self.assertEqual(tasm.lex.parse_args(text='[var1+1],5'),[u'[var1+1]', u'5'])
        self.assertEqual(tasm.lex.parse_args(text='[var1]'),[u'[var1]'])
        self.assertEqual(tasm.lex.parse_args(text='[var1],111'),[u'[var1]', u'111'])
        self.assertEqual(tasm.lex.parse_args(text='[var1],2'),[u'[var1]', u'2'])
        self.assertEqual(tasm.lex.parse_args(text='[var1],3'),[u'[var1]', u'3'])
        self.assertEqual(tasm.lex.parse_args(text='[var2+2],6'),[u'[var2+2]', u'6'])
        self.assertEqual(tasm.lex.parse_args(text='[var2-1],5'),[u'[var2-1]', u'5'])
        self.assertEqual(tasm.lex.parse_args(text='[var2]'),[u'[var2]'])
        self.assertEqual(tasm.lex.parse_args(text='[var2],0'),[u'[var2]', u'0'])
        self.assertEqual(tasm.lex.parse_args(text='[var2],1'),[u'[var2]', u'1'])
        self.assertEqual(tasm.lex.parse_args(text='[var2],13'),[u'[var2]', u'13'])
        self.assertEqual(tasm.lex.parse_args(text='[var2],4'),[u'[var2]', u'4'])
        self.assertEqual(tasm.lex.parse_args(text='[var3+3*4],4000000'),[u'[var3+3*4]', u'4000000'])
        self.assertEqual(tasm.lex.parse_args(text='[var3+ebp],4000000'),[u'[var3+ebp]', u'4000000'])
        self.assertEqual(tasm.lex.parse_args(text='[var3]'),[u'[var3]'])
        self.assertEqual(tasm.lex.parse_args(text='[var3],11'),[u'[var3]', u'11'])
        self.assertEqual(tasm.lex.parse_args(text='[var3],35'),[u'[var3]', u'35'])
        self.assertEqual(tasm.lex.parse_args(text='[var3],37'),[u'[var3]', u'37'])
        self.assertEqual(tasm.lex.parse_args(text='[var4+t],1'),[u'[var4+t]', u'1'])
        self.assertEqual(tasm.lex.parse_args(text='[var4],2'),[u'[var4]', u'2'])
        self.assertEqual(tasm.lex.parse_args(text='[var],5'),[u'[var]', u'5'])
        self.assertEqual(tasm.lex.parse_args(text='_byte_2461B, 0'),[u'_byte_2461B', u'0'])
        self.assertEqual(tasm.lex.parse_args(text='_byte_24665, 1'),[u'_byte_24665', u'1'])
        self.assertEqual(tasm.lex.parse_args(text='_dosfread'),[u'_dosfread'])
        self.assertEqual(tasm.lex.parse_args(text='_ems_restore_mapctx'),[u'_ems_restore_mapctx'])
        self.assertEqual(tasm.lex.parse_args(text='_ems_save_mapctx'),[u'_ems_save_mapctx'])
        self.assertEqual(tasm.lex.parse_args(text='_fhandle_module, ax'),[u'_fhandle_module', u'ax'])
        self.assertEqual(tasm.lex.parse_args(text='_mod_1021E'),[u'_mod_1021E'])
        self.assertEqual(tasm.lex.parse_args(text='_mod_102F5'),[u'_mod_102F5'])
        self.assertEqual(tasm.lex.parse_args(text='_mod_channels_number, 4'),[u'_mod_channels_number', u'4'])
        self.assertEqual(tasm.lex.parse_args(text='_mod_channels_number, 8'),[u'_mod_channels_number', u'8'])
        self.assertEqual(tasm.lex.parse_args(text='_module_type_text, 2E542E4Eh'),[u'_module_type_text', u'2E542E4Eh'])
        self.assertEqual(tasm.lex.parse_args(text='_module_type_text, 38544C46h ; FLT8'),[u'_module_type_text', u'38544C46h'])
        self.assertEqual(tasm.lex.parse_args(text='_moduleflag_246D0, 11b'),[u'_moduleflag_246D0', u'11b'])
        self.assertEqual(tasm.lex.parse_args(text='_savesp_245D0, sp'),[u'_savesp_245D0', u'sp'])
        self.assertEqual(tasm.lex.parse_args(text='_word_245D2, 0Fh'),[u'_word_245D2', u'0Fh'])
        self.assertEqual(tasm.lex.parse_args(text='_word_245D2, 1Fh'),[u'_word_245D2', u'1Fh'])
        self.assertEqual(tasm.lex.parse_args(text='_word_24662, 0'),[u'_word_24662', u'0'])
        self.assertEqual(tasm.lex.parse_args(text='a,1'),[u'a', u'1'])
        self.assertEqual(tasm.lex.parse_args(text='a,3'),[u'a', u'3'])
        self.assertEqual(tasm.lex.parse_args(text='a,5'),[u'a', u'5'])
        self.assertEqual(tasm.lex.parse_args(text='a,ah'),[u'a', u'ah'])
        self.assertEqual(tasm.lex.parse_args(text='a,al'),[u'a', u'al'])
        self.assertEqual(tasm.lex.parse_args(text='affpal'),[u'affpal'])
        self.assertEqual(tasm.lex.parse_args(text='ah, 0F7h'),[u'ah', u'0F7h'])
        self.assertEqual(tasm.lex.parse_args(text='ah, 3Eh'),[u'ah', u'3Eh'])
        self.assertEqual(tasm.lex.parse_args(text='ah,-1'),[u'ah', u'-1'])
        self.assertEqual(tasm.lex.parse_args(text='ah,03dh'),[u'ah', u'03dh'])
        self.assertEqual(tasm.lex.parse_args(text='ah,03eh'),[u'ah', u'03eh'])
        self.assertEqual(tasm.lex.parse_args(text='ah,03fh'),[u'ah', u'03fh'])
        self.assertEqual(tasm.lex.parse_args(text='ah,042h'),[u'ah', u'042h'])
        self.assertEqual(tasm.lex.parse_args(text='ah,0ffh'),[u'ah', u'0ffh'])
        self.assertEqual(tasm.lex.parse_args(text='ah,48h'),[u'ah', u'48h'])
        self.assertEqual(tasm.lex.parse_args(text='ah,49h'),[u'ah', u'49h'])
        self.assertEqual(tasm.lex.parse_args(text='ah,4Ah'),[u'ah', u'4Ah'])
        self.assertEqual(tasm.lex.parse_args(text='ah,4ch ; AH=4Ch - Exit To DOS'),[u'ah', u'4ch'])
        self.assertEqual(tasm.lex.parse_args(text='ah,7'),[u'ah', u'7'])
        self.assertEqual(tasm.lex.parse_args(text='ah,9 ; AH=09h - Print DOS Message'),[u'ah', u'9'])
        self.assertEqual(tasm.lex.parse_args(text='aincecx'),[u'aincecx'])
        self.assertEqual(tasm.lex.parse_args(text='aincedx'),[u'aincedx'])
        self.assertEqual(tasm.lex.parse_args(text='al'),[u'al'])
        self.assertEqual(tasm.lex.parse_args(text='al, byte ptr [ebp+var_20]'),[u'al', u'byte ptr [ebp+var_20]'])
        self.assertEqual(tasm.lex.parse_args(text='al, dl'),[u'al', u'dl'])
        self.assertEqual(tasm.lex.parse_args(text='al,-5'),[u'al', u'-5'])
        self.assertEqual(tasm.lex.parse_args(text='al,0'),[u'al', u'0'])
        self.assertEqual(tasm.lex.parse_args(text='al,00h ;debut du fichier'),[u'al', u'00h'])
        self.assertEqual(tasm.lex.parse_args(text='al,00h ;ouverture du fichier pour lecture.'),[u'al', u'00h'])
        self.assertEqual(tasm.lex.parse_args(text='al,010B'),[u'al', u'010B'])
        self.assertEqual(tasm.lex.parse_args(text='al,0B'),[u'al', u'0B'])
        self.assertEqual(tasm.lex.parse_args(text='al,1'),[u'al', u'1'])
        self.assertEqual(tasm.lex.parse_args(text='al,2'),[u'al', u'2'])
        self.assertEqual(tasm.lex.parse_args(text='al,7'),[u'al', u'7'])
        self.assertEqual(tasm.lex.parse_args(text='al,[a]'),[u'al', u'[a]'])
        self.assertEqual(tasm.lex.parse_args(text='al,ah'),[u'al', u'ah'])
        self.assertEqual(tasm.lex.parse_args(text='al,al'),[u'al', u'al'])
        self.assertEqual(tasm.lex.parse_args(text='al,bl'),[u'al', u'bl'])
        self.assertEqual(tasm.lex.parse_args(text='ax'),[u'ax'])
        self.assertEqual(tasm.lex.parse_args(text='ax, 0FFFEh'),[u'ax', u'0FFFEh'])
        self.assertEqual(tasm.lex.parse_args(text='ax, 0FFFFh'),[u'ax', u'0FFFFh'])
        self.assertEqual(tasm.lex.parse_args(text='ax, 3D00h'),[u'ax', u'3D00h'])
        self.assertEqual(tasm.lex.parse_args(text='ax, 4200h'),[u'ax', u'4200h'])
        self.assertEqual(tasm.lex.parse_args(text='ax, [bx]'),[u'ax', u'[bx]'])
        self.assertEqual(tasm.lex.parse_args(text='ax, _byte_2461B'),[u'ax', u'_byte_2461B'])
        self.assertEqual(tasm.lex.parse_args(text='ax, _mod_channels_number'),[u'ax', u'_mod_channels_number'])
        self.assertEqual(tasm.lex.parse_args(text='ax, ax'),[u'ax', u'ax'])
        self.assertEqual(tasm.lex.parse_args(text='ax, bx'),[u'ax', u'bx'])
        self.assertEqual(tasm.lex.parse_args(text='ax, cx'),[u'ax', u'cx'])
        self.assertEqual(tasm.lex.parse_args(text='ax, cx, 2Dh'),[u'ax', u'cx', u'2Dh'])
        self.assertEqual(tasm.lex.parse_args(text='ax, di'),[u'ax', u'di'])
        self.assertEqual(tasm.lex.parse_args(text='ax, di, 8000h'),[u'ax', u'di', u'8000h'])
        self.assertEqual(tasm.lex.parse_args(text='ax, ds'),[u'ax', u'ds'])
        self.assertEqual(tasm.lex.parse_args(text='ax, dx'),[u'ax', u'dx'])
        self.assertEqual(tasm.lex.parse_args(text='ax, dx, -2Dh'),[u'ax', u'dx', u'-2Dh'])
        self.assertEqual(tasm.lex.parse_args(text='ax, offset _mod_n_t_module ; N.T.'),[u'ax', u'offset _mod_n_t_module'])
        self.assertEqual(tasm.lex.parse_args(text='ax, si'),[u'ax', u'si'])
        self.assertEqual(tasm.lex.parse_args(text='ax, si, 7FFFh'),[u'ax', u'si', u'7FFFh'])
        self.assertEqual(tasm.lex.parse_args(text='ax, word ptr [ebp+var_20]'),[u'ax', u'word ptr [ebp+var_20]'])
        self.assertEqual(tasm.lex.parse_args(text='ax,-1'),[u'ax', u'-1'])
        self.assertEqual(tasm.lex.parse_args(text='ax,-5'),[u'ax', u'-5'])
        self.assertEqual(tasm.lex.parse_args(text='ax,0002h'),[u'ax', u'0002h'])
        self.assertEqual(tasm.lex.parse_args(text='ax,0007'),[u'ax', u'0007'])
        self.assertEqual(tasm.lex.parse_args(text='ax,01010101010101010b'),[u'ax', u'01010101010101010b'])
        self.assertEqual(tasm.lex.parse_args(text='ax,01111111111111111b'),[u'ax', u'01111111111111111b'])
        self.assertEqual(tasm.lex.parse_args(text='ax,08h'),[u'ax', u'08h'])
        self.assertEqual(tasm.lex.parse_args(text='ax,13h'),[u'ax', u'13h'])
        self.assertEqual(tasm.lex.parse_args(text='ax,3h'),[u'ax', u'3h'])
        self.assertEqual(tasm.lex.parse_args(text='ax,4'),[u'ax', u'4'])
        self.assertEqual(tasm.lex.parse_args(text='ax,501h'),[u'ax', u'501h'])
        self.assertEqual(tasm.lex.parse_args(text='ax,6'),[u'ax', u'6'])
        self.assertEqual(tasm.lex.parse_args(text='ax,ax'),[u'ax', u'ax'])
        self.assertEqual(tasm.lex.parse_args(text='ax,bp'),[u'ax', u'bp'])
        self.assertEqual(tasm.lex.parse_args(text='ax,bx'),[u'ax', u'bx'])
        self.assertEqual(tasm.lex.parse_args(text='b,256+3'),[u'b', u'256+3'])
        self.assertEqual(tasm.lex.parse_args(text='b,ax'),[u'b', u'ax'])
        self.assertEqual(tasm.lex.parse_args(text='bh'),[u'bh'])
        self.assertEqual(tasm.lex.parse_args(text='bh,01h'),[u'bh', u'01h'])
        self.assertEqual(tasm.lex.parse_args(text='bh,02h'),[u'bh', u'02h'])
        self.assertEqual(tasm.lex.parse_args(text='bh,0cch'),[u'bh', u'0cch'])
        self.assertEqual(tasm.lex.parse_args(text='bl,-1'),[u'bl', u'-1'])
        self.assertEqual(tasm.lex.parse_args(text='bl,0'),[u'bl', u'0'])
        self.assertEqual(tasm.lex.parse_args(text='bl,001111111B'),[u'bl', u'001111111B'])
        self.assertEqual(tasm.lex.parse_args(text='bl,011111111B'),[u'bl', u'011111111B'])
        self.assertEqual(tasm.lex.parse_args(text='bl,0Fh ; only low-Nibble'),[u'bl', u'0Fh'])
        self.assertEqual(tasm.lex.parse_args(text='bl,0ddh'),[u'bl', u'0ddh'])
        self.assertEqual(tasm.lex.parse_args(text='bl,1'),[u'bl', u'1'])
        self.assertEqual(tasm.lex.parse_args(text='bl,192'),[u'bl', u'192'])
        self.assertEqual(tasm.lex.parse_args(text='bl,193'),[u'bl', u'193'])
        self.assertEqual(tasm.lex.parse_args(text='bl,30h ; convert to ASCII'),[u'bl', u'30h'])
        self.assertEqual(tasm.lex.parse_args(text='bl,39h ; above 9?'),[u'bl', u'39h'])
        self.assertEqual(tasm.lex.parse_args(text='bl,7 ; "A" to "F"'),[u'bl', u'7'])
        self.assertEqual(tasm.lex.parse_args(text='bl,[a+1]'),[u'bl', u'[a+1]'])
        self.assertEqual(tasm.lex.parse_args(text='bl,al'),[u'bl', u'al'])
        self.assertEqual(tasm.lex.parse_args(text='bx cx ; linear address of allocated memory block'),[u'bx cx'])
        self.assertEqual(tasm.lex.parse_args(text='bx fs'),[u'bx fs'])
        self.assertEqual(tasm.lex.parse_args(text='bx, _fhandle_module'),[u'bx', u'_fhandle_module'])
        self.assertEqual(tasm.lex.parse_args(text='bx, cx'),[u'bx', u'cx'])
        self.assertEqual(tasm.lex.parse_args(text='bx, offset off_25326'),[u'bx', u'offset off_25326'])
        self.assertEqual(tasm.lex.parse_args(text='bx, seg003'),[u'bx', u'seg003'])
        self.assertEqual(tasm.lex.parse_args(text='bx, si'),[u'bx', u'si'])
        self.assertEqual(tasm.lex.parse_args(text='bx,(1024*10/16)+5'),[u'bx', u'(1024*10/16)+5'])
        self.assertEqual(tasm.lex.parse_args(text='bx,(1024*10/16)-1'),[u'bx', u'(1024*10/16)-1'])
        self.assertEqual(tasm.lex.parse_args(text='bx,-1'),[u'bx', u'-1'])
        self.assertEqual(tasm.lex.parse_args(text='bx,1'),[u'bx', u'1'])
        self.assertEqual(tasm.lex.parse_args(text='bx,10'),[u'bx', u'10'])
        self.assertEqual(tasm.lex.parse_args(text='bx,1024*10/16'),[u'bx', u'1024*10/16'])
        self.assertEqual(tasm.lex.parse_args(text='bx,4+5*256'),[u'bx', u'4+5*256'])
        self.assertEqual(tasm.lex.parse_args(text='bx,5'),[u'bx', u'5'])
        self.assertEqual(tasm.lex.parse_args(text='bx,6*256+5'),[u'bx', u'6*256+5'])
        self.assertEqual(tasm.lex.parse_args(text='bx,[h2]'),[u'bx', u'[h2]'])
        self.assertEqual(tasm.lex.parse_args(text='bx,ax'),[u'bx', u'ax'])
        self.assertEqual(tasm.lex.parse_args(text='bx,bl'),[u'bx', u'bl'])
        self.assertEqual(tasm.lex.parse_args(text='bx,byte ptr [h2]'),[u'bx', u'byte ptr [h2]'])
        self.assertEqual(tasm.lex.parse_args(text='bx,byte ptr [h]'),[u'bx', u'byte ptr [h]'])
        self.assertEqual(tasm.lex.parse_args(text='bx,fs'),[u'bx', u'fs'])
        self.assertEqual(tasm.lex.parse_args(text='bx,word ptr [d]'),[u'bx', u'word ptr [d]'])
        self.assertEqual(tasm.lex.parse_args(text='bx,word ptr [e]'),[u'bx', u'word ptr [e]'])
        self.assertEqual(tasm.lex.parse_args(text='byte ptr -108h'),[u'byte ptr -108h'])
        self.assertEqual(tasm.lex.parse_args(text='byte ptr [a],5'),[u'byte ptr [a]', u'5'])
        self.assertEqual(tasm.lex.parse_args(text='byte ptr [ebp+var_20], al'),[u'byte ptr [ebp+var_20]', u'al'])
        self.assertEqual(tasm.lex.parse_args(text='byte ptr [ebp+var_20], bl'),[u'byte ptr [ebp+var_20]', u'bl'])
        self.assertEqual(tasm.lex.parse_args(text='byte ptr [ebp+var_20], dl'),[u'byte ptr [ebp+var_20]', u'dl'])
        self.assertEqual(tasm.lex.parse_args(text='byte ptr [edi+1]'),[u'byte ptr [edi+1]'])
        self.assertEqual(tasm.lex.parse_args(text='byte ptr [edi+1],6'),[u'byte ptr [edi+1]', u'6'])
        self.assertEqual(tasm.lex.parse_args(text='byte ptr [edi+7]'),[u'byte ptr [edi+7]'])
        self.assertEqual(tasm.lex.parse_args(text='byte ptr [edi+7],132'),[u'byte ptr [edi+7]', u'132'])
        self.assertEqual(tasm.lex.parse_args(text='byte ptr [esi],-2'),[u'byte ptr [esi]', u'-2'])
        self.assertEqual(tasm.lex.parse_args(text='byte ptr [esi],1'),[u'byte ptr [esi]', u'1'])
        self.assertEqual(tasm.lex.parse_args(text='byte ptr [esi],4'),[u'byte ptr [esi]', u'4'])
        self.assertEqual(tasm.lex.parse_args(text='byte ptr [testOVerlap+1],1'),[u'byte ptr [testOVerlap+1]', u'1'])
        self.assertEqual(tasm.lex.parse_args(text='byte ptr [var1+1],5'),[u'byte ptr [var1+1]', u'5'])
        self.assertEqual(tasm.lex.parse_args(text='byte ptr [var1+2],5'),[u'byte ptr [var1+2]', u'5'])
        self.assertEqual(tasm.lex.parse_args(text='byte ptr dl,[edi]'),[u'byte ptr dl', u'[edi]'])
        self.assertEqual(tasm.lex.parse_args(text='byte ptr ds:[0],55'),[u'byte ptr ds:[0]', u'55'])
        self.assertEqual(tasm.lex.parse_args(text='byte ptr es:[0]'),[u'byte ptr es:[0]'])
        self.assertEqual(tasm.lex.parse_args(text='byte ptr es:[0],55'),[u'byte ptr es:[0]', u'55'])
        self.assertEqual(tasm.lex.parse_args(text='byte ptr es:[0],56'),[u'byte ptr es:[0]', u'56'])
        self.assertEqual(tasm.lex.parse_args(text='byte ptr es:[0],57'),[u'byte ptr es:[0]', u'57'])
        self.assertEqual(tasm.lex.parse_args(text='c,256+3+65536'),[u'c', u'256+3+65536'])
        self.assertEqual(tasm.lex.parse_args(text='c,eax'),[u'c', u'eax'])
        self.assertEqual(tasm.lex.parse_args(text='ch,001111111B'),[u'ch', u'001111111B'])
        self.assertEqual(tasm.lex.parse_args(text='ch,011111100B'),[u'ch', u'011111100B'])
        self.assertEqual(tasm.lex.parse_args(text='ch,011111111B'),[u'ch', u'011111111B'])
        self.assertEqual(tasm.lex.parse_args(text='ch,1'),[u'ch', u'1'])
        self.assertEqual(tasm.lex.parse_args(text='ch,2'),[u'ch', u'2'])
        self.assertEqual(tasm.lex.parse_args(text='ch,bh'),[u'ch', u'bh'])
        self.assertEqual(tasm.lex.parse_args(text='cl ; decrease loop counter'),[u'cl'])
        self.assertEqual(tasm.lex.parse_args(text='cl'),[u'cl'])
        self.assertEqual(tasm.lex.parse_args(text='cl, dl'),[u'cl', u'dl'])
        self.assertEqual(tasm.lex.parse_args(text='cl,0f0h'),[u'cl', u'0f0h'])
        self.assertEqual(tasm.lex.parse_args(text='cl,2'),[u'cl', u'2'])
        self.assertEqual(tasm.lex.parse_args(text='cl,8 ; number of ASCII'),[u'cl', u'8'])
        self.assertEqual(tasm.lex.parse_args(text='cs'),[u'cs'])
        self.assertEqual(tasm.lex.parse_args(text='cx'),[u'cx'])
        self.assertEqual(tasm.lex.parse_args(text='cx, 1084'),[u'cx', u'1084'])
        self.assertEqual(tasm.lex.parse_args(text='cx, byte ptr [bx+4]'),[u'cx', u'byte ptr [bx+4]'])
        self.assertEqual(tasm.lex.parse_args(text='cx, cx'),[u'cx', u'cx'])
        self.assertEqual(tasm.lex.parse_args(text='cx, dx'),[u'cx', u'dx'])
        self.assertEqual(tasm.lex.parse_args(text='cx,-1'),[u'cx', u'-1'])
        self.assertEqual(tasm.lex.parse_args(text='cx,-5'),[u'cx', u'-5'])
        self.assertEqual(tasm.lex.parse_args(text='cx,0'),[u'cx', u'0'])
        self.assertEqual(tasm.lex.parse_args(text='cx,1'),[u'cx', u'1'])
        self.assertEqual(tasm.lex.parse_args(text='cx,256*3'),[u'cx', u'256*3'])
        self.assertEqual(tasm.lex.parse_args(text='cx,ax'),[u'cx', u'ax'])
        self.assertEqual(tasm.lex.parse_args(text='cx,cx'),[u'cx', u'cx'])
        self.assertEqual(tasm.lex.parse_args(text='dffd'),[u'dffd'])
        self.assertEqual(tasm.lex.parse_args(text='di, [bx+2]'),[u'di', u'[bx+2]'])
        self.assertEqual(tasm.lex.parse_args(text='di, offset _chrin'),[u'di', u'offset _chrin'])
        self.assertEqual(tasm.lex.parse_args(text='dl'),[u'dl'])
        self.assertEqual(tasm.lex.parse_args(text='dl, 23'),[u'dl', u'23'])
        self.assertEqual(tasm.lex.parse_args(text='dl, al'),[u'dl', u'al'])
        self.assertEqual(tasm.lex.parse_args(text='dl, cl'),[u'dl', u'cl'])
        self.assertEqual(tasm.lex.parse_args(text='dl,2'),[u'dl', u'2'])
        self.assertEqual(tasm.lex.parse_args(text='dl,4'),[u'dl', u'4'])
        self.assertEqual(tasm.lex.parse_args(text='dl,5'),[u'dl', u'5'])
        self.assertEqual(tasm.lex.parse_args(text='dl,[edi+1]'),[u'dl', u'[edi+1]'])
        self.assertEqual(tasm.lex.parse_args(text='dl,[edi]'),[u'dl', u'[edi]'])
        self.assertEqual(tasm.lex.parse_args(text='dl,var1'),[u'dl', u'var1'])
        self.assertEqual(tasm.lex.parse_args(text='ds es'),[u'ds es'])
        self.assertEqual(tasm.lex.parse_args(text='ds'),[u'ds'])
        self.assertEqual(tasm.lex.parse_args(text='ds, _data'),[u'ds', u'_data'])
        self.assertEqual(tasm.lex.parse_args(text='ds, bx'),[u'ds', u'bx'])
        self.assertEqual(tasm.lex.parse_args(text='ds:[edi],cl'),[u'ds:[edi]', u'cl'])
        self.assertEqual(tasm.lex.parse_args(text='ds:byte_41411F[eax], dl'),[u'ds:byte_41411F[eax]', u'dl'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr -1Ch'),[u'dword ptr -1Ch'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr -20h'),[u'dword ptr -20h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr -28h'),[u'dword ptr -28h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr -2Ch'),[u'dword ptr -2Ch'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr -4'),[u'dword ptr -4'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr 0Ch'),[u'dword ptr 0Ch'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr 10h'),[u'dword ptr 10h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr 14h'),[u'dword ptr 14h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr 8'),[u'dword ptr 8'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [ebp+var_20+4], 0FBCA7h'),[u'dword ptr [ebp+var_20+4]', u'0FBCA7h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [ebp+var_20+4], 12345h'),[u'dword ptr [ebp+var_20+4]', u'12345h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [ebp+var_20], 0FBCA7654h'),[u'dword ptr [ebp+var_20]', u'0FBCA7654h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [ebp+var_20], 65423456h'),[u'dword ptr [ebp+var_20]', u'65423456h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [ebp+var_20], 6789ABCDh'),[u'dword ptr [ebp+var_20]', u'6789ABCDh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [ebp+var_20], eax'),[u'dword ptr [ebp+var_20]', u'eax'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [ebp+var_20], edx'),[u'dword ptr [ebp+var_20]', u'edx'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [ebx-4]'),[u'dword ptr [ebx-4]'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+0Ch], 0 ; iflags'),[u'dword ptr [esp+0Ch]', u'0'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+0Ch], 0'),[u'dword ptr [esp+0Ch]', u'0'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+0Ch], 1 ; iflags'),[u'dword ptr [esp+0Ch]', u'1'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+0Ch], 1000h'),[u'dword ptr [esp+0Ch]', u'1000h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+0Ch], 1234h'),[u'dword ptr [esp+0Ch]', u'1234h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+0Ch], 17h'),[u'dword ptr [esp+0Ch]', u'17h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+0Ch], 80000000h'),[u'dword ptr [esp+0Ch]', u'80000000h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+10h], 0'),[u'dword ptr [esp+10h]', u'0'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+10h], 1'),[u'dword ptr [esp+10h]', u'1'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+10h], 10h'),[u'dword ptr [esp+10h]', u'10h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+10h], 11h'),[u'dword ptr [esp+10h]', u'11h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+14h], 0'),[u'dword ptr [esp+14h]', u'0'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+1Ch], 0'),[u'dword ptr [esp+1Ch]', u'0'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 0 ; op0'),[u'dword ptr [esp+4]', u'0'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 0 ; s1'),[u'dword ptr [esp+4]', u'0'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 0'),[u'dword ptr [esp+4]', u'0'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 0FFFC70F9h ; op0'),[u'dword ptr [esp+4]', u'0FFFC70F9h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 0FFFE0080h ; s0'),[u'dword ptr [esp+4]', u'0FFFE0080h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 0FFFE0080h ; s1'),[u'dword ptr [esp+4]', u'0FFFE0080h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 0FFFEDCBFh ; s1'),[u'dword ptr [esp+4]', u'0FFFEDCBFh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 0FFFFA549h ; op0'),[u'dword ptr [esp+4]', u'0FFFFA549h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 0FFFFFFD3h ; op1'),[u'dword ptr [esp+4]', u'0FFFFFFD3h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 0FFFFFFFBh ; op1'),[u'dword ptr [esp+4]', u'0FFFFFFFBh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 0FFFFFFFCh ; op1'),[u'dword ptr [esp+4]', u'0FFFFFFFCh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 0FFFFFFFDh ; op1'),[u'dword ptr [esp+4]', u'0FFFFFFFDh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 0FFFFFFFEh ; op0'),[u'dword ptr [esp+4]', u'0FFFFFFFEh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 0FFFFFFFEh ; s1'),[u'dword ptr [esp+4]', u'0FFFFFFFEh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 0FFFFFFFFh ; op0'),[u'dword ptr [esp+4]', u'0FFFFFFFFh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 0FFFFFFFFh ; op1'),[u'dword ptr [esp+4]', u'0FFFFFFFFh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 0FFFFFFFFh ; s0'),[u'dword ptr [esp+4]', u'0FFFFFFFFh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 0FFFFFFFFh ; s1'),[u'dword ptr [esp+4]', u'0FFFFFFFFh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 1 ; op0'),[u'dword ptr [esp+4]', u'1'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 1 ; s1'),[u'dword ptr [esp+4]', u'1'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 10000h ; op0'),[u'dword ptr [esp+4]', u'10000h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 10000h ; op1'),[u'dword ptr [esp+4]', u'10000h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 10000h ; s1'),[u'dword ptr [esp+4]', u'10000h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 100h ; op0'),[u'dword ptr [esp+4]', u'100h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 100h ; op1'),[u'dword ptr [esp+4]', u'100h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 10h ; op1'),[u'dword ptr [esp+4]', u'10h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 1234001Dh ; op0'),[u'dword ptr [esp+4]', u'1234001Dh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 12341h ; s1'),[u'dword ptr [esp+4]', u'12341h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 12345678h ; op0'),[u'dword ptr [esp+4]', u'12345678h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 12345678h ; s0'),[u'dword ptr [esp+4]', u'12345678h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 12348000h ; op0'),[u'dword ptr [esp+4]', u'12348000h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 127Eh ; op1'),[u'dword ptr [esp+4]', u'127Eh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 17h ; op0'),[u'dword ptr [esp+4]', u'17h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 1FF7Fh ; s1'),[u'dword ptr [esp+4]', u'1FF7Fh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 1FF80h ; s1'),[u'dword ptr [esp+4]', u'1FF80h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 1FF81h ; s1'),[u'dword ptr [esp+4]', u'1FF81h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 1FFFFh ; s1'),[u'dword ptr [esp+4]', u'1FFFFh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 2 ; op0'),[u'dword ptr [esp+4]', u'2'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 2 ; s1'),[u'dword ptr [esp+4]', u'2'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 20000h ; s1'),[u'dword ptr [esp+4]', u'20000h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 2Dh ; op1'),[u'dword ptr [esp+4]', u'2Dh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 3 ; op0'),[u'dword ptr [esp+4]', u'3'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 3 ; op1'),[u'dword ptr [esp+4]', u'3'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 4 ; op1'),[u'dword ptr [esp+4]', u'4'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 7FFFFFFFh ; op0'),[u'dword ptr [esp+4]', u'7FFFFFFFh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 80000000h ; op0'),[u'dword ptr [esp+4]', u'80000000h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 80000000h ; op1'),[u'dword ptr [esp+4]', u'80000000h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 80000001h ; op0'),[u'dword ptr [esp+4]', u'80000001h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 80008688h ; s0'),[u'dword ptr [esp+4]', u'80008688h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 8000h ; op0'),[u'dword ptr [esp+4]', u'8000h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 8000h ; op1'),[u'dword ptr [esp+4]', u'8000h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 80h ; op1'),[u'dword ptr [esp+4]', u'80h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 80h ; s1'),[u'dword ptr [esp+4]', u'80h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 812FADAh ; s1'),[u'dword ptr [esp+4]', u'812FADAh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 81h ; s1'),[u'dword ptr [esp+4]', u'81h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], 82345679h ; s0'),[u'dword ptr [esp+4]', u'82345679h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset a0x4000 ; "0x4000"'),[u'dword ptr [esp+4]', u'offset a0x4000'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset a0x4000Eax ; "0x4000(%%eax)"'),[u'dword ptr [esp+4]', u'offset a0x4000Eax'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset a0x4000Ebx ; "0x4000(%%ebx)"'),[u'dword ptr [esp+4]', u'offset a0x4000Ebx'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset a0x4000EbxEdx ; "0x4000(%%ebx, %%edx)"'),[u'dword ptr [esp+4]', u'offset a0x4000EbxEdx'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset a0x4000Ecx ; "0x4000(%%ecx)"'),[u'dword ptr [esp+4]', u'offset a0x4000Ecx'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset a0x4000EcxEcx2 ; "0x4000(%%ecx, %%ecx, 2)"'),[u'dword ptr [esp+4]', u'offset a0x4000EcxEcx2'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset a0x4000Edi ; "0x4000(%%edi)"'),[u'dword ptr [esp+4]', u'offset a0x4000Edi'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset a0x4000Edx ; "0x4000(%%edx)"'),[u'dword ptr [esp+4]', u'offset a0x4000Edx'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset a0x4000EdxEcx4 ; "0x4000(%%edx, %%ecx, 4)"'),[u'dword ptr [esp+4]', u'offset a0x4000EdxEcx4'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset a0x4000Esi ; "0x4000(%%esi)"'),[u'dword ptr [esp+4]', u'offset a0x4000Esi'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset a0x4000EsiEcx8 ; "0x4000(%%esi, %%ecx, 8)"'),[u'dword ptr [esp+4]', u'offset a0x4000EsiEcx8'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset a0x40Eax ; "0x40(%%eax)"'),[u'dword ptr [esp+4]', u'offset a0x40Eax'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset a0x40Eax2 ; "0x40(,%%eax, 2)"'),[u'dword ptr [esp+4]', u'offset a0x40Eax2'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset a0x40EaxEcx ; "0x40(%%eax, %%ecx)"'),[u'dword ptr [esp+4]', u'offset a0x40EaxEcx'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset a0x40Ebx ; "0x40(%%ebx)"'),[u'dword ptr [esp+4]', u'offset a0x40Ebx'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset a0x40Ebx4 ; "0x40(,%%ebx, 4)"'),[u'dword ptr [esp+4]', u'offset a0x40Ebx4'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset a0x40Ecx ; "0x40(%%ecx)"'),[u'dword ptr [esp+4]', u'offset a0x40Ecx'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset a0x40Ecx8 ; "0x40(,%%ecx, 8)"'),[u'dword ptr [esp+4]', u'offset a0x40Ecx8'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset a0x40Edi ; "0x40(%%edi)"'),[u'dword ptr [esp+4]', u'offset a0x40Edi'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset a0x40Edx ; "0x40(%%edx)"'),[u'dword ptr [esp+4]', u'offset a0x40Edx'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset a0x40Esi ; "0x40(%%esi)"'),[u'dword ptr [esp+4]', u'offset a0x40Esi'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset a10EcxEcx2 ; "-10(%%ecx, %%ecx, 2)"'),[u'dword ptr [esp+4]', u'offset a10EcxEcx2'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset a10EdxEcx4 ; "-10(%%edx, %%ecx, 4)"'),[u'dword ptr [esp+4]', u'offset a10EdxEcx4'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset a10EsiEcx8 ; "-10(%%esi, %%ecx, 8)"'),[u'dword ptr [esp+4]', u'offset a10EsiEcx8'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aAaa ; "aaa"'),[u'dword ptr [esp+4]', u'offset aAaa'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aAad ; "aad"'),[u'dword ptr [esp+4]', u'offset aAad'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aAam ; "aam"'),[u'dword ptr [esp+4]', u'offset aAam'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aAas ; "aas"'),[u'dword ptr [esp+4]', u'offset aAas'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aAdcb ; "adcb"'),[u'dword ptr [esp+4]', u'offset aAdcb'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aAdcl ; "adcl"'),[u'dword ptr [esp+4]', u'offset aAdcl'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aAdcw ; "adcw"'),[u'dword ptr [esp+4]', u'offset aAdcw'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aAddb ; "addb"'),[u'dword ptr [esp+4]', u'offset aAddb'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aAddl ; "addl"'),[u'dword ptr [esp+4]', u'offset aAddl'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aAddw ; "addw"'),[u'dword ptr [esp+4]', u'offset aAddw'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aAndb ; "andb"'),[u'dword ptr [esp+4]', u'offset aAndb'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aAndl ; "andl"'),[u'dword ptr [esp+4]', u'offset aAndl'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aAndw ; "andw"'),[u'dword ptr [esp+4]', u'offset aAndw'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aBsfl ; "bsfl"'),[u'dword ptr [esp+4]', u'offset aBsfl'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aBsfw ; "bsfw"'),[u'dword ptr [esp+4]', u'offset aBsfw'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aBsrl ; "bsrl"'),[u'dword ptr [esp+4]', u'offset aBsrl'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aBsrw ; "bsrw"'),[u'dword ptr [esp+4]', u'offset aBsrw'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aBswapl ; "bswapl"'),[u'dword ptr [esp+4]', u'offset aBswapl'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aBtcl ; "btcl"'),[u'dword ptr [esp+4]', u'offset aBtcl'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aBtcw ; "btcw"'),[u'dword ptr [esp+4]', u'offset aBtcw'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aBtl ; "btl"'),[u'dword ptr [esp+4]', u'offset aBtl'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aBtrl ; "btrl"'),[u'dword ptr [esp+4]', u'offset aBtrl'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aBtrw ; "btrw"'),[u'dword ptr [esp+4]', u'offset aBtrw'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aBtsl ; "btsl"'),[u'dword ptr [esp+4]', u'offset aBtsl'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aBtsw ; "btsw"'),[u'dword ptr [esp+4]', u'offset aBtsw'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aBtw ; "btw"'),[u'dword ptr [esp+4]', u'offset aBtw'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aCbw ; "cbw"'),[u'dword ptr [esp+4]', u'offset aCbw'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aCdq ; "cdq"'),[u'dword ptr [esp+4]', u'offset aCdq'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aCmpb ; "cmpb"'),[u'dword ptr [esp+4]', u'offset aCmpb'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aCmpl ; "cmpl"'),[u'dword ptr [esp+4]', u'offset aCmpl'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aCmpsb ; "cmpsb"'),[u'dword ptr [esp+4]', u'offset aCmpsb'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aCmpsl ; "cmpsl"'),[u'dword ptr [esp+4]', u'offset aCmpsl'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aCmpsw ; "cmpsw"'),[u'dword ptr [esp+4]', u'offset aCmpsw'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aCmpw ; "cmpw"'),[u'dword ptr [esp+4]', u'offset aCmpw'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aCmpxchgb ; "cmpxchgb"'),[u'dword ptr [esp+4]', u'offset aCmpxchgb'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aCmpxchgl ; "cmpxchgl"'),[u'dword ptr [esp+4]', u'offset aCmpxchgl'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aCmpxchgw ; "cmpxchgw"'),[u'dword ptr [esp+4]', u'offset aCmpxchgw'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aCwd ; "cwd"'),[u'dword ptr [esp+4]', u'offset aCwd'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aCwde ; "cwde"'),[u'dword ptr [esp+4]', u'offset aCwde'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aDaa ; "daa"'),[u'dword ptr [esp+4]', u'offset aDaa'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aDas ; "das"'),[u'dword ptr [esp+4]', u'offset aDas'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aDecb ; "decb"'),[u'dword ptr [esp+4]', u'offset aDecb'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aDecl ; "decl"'),[u'dword ptr [esp+4]', u'offset aDecl'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aDecw ; "decw"'),[u'dword ptr [esp+4]', u'offset aDecw'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aDivb ; "divb"'),[u'dword ptr [esp+4]', u'offset aDivb'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aDivl ; "divl"'),[u'dword ptr [esp+4]', u'offset aDivl'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aDivw ; "divw"'),[u'dword ptr [esp+4]', u'offset aDivw'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aEax ; "(%%eax)"'),[u'dword ptr [esp+4]', u'offset aEax'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aEax2 ; "(,%%eax, 2)"'),[u'dword ptr [esp+4]', u'offset aEax2'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aEaxEcx ; "(%%eax, %%ecx)"'),[u'dword ptr [esp+4]', u'offset aEaxEcx'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aEbx ; "(%%ebx)"'),[u'dword ptr [esp+4]', u'offset aEbx'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aEbx4 ; "(,%%ebx, 4)"'),[u'dword ptr [esp+4]', u'offset aEbx4'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aEbxEdx ; "(%%ebx, %%edx)"'),[u'dword ptr [esp+4]', u'offset aEbxEdx'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aEcx ; "(%%ecx)"'),[u'dword ptr [esp+4]', u'offset aEcx'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aEcx8 ; "(,%%ecx, 8)"'),[u'dword ptr [esp+4]', u'offset aEcx8'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aEcxEcx ; "(%%ecx, %%ecx)"'),[u'dword ptr [esp+4]', u'offset aEcxEcx'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aEcxEcx2 ; "(%%ecx, %%ecx, 2)"'),[u'dword ptr [esp+4]', u'offset aEcxEcx2'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aEdi ; "(%%edi)"'),[u'dword ptr [esp+4]', u'offset aEdi'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aEdiEcx ; "(%%edi, %%ecx)"'),[u'dword ptr [esp+4]', u'offset aEdiEcx'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aEdx ; "(%%edx)"'),[u'dword ptr [esp+4]', u'offset aEdx'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aEdxEcx ; "(%%edx, %%ecx)"'),[u'dword ptr [esp+4]', u'offset aEdxEcx'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aEdxEcx4 ; "(%%edx, %%ecx, 4)"'),[u'dword ptr [esp+4]', u'offset aEdxEcx4'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aEsi ; "(%%esi)"'),[u'dword ptr [esp+4]', u'offset aEsi'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aEsiEcx ; "(%%esi, %%ecx)"'),[u'dword ptr [esp+4]', u'offset aEsiEcx'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aEsiEcx8 ; "(%%esi, %%ecx, 8)"'),[u'dword ptr [esp+4]', u'offset aEsiEcx8'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aIdivb ; "idivb"'),[u'dword ptr [esp+4]', u'offset aIdivb'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aIdivl ; "idivl"'),[u'dword ptr [esp+4]', u'offset aIdivl'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aIdivw ; "idivw"'),[u'dword ptr [esp+4]', u'offset aIdivw'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aImulb ; "imulb"'),[u'dword ptr [esp+4]', u'offset aImulb'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aImull ; "imull"'),[u'dword ptr [esp+4]', u'offset aImull'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aImullIm ; "imull im"'),[u'dword ptr [esp+4]', u'offset aImullIm'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aImulw ; "imulw"'),[u'dword ptr [esp+4]', u'offset aImulw'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aImulwIm ; "imulw im"'),[u'dword ptr [esp+4]', u'offset aImulwIm'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aIncb ; "incb"'),[u'dword ptr [esp+4]', u'offset aIncb'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aIncl ; "incl"'),[u'dword ptr [esp+4]', u'offset aIncl'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aIncw ; "incw"'),[u'dword ptr [esp+4]', u'offset aIncw'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aJa ; "ja"'),[u'dword ptr [esp+4]', u'offset aJa'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aJae ; "jae"'),[u'dword ptr [esp+4]', u'offset aJae'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aJb ; "jb"'),[u'dword ptr [esp+4]', u'offset aJb'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aJbe ; "jbe"'),[u'dword ptr [esp+4]', u'offset aJbe'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aJcxz ; "jcxz"'),[u'dword ptr [esp+4]', u'offset aJcxz'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aJe ; "je"'),[u'dword ptr [esp+4]', u'offset aJe'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aJecxz ; "jecxz"'),[u'dword ptr [esp+4]', u'offset aJecxz'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aJg ; "jg"'),[u'dword ptr [esp+4]', u'offset aJg'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aJge ; "jge"'),[u'dword ptr [esp+4]', u'offset aJge'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aJl ; "jl"'),[u'dword ptr [esp+4]', u'offset aJl'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aJle ; "jle"'),[u'dword ptr [esp+4]', u'offset aJle'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aJne ; "jne"'),[u'dword ptr [esp+4]', u'offset aJne'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aJns ; "jns"'),[u'dword ptr [esp+4]', u'offset aJns'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aJs ; "js"'),[u'dword ptr [esp+4]', u'offset aJs'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aLodsb ; "lodsb"'),[u'dword ptr [esp+4]', u'offset aLodsb'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aLodsl ; "lodsl"'),[u'dword ptr [esp+4]', u'offset aLodsl'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aLodsw ; "lodsw"'),[u'dword ptr [esp+4]', u'offset aLodsw'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aLoopl ; "loopl"'),[u'dword ptr [esp+4]', u'offset aLoopl'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aLoopnzl ; "loopnzl"'),[u'dword ptr [esp+4]', u'offset aLoopnzl'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aLoopzl ; "loopzl"'),[u'dword ptr [esp+4]', u'offset aLoopzl'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aMovsb ; "movsb"'),[u'dword ptr [esp+4]', u'offset aMovsb'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aMovsl ; "movsl"'),[u'dword ptr [esp+4]', u'offset aMovsl'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aMovsw ; "movsw"'),[u'dword ptr [esp+4]', u'offset aMovsw'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aMulb ; "mulb"'),[u'dword ptr [esp+4]', u'offset aMulb'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aMull ; "mull"'),[u'dword ptr [esp+4]', u'offset aMull'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aMulw ; "mulw"'),[u'dword ptr [esp+4]', u'offset aMulw'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aNegb ; "negb"'),[u'dword ptr [esp+4]', u'offset aNegb'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aNegl ; "negl"'),[u'dword ptr [esp+4]', u'offset aNegl'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aNegw ; "negw"'),[u'dword ptr [esp+4]', u'offset aNegw'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aNotb ; "notb"'),[u'dword ptr [esp+4]', u'offset aNotb'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aNotl ; "notl"'),[u'dword ptr [esp+4]', u'offset aNotl'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aNotw ; "notw"'),[u'dword ptr [esp+4]', u'offset aNotw'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aOrb ; "orb"'),[u'dword ptr [esp+4]', u'offset aOrb'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aOrl ; "orl"'),[u'dword ptr [esp+4]', u'offset aOrl'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aOrw ; "orw"'),[u'dword ptr [esp+4]', u'offset aOrw'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aRclb ; "rclb"'),[u'dword ptr [esp+4]', u'offset aRclb'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aRcll ; "rcll"'),[u'dword ptr [esp+4]', u'offset aRcll'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aRclw ; "rclw"'),[u'dword ptr [esp+4]', u'offset aRclw'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aRcrb ; "rcrb"'),[u'dword ptr [esp+4]', u'offset aRcrb'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aRcrl ; "rcrl"'),[u'dword ptr [esp+4]', u'offset aRcrl'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aRcrw ; "rcrw"'),[u'dword ptr [esp+4]', u'offset aRcrw'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aRepLodsb ; "rep lodsb"'),[u'dword ptr [esp+4]', u'offset aRepLodsb'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aRepLodsl ; "rep lodsl"'),[u'dword ptr [esp+4]', u'offset aRepLodsl'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aRepLodsw ; "rep lodsw"'),[u'dword ptr [esp+4]', u'offset aRepLodsw'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aRepMovsb ; "rep movsb"'),[u'dword ptr [esp+4]', u'offset aRepMovsb'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aRepMovsl ; "rep movsl"'),[u'dword ptr [esp+4]', u'offset aRepMovsl'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aRepMovsw ; "rep movsw"'),[u'dword ptr [esp+4]', u'offset aRepMovsw'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aRepStosb ; "rep stosb"'),[u'dword ptr [esp+4]', u'offset aRepStosb'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aRepStosl ; "rep stosl"'),[u'dword ptr [esp+4]', u'offset aRepStosl'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aRepStosw ; "rep stosw"'),[u'dword ptr [esp+4]', u'offset aRepStosw'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aRepnzCmpsb ; "repnz cmpsb"'),[u'dword ptr [esp+4]', u'offset aRepnzCmpsb'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aRepnzCmpsl ; "repnz cmpsl"'),[u'dword ptr [esp+4]', u'offset aRepnzCmpsl'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aRepnzCmpsw ; "repnz cmpsw"'),[u'dword ptr [esp+4]', u'offset aRepnzCmpsw'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aRepnzScasb ; "repnz scasb"'),[u'dword ptr [esp+4]', u'offset aRepnzScasb'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aRepnzScasl ; "repnz scasl"'),[u'dword ptr [esp+4]', u'offset aRepnzScasl'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aRepnzScasw ; "repnz scasw"'),[u'dword ptr [esp+4]', u'offset aRepnzScasw'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aRepzCmpsb ; "repz cmpsb"'),[u'dword ptr [esp+4]', u'offset aRepzCmpsb'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aRepzCmpsl ; "repz cmpsl"'),[u'dword ptr [esp+4]', u'offset aRepzCmpsl'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aRepzCmpsw ; "repz cmpsw"'),[u'dword ptr [esp+4]', u'offset aRepzCmpsw'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aRepzScasb ; "repz scasb"'),[u'dword ptr [esp+4]', u'offset aRepzScasb'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aRepzScasl ; "repz scasl"'),[u'dword ptr [esp+4]', u'offset aRepzScasl'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aRepzScasw ; "repz scasw"'),[u'dword ptr [esp+4]', u'offset aRepzScasw'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aRolb ; "rolb"'),[u'dword ptr [esp+4]', u'offset aRolb'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aRoll ; "roll"'),[u'dword ptr [esp+4]', u'offset aRoll'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aRolw ; "rolw"'),[u'dword ptr [esp+4]', u'offset aRolw'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aRorb ; "rorb"'),[u'dword ptr [esp+4]', u'offset aRorb'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aRorl ; "rorl"'),[u'dword ptr [esp+4]', u'offset aRorl'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aRorw ; "rorw"'),[u'dword ptr [esp+4]', u'offset aRorw'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aSarb ; "sarb"'),[u'dword ptr [esp+4]', u'offset aSarb'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aSarl ; "sarl"'),[u'dword ptr [esp+4]', u'offset aSarl'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aSarw ; "sarw"'),[u'dword ptr [esp+4]', u'offset aSarw'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aSbbb ; "sbbb"'),[u'dword ptr [esp+4]', u'offset aSbbb'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aSbbl ; "sbbl"'),[u'dword ptr [esp+4]', u'offset aSbbl'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aSbbw ; "sbbw"'),[u'dword ptr [esp+4]', u'offset aSbbw'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aScasb ; "scasb"'),[u'dword ptr [esp+4]', u'offset aScasb'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aScasl ; "scasl"'),[u'dword ptr [esp+4]', u'offset aScasl'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aScasw ; "scasw"'),[u'dword ptr [esp+4]', u'offset aScasw'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aSetb ; "setb"'),[u'dword ptr [esp+4]', u'offset aSetb'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aSete ; "sete"'),[u'dword ptr [esp+4]', u'offset aSete'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aSetne ; "setne"'),[u'dword ptr [esp+4]', u'offset aSetne'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aShlb ; "shlb"'),[u'dword ptr [esp+4]', u'offset aShlb'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aShldl ; "shldl"'),[u'dword ptr [esp+4]', u'offset aShldl'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aShldw ; "shldw"'),[u'dword ptr [esp+4]', u'offset aShldw'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aShll ; "shll"'),[u'dword ptr [esp+4]', u'offset aShll'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aShlw ; "shlw"'),[u'dword ptr [esp+4]', u'offset aShlw'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aShrb ; "shrb"'),[u'dword ptr [esp+4]', u'offset aShrb'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aShrdl ; "shrdl"'),[u'dword ptr [esp+4]', u'offset aShrdl'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aShrdw ; "shrdw"'),[u'dword ptr [esp+4]', u'offset aShrdw'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aShrl ; "shrl"'),[u'dword ptr [esp+4]', u'offset aShrl'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aShrw ; "shrw"'),[u'dword ptr [esp+4]', u'offset aShrw'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aStosb ; "stosb"'),[u'dword ptr [esp+4]', u'offset aStosb'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aStosl ; "stosl"'),[u'dword ptr [esp+4]', u'offset aStosl'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aStosw ; "stosw"'),[u'dword ptr [esp+4]', u'offset aStosw'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aSubb ; "subb"'),[u'dword ptr [esp+4]', u'offset aSubb'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aSubl ; "subl"'),[u'dword ptr [esp+4]', u'offset aSubl'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aSubw ; "subw"'),[u'dword ptr [esp+4]', u'offset aSubw'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aXaddb ; "xaddb"'),[u'dword ptr [esp+4]', u'offset aXaddb'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aXaddl ; "xaddl"'),[u'dword ptr [esp+4]', u'offset aXaddl'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aXaddw ; "xaddw"'),[u'dword ptr [esp+4]', u'offset aXaddw'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aXchgb ; "xchgb"'),[u'dword ptr [esp+4]', u'offset aXchgb'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aXchgl ; "xchgl"'),[u'dword ptr [esp+4]', u'offset aXchgl'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aXchgw ; "xchgw"'),[u'dword ptr [esp+4]', u'offset aXchgw'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aXorb ; "xorb"'),[u'dword ptr [esp+4]', u'offset aXorb'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aXorl ; "xorl"'),[u'dword ptr [esp+4]', u'offset aXorl'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+4], offset aXorw ; "xorw"'),[u'dword ptr [esp+4]', u'offset aXorw'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 0 ; iflags'),[u'dword ptr [esp+8]', u'0'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 0 ; op1'),[u'dword ptr [esp+8]', u'0'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 0'),[u'dword ptr [esp+8]', u'0'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 0FBCA7654h'),[u'dword ptr [esp+8]', u'0FBCA7654h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 0FFFEFDFCh'),[u'dword ptr [esp+8]', u'0FFFEFDFCh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 0FFFF7FFFh'),[u'dword ptr [esp+8]', u'0FFFF7FFFh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 0FFFFFED4h ; op1'),[u'dword ptr [esp+8]', u'0FFFFFED4h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 0FFFFFFD3h ; op1'),[u'dword ptr [esp+8]', u'0FFFFFFD3h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 0FFFFFFD3h'),[u'dword ptr [esp+8]', u'0FFFFFFD3h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 0FFFFFFF7h'),[u'dword ptr [esp+8]', u'0FFFFFFF7h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 0FFFFFFFAh ; op1'),[u'dword ptr [esp+8]', u'0FFFFFFFAh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 0FFFFFFFBh ; op1'),[u'dword ptr [esp+8]', u'0FFFFFFFBh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 0FFFFFFFCh ; op1'),[u'dword ptr [esp+8]', u'0FFFFFFFCh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 0FFFFFFFDh ; op1'),[u'dword ptr [esp+8]', u'0FFFFFFFDh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 0FFFFFFFEh ; op1'),[u'dword ptr [esp+8]', u'0FFFFFFFEh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 0FFFFFFFFh ; op1'),[u'dword ptr [esp+8]', u'0FFFFFFFFh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 0FFFFFFFFh'),[u'dword ptr [esp+8]', u'0FFFFFFFFh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 0FFFFFFFh ; op1'),[u'dword ptr [esp+8]', u'0FFFFFFFh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 0FFFFFFh ; op1'),[u'dword ptr [esp+8]', u'0FFFFFFh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 0FFFFFh ; op1'),[u'dword ptr [esp+8]', u'0FFFFFh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 0FFFFh ; op1'),[u'dword ptr [esp+8]', u'0FFFFh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 0FFFh ; op1'),[u'dword ptr [esp+8]', u'0FFFh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 0FFh ; op1'),[u'dword ptr [esp+8]', u'0FFh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 0Fh ; op1'),[u'dword ptr [esp+8]', u'0Fh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 1 ; iflags'),[u'dword ptr [esp+8]', u'1'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 1 ; op1'),[u'dword ptr [esp+8]', u'1'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 10000h ; op1'),[u'dword ptr [esp+8]', u'10000h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 100h ; op1'),[u'dword ptr [esp+8]', u'100h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 12340128h'),[u'dword ptr [esp+8]', u'12340128h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 12340205h'),[u'dword ptr [esp+8]', u'12340205h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 12340306h'),[u'dword ptr [esp+8]', u'12340306h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 12340407h'),[u'dword ptr [esp+8]', u'12340407h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 1234040Ah'),[u'dword ptr [esp+8]', u'1234040Ah'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 12340503h'),[u'dword ptr [esp+8]', u'12340503h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 12340506h'),[u'dword ptr [esp+8]', u'12340506h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 12340507h'),[u'dword ptr [esp+8]', u'12340507h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 12340547h'),[u'dword ptr [esp+8]', u'12340547h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 12340559h'),[u'dword ptr [esp+8]', u'12340559h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 12340560h'),[u'dword ptr [esp+8]', u'12340560h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 1234059Fh'),[u'dword ptr [esp+8]', u'1234059Fh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 123405A0h'),[u'dword ptr [esp+8]', u'123405A0h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 123405FAh'),[u'dword ptr [esp+8]', u'123405FAh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 12345678h'),[u'dword ptr [esp+8]', u'12345678h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 12Ch ; op1'),[u'dword ptr [esp+8]', u'12Ch'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 1FFFFFFFh ; op1'),[u'dword ptr [esp+8]', u'1FFFFFFFh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 1FFFFFFh ; op1'),[u'dword ptr [esp+8]', u'1FFFFFFh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 1FFFFFh ; op1'),[u'dword ptr [esp+8]', u'1FFFFFh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 1FFFFh ; op1'),[u'dword ptr [esp+8]', u'1FFFFh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 1FFFh ; op1'),[u'dword ptr [esp+8]', u'1FFFh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 1FFh ; op1'),[u'dword ptr [esp+8]', u'1FFh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 1Fh ; op1'),[u'dword ptr [esp+8]', u'1Fh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 2 ; op1'),[u'dword ptr [esp+8]', u'2'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 2Dh ; op1'),[u'dword ptr [esp+8]', u'2Dh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 2Dh'),[u'dword ptr [esp+8]', u'2Dh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 3 ; op1'),[u'dword ptr [esp+8]', u'3'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 303Bh ; op1'),[u'dword ptr [esp+8]', u'303Bh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 340128h'),[u'dword ptr [esp+8]', u'340128h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 3FFFFFFFh ; op1'),[u'dword ptr [esp+8]', u'3FFFFFFFh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 3FFFFFFh ; op1'),[u'dword ptr [esp+8]', u'3FFFFFFh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 3FFFFFh ; op1'),[u'dword ptr [esp+8]', u'3FFFFFh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 3FFFFh ; op1'),[u'dword ptr [esp+8]', u'3FFFFh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 3FFFh ; op1'),[u'dword ptr [esp+8]', u'3FFFh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 3FFh ; op1'),[u'dword ptr [esp+8]', u'3FFh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 3Fh ; op1'),[u'dword ptr [esp+8]', u'3Fh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 7FFFFFFFh ; op1'),[u'dword ptr [esp+8]', u'7FFFFFFFh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 7FFFFFFFh'),[u'dword ptr [esp+8]', u'7FFFFFFFh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 7FFFFFFh ; op1'),[u'dword ptr [esp+8]', u'7FFFFFFh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 7FFFFFh ; op1'),[u'dword ptr [esp+8]', u'7FFFFFh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 7FFFFh ; op1'),[u'dword ptr [esp+8]', u'7FFFFh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 7FFFh ; op1'),[u'dword ptr [esp+8]', u'7FFFh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 7FFFh'),[u'dword ptr [esp+8]', u'7FFFh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 7FFh ; op1'),[u'dword ptr [esp+8]', u'7FFh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 7Fh ; op1'),[u'dword ptr [esp+8]', u'7Fh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 80000000h ; op1'),[u'dword ptr [esp+8]', u'80000000h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 8000h ; op1'),[u'dword ptr [esp+8]', u'8000h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 8000h'),[u'dword ptr [esp+8]', u'8000h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 81234567h ; op1'),[u'dword ptr [esp+8]', u'81234567h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 81238567h ; op1'),[u'dword ptr [esp+8]', u'81238567h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp+8], 8234A6F8h'),[u'dword ptr [esp+8]', u'8234A6F8h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp]'),[u'dword ptr [esp]'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 0 ; op0h'),[u'dword ptr [esp]', u'0'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 0 ; s0'),[u'dword ptr [esp]', u'0'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 0Eh ; op0h'),[u'dword ptr [esp]', u'0Eh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 0FEh ; op0h'),[u'dword ptr [esp]', u'0FEh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 0FFEh ; op0h'),[u'dword ptr [esp]', u'0FFEh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 0FFFE0080h ; s0'),[u'dword ptr [esp]', u'0FFFE0080h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 0FFFE0080h ; s2'),[u'dword ptr [esp]', u'0FFFE0080h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 0FFFEh ; op0h'),[u'dword ptr [esp]', u'0FFFEh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 0FFFFEh ; op0h'),[u'dword ptr [esp]', u'0FFFFEh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 0FFFFFEh ; op0h'),[u'dword ptr [esp]', u'0FFFFFEh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 0FFFFFFECh ; op0'),[u'dword ptr [esp]', u'0FFFFFFECh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 0FFFFFFECh ; op0h'),[u'dword ptr [esp]', u'0FFFFFFECh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 0FFFFFFEh ; op0h'),[u'dword ptr [esp]', u'0FFFFFFEh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 0FFFFFFFDh ; op0h'),[u'dword ptr [esp]', u'0FFFFFFFDh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 0FFFFFFFEh ; op0h'),[u'dword ptr [esp]', u'0FFFFFFFEh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 0FFFFFFFFh ; op0h'),[u'dword ptr [esp]', u'0FFFFFFFFh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 0FFFFFFFFh ; s0'),[u'dword ptr [esp]', u'0FFFFFFFFh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 0FFFFFFFFh ; s2'),[u'dword ptr [esp]', u'0FFFFFFFFh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 1 ; op0h'),[u'dword ptr [esp]', u'1'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 10000h ; op0'),[u'dword ptr [esp]', u'10000h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 100h ; op0'),[u'dword ptr [esp]', u'100h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 10h ; op0'),[u'dword ptr [esp]', u'10h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 12340004h ; op0'),[u'dword ptr [esp]', u'12340004h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 1234001Dh ; op0'),[u'dword ptr [esp]', u'1234001Dh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 12341678h ; op0'),[u'dword ptr [esp]', u'12341678h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 12341h ; s0'),[u'dword ptr [esp]', u'12341h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 12343h ; op0h'),[u'dword ptr [esp]', u'12343h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 1234561Dh ; op0'),[u'dword ptr [esp]', u'1234561Dh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 12345678h ; s0'),[u'dword ptr [esp]', u'12345678h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 12347F7Fh ; s0'),[u'dword ptr [esp]', u'12347F7Fh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 12347FFFh ; s0'),[u'dword ptr [esp]', u'12347FFFh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 12348000h ; s0'),[u'dword ptr [esp]', u'12348000h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 12348080h ; s0'),[u'dword ptr [esp]', u'12348080h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 14h ; op0'),[u'dword ptr [esp]', u'14h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 14h ; op0h'),[u'dword ptr [esp]', u'14h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 17h ; op0'),[u'dword ptr [esp]', u'17h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 1Eh ; op0h'),[u'dword ptr [esp]', u'1Eh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 1FEh ; op0h'),[u'dword ptr [esp]', u'1FEh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 1FFEh ; op0h'),[u'dword ptr [esp]', u'1FFEh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 1FFFEh ; op0h'),[u'dword ptr [esp]', u'1FFFEh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 1FFFFEh ; op0h'),[u'dword ptr [esp]', u'1FFFFEh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 1FFFFFEh ; op0h'),[u'dword ptr [esp]', u'1FFFFFEh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 1FFFFFFEh ; op0h'),[u'dword ptr [esp]', u'1FFFFFFEh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 2 ; op0h'),[u'dword ptr [esp]', u'2'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 21AD3D34h ; s2'),[u'dword ptr [esp]', u'21AD3D34h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 3 ; op0'),[u'dword ptr [esp]', u'3'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 3 ; op0h'),[u'dword ptr [esp]', u'3'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 3Eh ; op0h'),[u'dword ptr [esp]', u'3Eh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 3FEh ; op0h'),[u'dword ptr [esp]', u'3FEh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 3FFEh ; op0h'),[u'dword ptr [esp]', u'3FFEh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 3FFFEh ; op0h'),[u'dword ptr [esp]', u'3FFFEh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 3FFFFEh ; op0h'),[u'dword ptr [esp]', u'3FFFFEh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 3FFFFFEh ; op0h'),[u'dword ptr [esp]', u'3FFFFFEh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 3FFFFFFEh ; op0h'),[u'dword ptr [esp]', u'3FFFFFFEh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 4 ; op0h'),[u'dword ptr [esp]', u'4'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 43210123h ; op0'),[u'dword ptr [esp]', u'43210123h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 7Eh ; op0h'),[u'dword ptr [esp]', u'7Eh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 7FEh ; op0h'),[u'dword ptr [esp]', u'7FEh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 7FFEh ; op0h'),[u'dword ptr [esp]', u'7FFEh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 7FFFEh ; op0h'),[u'dword ptr [esp]', u'7FFFEh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 7FFFFEh ; op0h'),[u'dword ptr [esp]', u'7FFFFEh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 7FFFFFEh ; op0h'),[u'dword ptr [esp]', u'7FFFFFEh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 7FFFFFFEh ; op0h'),[u'dword ptr [esp]', u'7FFFFFFEh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 7FFFFFFFh ; s0'),[u'dword ptr [esp]', u'7FFFFFFFh'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 80000000h ; op0'),[u'dword ptr [esp]', u'80000000h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 80000000h ; s0'),[u'dword ptr [esp]', u'80000000h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 80008481h ; s2'),[u'dword ptr [esp]', u'80008481h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 8000h ; op0'),[u'dword ptr [esp]', u'8000h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 80h ; op0'),[u'dword ptr [esp]', u'80h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], 813F3421h ; s2'),[u'dword ptr [esp]', u'813F3421h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], offset a10sA08lxB08lx ; "%-10s A=%08lx B=%08lx\\n"'),[u'dword ptr [esp]', u'offset a10sA08lxB08lx'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], offset a10sA08lxB08lxC ; "%-10s A=%08lx B=%08lx C=%08lx R=%08lx C"...'),[u'dword ptr [esp]', u'offset a10sA08lxB08lxC'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], offset a10sA08lxB08lxR ; "%-10s A=%08lx B=%08lx R=%08lx CC=%04lx"...'),[u'dword ptr [esp]', u'offset a10sA08lxB08lxR'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], offset a10sA08lxB08lxR_0 ; "%-10s A=%08lx B=%08lx R=%08lx CCIN=%04l"...'),[u'dword ptr [esp]', u'offset a10sA08lxB08lxR_0'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], offset a10sA08lxR08lx ; "%-10s A=%08lx R=%08lx\\n"'),[u'dword ptr [esp]', u'offset a10sA08lxR08lx'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], offset a10sA08lxR08lx0 ; "%-10s A=%08lx R=%08lx:%08lx\\n"'),[u'dword ptr [esp]', u'offset a10sA08lxR08lx0'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], offset a10sA08lxR08lxC ; "%-10s A=%08lx R=%08lx CCIN=%04lx CC=%04"...'),[u'dword ptr [esp]', u'offset a10sA08lxR08lxC'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], offset a10sA08lxR08lxL ; "%-10s A=%08lx R=%08lx %ld\\n"'),[u'dword ptr [esp]', u'offset a10sA08lxR08lxL'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], offset a10sA08lxR08lx_0 ; "%-10s: A=%08lx R=%08lx\\n"'),[u'dword ptr [esp]', u'offset a10sA08lxR08lx_0'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], offset a10sA08xR08xCci ; "%-10s A=%08x R=%08x CCIN=%04x CC=%04x\\n"'),[u'dword ptr [esp]', u'offset a10sA08xR08xCci'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], offset a10sAh08lxAl08l ; "%-10s AH=%08lx AL=%08lx B=%08lx RH=%08l"...'),[u'dword ptr [esp]', u'offset a10sAh08lxAl08l'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], offset a10sD ; "%-10s %d\\n"'),[u'dword ptr [esp]', u'offset a10sD'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], offset a10sEax08lxA08l ; "%-10s EAX=%08lx A=%08lx C=%08lx CC=%02l"...'),[u'dword ptr [esp]', u'offset a10sEax08lxA08l'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], offset a10sEcx08lxZfLd ; "%-10s ECX=%08lx ZF=%ld r=%d\\n"'),[u'dword ptr [esp]', u'offset a10sEcx08lxZfLd'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], offset a10sEsi08lxEdi0 ; "%-10s ESI=%08lx EDI=%08lx EAX=%08lx ECX"...'),[u'dword ptr [esp]', u'offset a10sEsi08lxEdi0'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], offset aCmpxchg8bEax08 ; "cmpxchg8b: eax=%08lx edx=%08lx op1=%016"...'),[u'dword ptr [esp]', u'offset aCmpxchg8bEax08'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], offset aLeaS08lx ; "lea %s = %08lx\\n"'),[u'dword ptr [esp]', u'offset aLeaS08lx'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], offset aPopcntA08lxR08 ; "popcnt A=%08lx R=%08lx flags=%lx\\n"'),[u'dword ptr [esp]', u'offset aPopcntA08lxR08'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], offset aPoplEsp08lx ; "popl esp=%08lx\\n"'),[u'dword ptr [esp]', u'offset aPoplEsp08lx'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], offset aPopwEsp08lx ; "popw esp=%08lx\\n"'),[u'dword ptr [esp]', u'offset aPopwEsp08lx'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], offset aXaddlSameRes08 ; "xaddl same res=%08x\\n"'),[u'dword ptr [esp]', u'offset aXaddlSameRes08'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr [esp], offset aXlatEax08lx ; "xlat: EAX=%08lx\\n"'),[u'dword ptr [esp]', u'offset aXlatEax08lx'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr es:[0],077aaFF00h'),[u'dword ptr es:[0]', u'077aaFF00h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr es:[20*320+160],077aaFF00h'),[u'dword ptr es:[20*320+160]', u'077aaFF00h'])
        self.assertEqual(tasm.lex.parse_args(text='dword ptr var4,11'),[u'dword ptr var4', u'11'])
        self.assertEqual(tasm.lex.parse_args(text='dx cx ; linear address of allocated memory block'),[u'dx cx'])
        self.assertEqual(tasm.lex.parse_args(text='dx'),[u'dx'])
        self.assertEqual(tasm.lex.parse_args(text='dx, 258h'),[u'dx', u'258h'])
        self.assertEqual(tasm.lex.parse_args(text='dx, ax'),[u'dx', u'ax'])
        self.assertEqual(tasm.lex.parse_args(text='dx, bx, cl'),[u'dx', u'bx', u'cl'])
        self.assertEqual(tasm.lex.parse_args(text='dx, cl'),[u'dx', u'cl'])
        self.assertEqual(tasm.lex.parse_args(text='dx, cx'),[u'dx', u'cx'])
        self.assertEqual(tasm.lex.parse_args(text='dx, offset _aNotEnoughMemory ; "Not enough Memory available\\r\\n"'),[u'dx', u'offset _aNotEnoughMemory'])
        self.assertEqual(tasm.lex.parse_args(text='dx, offset _chrin'),[u'dx', u'offset _chrin'])
        self.assertEqual(tasm.lex.parse_args(text='dx, offset _eModuleNotFound ; "Module not found\\r\\n"'),[u'dx', u'offset _eModuleNotFound'])
        self.assertEqual(tasm.lex.parse_args(text='dx,-1'),[u'dx', u'-1'])
        self.assertEqual(tasm.lex.parse_args(text='dx,0'),[u'dx', u'0'])
        self.assertEqual(tasm.lex.parse_args(text='dx,1'),[u'dx', u'1'])
        self.assertEqual(tasm.lex.parse_args(text='dx,11'),[u'dx', u'11'])
        self.assertEqual(tasm.lex.parse_args(text='dx,3c8h'),[u'dx', u'3c8h'])
        self.assertEqual(tasm.lex.parse_args(text='dx,3c9h'),[u'dx', u'3c9h'])
        self.assertEqual(tasm.lex.parse_args(text='dx,5'),[u'dx', u'5'])
        self.assertEqual(tasm.lex.parse_args(text='dx,[edi+1]'),[u'dx', u'[edi+1]'])
        self.assertEqual(tasm.lex.parse_args(text='dx,al'),[u'dx', u'al'])
        self.assertEqual(tasm.lex.parse_args(text='dx,ax'),[u'dx', u'ax'])
        self.assertEqual(tasm.lex.parse_args(text='dx,cx'),[u'dx', u'cx'])
        self.assertEqual(tasm.lex.parse_args(text='eax ; int'),[u'eax'])
        self.assertEqual(tasm.lex.parse_args(text='eax ; unsigned int'),[u'eax'])
        self.assertEqual(tasm.lex.parse_args(text='eax ebp ebx'),[u'eax ebp ebx'])
        self.assertEqual(tasm.lex.parse_args(text='eax'),[u'eax'])
        self.assertEqual(tasm.lex.parse_args(text='eax, 0'),[u'eax', u'0'])
        self.assertEqual(tasm.lex.parse_args(text='eax, 0FFFF7FFFh'),[u'eax', u'0FFFF7FFFh'])
        self.assertEqual(tasm.lex.parse_args(text='eax, 0ffffffffh'),[u'eax', u'0ffffffffh'])
        self.assertEqual(tasm.lex.parse_args(text='eax, 1'),[u'eax', u'1'])
        self.assertEqual(tasm.lex.parse_args(text='eax, 12340407h'),[u'eax', u'12340407h'])
        self.assertEqual(tasm.lex.parse_args(text='eax, 12340547h'),[u'eax', u'12340547h'])
        self.assertEqual(tasm.lex.parse_args(text='eax, 12340559h'),[u'eax', u'12340559h'])
        self.assertEqual(tasm.lex.parse_args(text='eax, 12340560h'),[u'eax', u'12340560h'])
        self.assertEqual(tasm.lex.parse_args(text='eax, 1234059Fh'),[u'eax', u'1234059Fh'])
        self.assertEqual(tasm.lex.parse_args(text='eax, 123405FAh'),[u'eax', u'123405FAh'])
        self.assertEqual(tasm.lex.parse_args(text='eax, 12345678h'),[u'eax', u'12345678h'])
        self.assertEqual(tasm.lex.parse_args(text='eax, 7FFFFFFFh'),[u'eax', u'7FFFFFFFh'])
        self.assertEqual(tasm.lex.parse_args(text='eax, B'),[u'eax', u'B'])
        self.assertEqual(tasm.lex.parse_args(text='eax, CC'),[u'eax', u'CC'])
        self.assertEqual(tasm.lex.parse_args(text='eax, DDD'),[u'eax', u'DDD'])
        self.assertEqual(tasm.lex.parse_args(text='eax, [eax+4000h]'),[u'eax', u'[eax+4000h]'])
        self.assertEqual(tasm.lex.parse_args(text='eax, [eax+40h]'),[u'eax', u'[eax+40h]'])
        self.assertEqual(tasm.lex.parse_args(text='eax, [eax+ecx+40h]'),[u'eax', u'[eax+ecx+40h]'])
        self.assertEqual(tasm.lex.parse_args(text='eax, [eax+ecx]'),[u'eax', u'[eax+ecx]'])
        self.assertEqual(tasm.lex.parse_args(text='eax, [eax]'),[u'eax', u'[eax]'])
        self.assertEqual(tasm.lex.parse_args(text='eax, [ebx+4000h]'),[u'eax', u'[ebx+4000h]'])
        self.assertEqual(tasm.lex.parse_args(text='eax, [ebx+40h]'),[u'eax', u'[ebx+40h]'])
        self.assertEqual(tasm.lex.parse_args(text='eax, [ebx+edx+4000h]'),[u'eax', u'[ebx+edx+4000h]'])
        self.assertEqual(tasm.lex.parse_args(text='eax, [ebx+edx]'),[u'eax', u'[ebx+edx]'])
        self.assertEqual(tasm.lex.parse_args(text='eax, [ebx]'),[u'eax', u'[ebx]'])
        self.assertEqual(tasm.lex.parse_args(text='eax, [ecx+4000h]'),[u'eax', u'[ecx+4000h]'])
        self.assertEqual(tasm.lex.parse_args(text='eax, [ecx+40h]'),[u'eax', u'[ecx+40h]'])
        self.assertEqual(tasm.lex.parse_args(text='eax, [ecx+ecx*2+4000h]'),[u'eax', u'[ecx+ecx*2+4000h]'])
        self.assertEqual(tasm.lex.parse_args(text='eax, [ecx+ecx*2-0Ah]'),[u'eax', u'[ecx+ecx*2-0Ah]'])
        self.assertEqual(tasm.lex.parse_args(text='eax, [ecx+ecx*2]'),[u'eax', u'[ecx+ecx*2]'])
        self.assertEqual(tasm.lex.parse_args(text='eax, [ecx+ecx]'),[u'eax', u'[ecx+ecx]'])
        self.assertEqual(tasm.lex.parse_args(text='eax, [ecx]'),[u'eax', u'[ecx]'])
        self.assertEqual(tasm.lex.parse_args(text='eax, [edi+4000h]'),[u'eax', u'[edi+4000h]'])
        self.assertEqual(tasm.lex.parse_args(text='eax, [edi+40h]'),[u'eax', u'[edi+40h]'])
        self.assertEqual(tasm.lex.parse_args(text='eax, [edi+ecx]'),[u'eax', u'[edi+ecx]'])
        self.assertEqual(tasm.lex.parse_args(text='eax, [edi]'),[u'eax', u'[edi]'])
        self.assertEqual(tasm.lex.parse_args(text='eax, [edx+4000h]'),[u'eax', u'[edx+4000h]'])
        self.assertEqual(tasm.lex.parse_args(text='eax, [edx+40h]'),[u'eax', u'[edx+40h]'])
        self.assertEqual(tasm.lex.parse_args(text='eax, [edx+ecx*4+4000h]'),[u'eax', u'[edx+ecx*4+4000h]'])
        self.assertEqual(tasm.lex.parse_args(text='eax, [edx+ecx*4-0Ah]'),[u'eax', u'[edx+ecx*4-0Ah]'])
        self.assertEqual(tasm.lex.parse_args(text='eax, [edx+ecx*4]'),[u'eax', u'[edx+ecx*4]'])
        self.assertEqual(tasm.lex.parse_args(text='eax, [edx+ecx]'),[u'eax', u'[edx+ecx]'])
        self.assertEqual(tasm.lex.parse_args(text='eax, [edx]'),[u'eax', u'[edx]'])
        self.assertEqual(tasm.lex.parse_args(text='eax, [esi+4000h]'),[u'eax', u'[esi+4000h]'])
        self.assertEqual(tasm.lex.parse_args(text='eax, [esi+40h]'),[u'eax', u'[esi+40h]'])
        self.assertEqual(tasm.lex.parse_args(text='eax, [esi+ecx*8-0Ah]'),[u'eax', u'[esi+ecx*8-0Ah]'])
        self.assertEqual(tasm.lex.parse_args(text='eax, [esi+ecx*8]'),[u'eax', u'[esi+ecx*8]'])
        self.assertEqual(tasm.lex.parse_args(text='eax, [esi+ecx]'),[u'eax', u'[esi+ecx]'])
        self.assertEqual(tasm.lex.parse_args(text='eax, [esi]'),[u'eax', u'[esi]'])
        self.assertEqual(tasm.lex.parse_args(text='eax, ds:0[eax*2]'),[u'eax', u'ds:0[eax*2]'])
        self.assertEqual(tasm.lex.parse_args(text='eax, ds:0[ebx*4]'),[u'eax', u'ds:0[ebx*4]'])
        self.assertEqual(tasm.lex.parse_args(text='eax, ds:0[ecx*8]'),[u'eax', u'ds:0[ecx*8]'])
        self.assertEqual(tasm.lex.parse_args(text='eax, ds:40h[eax*2]'),[u'eax', u'ds:40h[eax*2]'])
        self.assertEqual(tasm.lex.parse_args(text='eax, ds:40h[ebx*4]'),[u'eax', u'ds:40h[ebx*4]'])
        self.assertEqual(tasm.lex.parse_args(text='eax, ds:40h[ecx*8]'),[u'eax', u'ds:40h[ecx*8]'])
        self.assertEqual(tasm.lex.parse_args(text='eax, dword ptr [ebp+var_20]'),[u'eax', u'dword ptr [ebp+var_20]'])
        self.assertEqual(tasm.lex.parse_args(text='eax, eax'),[u'eax', u'eax'])
        self.assertEqual(tasm.lex.parse_args(text='eax, ebx'),[u'eax', u'ebx'])
        self.assertEqual(tasm.lex.parse_args(text='eax, ecx, 2Dh'),[u'eax', u'ecx', u'2Dh'])
        self.assertEqual(tasm.lex.parse_args(text='eax, edi'),[u'eax', u'edi'])
        self.assertEqual(tasm.lex.parse_args(text='eax, edi, 8000h'),[u'eax', u'edi', u'8000h'])
        self.assertEqual(tasm.lex.parse_args(text='eax, edx'),[u'eax', u'edx'])
        self.assertEqual(tasm.lex.parse_args(text='eax, edx, -2Dh'),[u'eax', u'edx', u'-2Dh'])
        self.assertEqual(tasm.lex.parse_args(text='eax, edx, 8'),[u'eax', u'edx', u'8'])
        self.assertEqual(tasm.lex.parse_args(text='eax, esi'),[u'eax', u'esi'])
        self.assertEqual(tasm.lex.parse_args(text='eax, flags'),[u'eax', u'flags'])
        self.assertEqual(tasm.lex.parse_args(text='eax, large ds:4000h'),[u'eax', u'large ds:4000h'])
        self.assertEqual(tasm.lex.parse_args(text='eax, res'),[u'eax', u'res'])
        self.assertEqual(tasm.lex.parse_args(text='eax, s0_0'),[u'eax', u's0_0'])
        self.assertEqual(tasm.lex.parse_args(text='eax, s1_0'),[u'eax', u's1_0'])
        self.assertEqual(tasm.lex.parse_args(text='eax,-1'),[u'eax', u'-1'])
        self.assertEqual(tasm.lex.parse_args(text='eax,-1-(-2+3)'),[u'eax', u'-1-(-2+3)'])
        self.assertEqual(tasm.lex.parse_args(text='eax,-13'),[u'eax', u'-13'])
        self.assertEqual(tasm.lex.parse_args(text='eax,-2'),[u'eax', u'-2'])
        self.assertEqual(tasm.lex.parse_args(text='eax,-4'),[u'eax', u'-4'])
        self.assertEqual(tasm.lex.parse_args(text='eax,-5'),[u'eax', u'-5'])
        self.assertEqual(tasm.lex.parse_args(text='eax,-8'),[u'eax', u'-8'])
        self.assertEqual(tasm.lex.parse_args(text='eax,0'),[u'eax', u'0'])
        self.assertEqual(tasm.lex.parse_args(text='eax,000f3h'),[u'eax', u'000f3h'])
        self.assertEqual(tasm.lex.parse_args(text='eax,0100b'),[u'eax', u'0100b'])
        self.assertEqual(tasm.lex.parse_args(text='eax,0101010101010101b'),[u'eax', u'0101010101010101b'])
        self.assertEqual(tasm.lex.parse_args(text='eax,0101b'),[u'eax', u'0101b'])
        self.assertEqual(tasm.lex.parse_args(text='eax,011111111111111111111111111111111b'),[u'eax', u'011111111111111111111111111111111b'])
        self.assertEqual(tasm.lex.parse_args(text='eax,012345678h'),[u'eax', u'012345678h'])
        self.assertEqual(tasm.lex.parse_args(text='eax,077123456h'),[u'eax', u'077123456h'])
        self.assertEqual(tasm.lex.parse_args(text='eax,077aaFF00h'),[u'eax', u'077aaFF00h'])
        self.assertEqual(tasm.lex.parse_args(text='eax,0ffff0003h'),[u'eax', u'0ffff0003h'])
        self.assertEqual(tasm.lex.parse_args(text='eax,0ffff00f3h'),[u'eax', u'0ffff00f3h'])
        self.assertEqual(tasm.lex.parse_args(text='eax,0ffffff03h'),[u'eax', u'0ffffff03h'])
        self.assertEqual(tasm.lex.parse_args(text='eax,0fffffff3h'),[u'eax', u'0fffffff3h'])
        self.assertEqual(tasm.lex.parse_args(text='eax,1'),[u'eax', u'1'])
        self.assertEqual(tasm.lex.parse_args(text='eax,1024*1024'),[u'eax', u'1024*1024'])
        self.assertEqual(tasm.lex.parse_args(text='eax,10B'),[u'eax', u'10B'])
        self.assertEqual(tasm.lex.parse_args(text='eax,133'),[u'eax', u'133'])
        self.assertEqual(tasm.lex.parse_args(text='eax,16'),[u'eax', u'16'])
        self.assertEqual(tasm.lex.parse_args(text='eax,2'),[u'eax', u'2'])
        self.assertEqual(tasm.lex.parse_args(text='eax,256'),[u'eax', u'256'])
        self.assertEqual(tasm.lex.parse_args(text='eax,256+3+65536'),[u'eax', u'256+3+65536'])
        self.assertEqual(tasm.lex.parse_args(text='eax,3'),[u'eax', u'3'])
        self.assertEqual(tasm.lex.parse_args(text='eax,4'),[u'eax', u'4'])
        self.assertEqual(tasm.lex.parse_args(text='eax,5'),[u'eax', u'5'])
        self.assertEqual(tasm.lex.parse_args(text='eax,511'),[u'eax', u'511'])
        self.assertEqual(tasm.lex.parse_args(text='eax,6'),[u'eax', u'6'])
        self.assertEqual(tasm.lex.parse_args(text='eax,eax'),[u'eax', u'eax'])
        self.assertEqual(tasm.lex.parse_args(text='eax,ebx'),[u'eax', u'ebx'])
        self.assertEqual(tasm.lex.parse_args(text='eax,enddata'),[u'eax', u'enddata'])
        self.assertEqual(tasm.lex.parse_args(text='eax,taille_moire ;::!300000h-1 ;182400h-1 ;1582080 ;0300000h-1 ;2mega 182400h-1'),[u'eax', u'taille_moire'])
        self.assertEqual(tasm.lex.parse_args(text='eax,teST2'),[u'eax', u'teST2'])
        self.assertEqual(tasm.lex.parse_args(text='ebp'),[u'ebp'])
        self.assertEqual(tasm.lex.parse_args(text='ebp, esp'),[u'ebp', u'esp'])
        self.assertEqual(tasm.lex.parse_args(text='ebp,10'),[u'ebp', u'10'])
        self.assertEqual(tasm.lex.parse_args(text='ebp,11'),[u'ebp', u'11'])
        self.assertEqual(tasm.lex.parse_args(text='ebp,12'),[u'ebp', u'12'])
        self.assertEqual(tasm.lex.parse_args(text='ebp,13'),[u'ebp', u'13'])
        self.assertEqual(tasm.lex.parse_args(text='ebp,14'),[u'ebp', u'14'])
        self.assertEqual(tasm.lex.parse_args(text='ebp,15'),[u'ebp', u'15'])
        self.assertEqual(tasm.lex.parse_args(text='ebp,16'),[u'ebp', u'16'])
        self.assertEqual(tasm.lex.parse_args(text='ebp,17'),[u'ebp', u'17'])
        self.assertEqual(tasm.lex.parse_args(text='ebp,18'),[u'ebp', u'18'])
        self.assertEqual(tasm.lex.parse_args(text='ebp,19'),[u'ebp', u'19'])
        self.assertEqual(tasm.lex.parse_args(text='ebp,2'),[u'ebp', u'2'])
        self.assertEqual(tasm.lex.parse_args(text='ebp,20'),[u'ebp', u'20'])
        self.assertEqual(tasm.lex.parse_args(text='ebp,21'),[u'ebp', u'21'])
        self.assertEqual(tasm.lex.parse_args(text='ebp,22'),[u'ebp', u'22'])
        self.assertEqual(tasm.lex.parse_args(text='ebp,23'),[u'ebp', u'23'])
        self.assertEqual(tasm.lex.parse_args(text='ebp,24'),[u'ebp', u'24'])
        self.assertEqual(tasm.lex.parse_args(text='ebp,25'),[u'ebp', u'25'])
        self.assertEqual(tasm.lex.parse_args(text='ebp,26'),[u'ebp', u'26'])
        self.assertEqual(tasm.lex.parse_args(text='ebp,27'),[u'ebp', u'27'])
        self.assertEqual(tasm.lex.parse_args(text='ebp,28'),[u'ebp', u'28'])
        self.assertEqual(tasm.lex.parse_args(text='ebp,29'),[u'ebp', u'29'])
        self.assertEqual(tasm.lex.parse_args(text='ebp,3'),[u'ebp', u'3'])
        self.assertEqual(tasm.lex.parse_args(text='ebp,3*4'),[u'ebp', u'3*4'])
        self.assertEqual(tasm.lex.parse_args(text='ebp,30'),[u'ebp', u'30'])
        self.assertEqual(tasm.lex.parse_args(text='ebp,31'),[u'ebp', u'31'])
        self.assertEqual(tasm.lex.parse_args(text='ebp,32'),[u'ebp', u'32'])
        self.assertEqual(tasm.lex.parse_args(text='ebp,4'),[u'ebp', u'4'])
        self.assertEqual(tasm.lex.parse_args(text='ebp,5'),[u'ebp', u'5'])
        self.assertEqual(tasm.lex.parse_args(text='ebp,6'),[u'ebp', u'6'])
        self.assertEqual(tasm.lex.parse_args(text='ebp,7'),[u'ebp', u'7'])
        self.assertEqual(tasm.lex.parse_args(text='ebp,8'),[u'ebp', u'8'])
        self.assertEqual(tasm.lex.parse_args(text='ebp,9'),[u'ebp', u'9'])
        self.assertEqual(tasm.lex.parse_args(text='ebp,ebp'),[u'ebp', u'ebp'])
        self.assertEqual(tasm.lex.parse_args(text='ebx ; int ; s1'),[u'ebx'])
        self.assertEqual(tasm.lex.parse_args(text='ebx ; int'),[u'ebx'])
        self.assertEqual(tasm.lex.parse_args(text='ebx ebp eax'),[u'ebx ebp eax'])
        self.assertEqual(tasm.lex.parse_args(text='ebx'),[u'ebx'])
        self.assertEqual(tasm.lex.parse_args(text='ebx, (offset str_buffer+800h)'),[u'ebx', u'(offset str_buffer+800h)'])
        self.assertEqual(tasm.lex.parse_args(text='ebx, 0FFFFFFFFh'),[u'ebx', u'0FFFFFFFFh'])
        self.assertEqual(tasm.lex.parse_args(text='ebx, 1'),[u'ebx', u'1'])
        self.assertEqual(tasm.lex.parse_args(text='ebx, 1234040Ah'),[u'ebx', u'1234040Ah'])
        self.assertEqual(tasm.lex.parse_args(text='ebx, 12340506h'),[u'ebx', u'12340506h'])
        self.assertEqual(tasm.lex.parse_args(text='ebx, 12345678h'),[u'ebx', u'12345678h'])
        self.assertEqual(tasm.lex.parse_args(text='ebx, 2'),[u'ebx', u'2'])
        self.assertEqual(tasm.lex.parse_args(text='ebx, 4'),[u'ebx', u'4'])
        self.assertEqual(tasm.lex.parse_args(text='ebx, 8234A6F8h'),[u'ebx', u'8234A6F8h'])
        self.assertEqual(tasm.lex.parse_args(text='ebx, [ebp+iflags]'),[u'ebx', u'[ebp+iflags]'])
        self.assertEqual(tasm.lex.parse_args(text='ebx, [ebp+op0h]'),[u'ebx', u'[ebp+op0h]'])
        self.assertEqual(tasm.lex.parse_args(text='ebx, [ebp+s0]'),[u'ebx', u'[ebp+s0]'])
        self.assertEqual(tasm.lex.parse_args(text='ebx, [ebp+s2]'),[u'ebx', u'[ebp+s2]'])
        self.assertEqual(tasm.lex.parse_args(text='ebx, [ebp+table]'),[u'ebx', u'[ebp+table]'])
        self.assertEqual(tasm.lex.parse_args(text='ebx, [ebp+var_4]'),[u'ebx', u'[ebp+var_4]'])
        self.assertEqual(tasm.lex.parse_args(text='ebx, [esi+ecx*8+4000h]'),[u'ebx', u'[esi+ecx*8+4000h]'])
        self.assertEqual(tasm.lex.parse_args(text='ebx, dword ptr [ebp+var_20+4]'),[u'ebx', u'dword ptr [ebp+var_20+4]'])
        self.assertEqual(tasm.lex.parse_args(text='ebx, ebx'),[u'ebx', u'ebx'])
        self.assertEqual(tasm.lex.parse_args(text='ebx, edi'),[u'ebx', u'edi'])
        self.assertEqual(tasm.lex.parse_args(text='ebx, esi'),[u'ebx', u'esi'])
        self.assertEqual(tasm.lex.parse_args(text='ebx, esi, 7FFFh'),[u'ebx', u'esi', u'7FFFh'])
        self.assertEqual(tasm.lex.parse_args(text='ebx, i'),[u'ebx', u'i'])
        self.assertEqual(tasm.lex.parse_args(text='ebx, offset _test_btc'),[u'ebx', u'offset _test_btc'])
        self.assertEqual(tasm.lex.parse_args(text='ebx, offset unk_40F064'),[u'ebx', u'offset unk_40F064'])
        self.assertEqual(tasm.lex.parse_args(text='ebx,-1'),[u'ebx', u'-1'])
        self.assertEqual(tasm.lex.parse_args(text='ebx,0'),[u'ebx', u'0'])
        self.assertEqual(tasm.lex.parse_args(text='ebx,00fffh'),[u'ebx', u'00fffh'])
        self.assertEqual(tasm.lex.parse_args(text='ebx,010B'),[u'ebx', u'010B'])
        self.assertEqual(tasm.lex.parse_args(text='ebx,01B'),[u'ebx', u'01B'])
        self.assertEqual(tasm.lex.parse_args(text='ebx,0FFFFFFFFh'),[u'ebx', u'0FFFFFFFFh'])
        self.assertEqual(tasm.lex.parse_args(text='ebx,0a000h'),[u'ebx', u'0a000h'])
        self.assertEqual(tasm.lex.parse_args(text='ebx,0aabbccddh'),[u'ebx', u'0aabbccddh'])
        self.assertEqual(tasm.lex.parse_args(text='ebx,0f222h'),[u'ebx', u'0f222h'])
        self.assertEqual(tasm.lex.parse_args(text='ebx,0ffff01ffh'),[u'ebx', u'0ffff01ffh'])
        self.assertEqual(tasm.lex.parse_args(text='ebx,0ffffff00h'),[u'ebx', u'0ffffff00h'])
        self.assertEqual(tasm.lex.parse_args(text='ebx,0ffffffffh'),[u'ebx', u'0ffffffffh'])
        self.assertEqual(tasm.lex.parse_args(text='ebx,1'),[u'ebx', u'1'])
        self.assertEqual(tasm.lex.parse_args(text='ebx,100h'),[u'ebx', u'100h'])
        self.assertEqual(tasm.lex.parse_args(text='ebx,12345'),[u'ebx', u'12345'])
        self.assertEqual(tasm.lex.parse_args(text='ebx,2'),[u'ebx', u'2'])
        self.assertEqual(tasm.lex.parse_args(text='ebx,255'),[u'ebx', u'255'])
        self.assertEqual(tasm.lex.parse_args(text='ebx,3'),[u'ebx', u'3'])
        self.assertEqual(tasm.lex.parse_args(text='ebx,31'),[u'ebx', u'31'])
        self.assertEqual(tasm.lex.parse_args(text='ebx,5'),[u'ebx', u'5'])
        self.assertEqual(tasm.lex.parse_args(text='ebx,TWO'),[u'ebx', u'TWO'])
        self.assertEqual(tasm.lex.parse_args(text='ebx,[g]'),[u'ebx', u'[g]'])
        self.assertEqual(tasm.lex.parse_args(text='ebx,[load_handle]'),[u'ebx', u'[load_handle]'])
        self.assertEqual(tasm.lex.parse_args(text='ebx,beginningdata'),[u'ebx', u'beginningdata'])
        self.assertEqual(tasm.lex.parse_args(text='ebx,eax'),[u'ebx', u'eax'])
        self.assertEqual(tasm.lex.parse_args(text='ebx,ebx'),[u'ebx', u'ebx'])
        self.assertEqual(tasm.lex.parse_args(text='ebx,g'),[u'ebx', u'g'])
        self.assertEqual(tasm.lex.parse_args(text='ecx ; int'),[u'ecx'])
        self.assertEqual(tasm.lex.parse_args(text='ecx'),[u'ecx'])
        self.assertEqual(tasm.lex.parse_args(text='ecx, 1'),[u'ecx', u'1'])
        self.assertEqual(tasm.lex.parse_args(text='ecx, 10h'),[u'ecx', u'10h'])
        self.assertEqual(tasm.lex.parse_args(text='ecx, 11h'),[u'ecx', u'11h'])
        self.assertEqual(tasm.lex.parse_args(text='ecx, 1234h'),[u'ecx', u'1234h'])
        self.assertEqual(tasm.lex.parse_args(text='ecx, 4'),[u'ecx', u'4'])
        self.assertEqual(tasm.lex.parse_args(text='ecx, 40h'),[u'ecx', u'40h'])
        self.assertEqual(tasm.lex.parse_args(text='ecx, 65324h'),[u'ecx', u'65324h'])
        self.assertEqual(tasm.lex.parse_args(text='ecx, [ebp+ecx_0]'),[u'ecx', u'[ebp+ecx_0]'])
        self.assertEqual(tasm.lex.parse_args(text='ecx, [ebp+edx_0]'),[u'ecx', u'[ebp+edx_0]'])
        self.assertEqual(tasm.lex.parse_args(text='ecx, [ebp+i*4+ecx_vals]'),[u'ecx', u'[ebp+i*4+ecx_vals]'])
        self.assertEqual(tasm.lex.parse_args(text='ecx, [ebp+s0]'),[u'ecx', u'[ebp+s0]'])
        self.assertEqual(tasm.lex.parse_args(text='ecx, [ebp+s1]'),[u'ecx', u'[ebp+s1]'])
        self.assertEqual(tasm.lex.parse_args(text='ecx, [ebp+var_20]'),[u'ecx', u'[ebp+var_20]'])
        self.assertEqual(tasm.lex.parse_args(text='ecx, dword ptr [ebp+var_20+4]'),[u'ecx', u'dword ptr [ebp+var_20+4]'])
        self.assertEqual(tasm.lex.parse_args(text='ecx, dword ptr [ebp+var_20]'),[u'ecx', u'dword ptr [ebp+var_20]'])
        self.assertEqual(tasm.lex.parse_args(text='ecx, ecx'),[u'ecx', u'ecx'])
        self.assertEqual(tasm.lex.parse_args(text='ecx, edi'),[u'ecx', u'edi'])
        self.assertEqual(tasm.lex.parse_args(text='ecx, edx'),[u'ecx', u'edx'])
        self.assertEqual(tasm.lex.parse_args(text='ecx, res'),[u'ecx', u'res'])
        self.assertEqual(tasm.lex.parse_args(text='ecx,-1'),[u'ecx', u'-1'])
        self.assertEqual(tasm.lex.parse_args(text='ecx,-5'),[u'ecx', u'-5'])
        self.assertEqual(tasm.lex.parse_args(text='ecx,000ff00ffh'),[u'ecx', u'000ff00ffh'])
        self.assertEqual(tasm.lex.parse_args(text='ecx,0a0000h'),[u'ecx', u'0a0000h'])
        self.assertEqual(tasm.lex.parse_args(text='ecx,0af222h'),[u'ecx', u'0af222h'])
        self.assertEqual(tasm.lex.parse_args(text='ecx,0df01h'),[u'ecx', u'0df01h'])
        self.assertEqual(tasm.lex.parse_args(text='ecx,0dff1h'),[u'ecx', u'0dff1h'])
        self.assertEqual(tasm.lex.parse_args(text='ecx,0f0ffh'),[u'ecx', u'0f0ffh'])
        self.assertEqual(tasm.lex.parse_args(text='ecx,0ffffffffh'),[u'ecx', u'0ffffffffh'])
        self.assertEqual(tasm.lex.parse_args(text='ecx,0ffffh'),[u'ecx', u'0ffffh'])
        self.assertEqual(tasm.lex.parse_args(text='ecx,10'),[u'ecx', u'10'])
        self.assertEqual(tasm.lex.parse_args(text='ecx,16'),[u'ecx', u'16'])
        self.assertEqual(tasm.lex.parse_args(text='ecx,2'),[u'ecx', u'2'])
        self.assertEqual(tasm.lex.parse_args(text='ecx,3'),[u'ecx', u'3'])
        self.assertEqual(tasm.lex.parse_args(text='ecx,320*200/4'),[u'ecx', u'320*200/4'])
        self.assertEqual(tasm.lex.parse_args(text='ecx,5'),[u'ecx', u'5'])
        self.assertEqual(tasm.lex.parse_args(text='ecx,60'),[u'ecx', u'60'])
        self.assertEqual(tasm.lex.parse_args(text='ecx,bx'),[u'ecx', u'bx'])
        self.assertEqual(tasm.lex.parse_args(text='ecx,cx'),[u'ecx', u'cx'])
        self.assertEqual(tasm.lex.parse_args(text='ecx,ecx'),[u'ecx', u'ecx'])
        self.assertEqual(tasm.lex.parse_args(text='ecx,t'),[u'ecx', u't'])
        self.assertEqual(tasm.lex.parse_args(text='edi ; increase target address'),[u'edi'])
        self.assertEqual(tasm.lex.parse_args(text='edi ; int'),[u'edi'])
        self.assertEqual(tasm.lex.parse_args(text='edi'),[u'edi'])
        self.assertEqual(tasm.lex.parse_args(text='edi, (offset str_buffer+810h)'),[u'edi', u'(offset str_buffer+810h)'])
        self.assertEqual(tasm.lex.parse_args(text='edi, 0FBCA7654h'),[u'edi', u'0FBCA7654h'])
        self.assertEqual(tasm.lex.parse_args(text='edi, 0FFFFFFF7h'),[u'edi', u'0FFFFFFF7h'])
        self.assertEqual(tasm.lex.parse_args(text='edi, 1'),[u'edi', u'1'])
        self.assertEqual(tasm.lex.parse_args(text='edi, 12340128h'),[u'edi', u'12340128h'])
        self.assertEqual(tasm.lex.parse_args(text='edi, 12340205h'),[u'edi', u'12340205h'])
        self.assertEqual(tasm.lex.parse_args(text='edi, 123405A0h'),[u'edi', u'123405A0h'])
        self.assertEqual(tasm.lex.parse_args(text='edi, 12345h'),[u'edi', u'12345h'])
        self.assertEqual(tasm.lex.parse_args(text='edi, 20h'),[u'edi', u'20h'])
        self.assertEqual(tasm.lex.parse_args(text='edi, 80000000h'),[u'edi', u'80000000h'])
        self.assertEqual(tasm.lex.parse_args(text='edi, [ebp+ecx_vals]'),[u'edi', u'[ebp+ecx_vals]'])
        self.assertEqual(tasm.lex.parse_args(text='edi, [ebp+iflags]'),[u'edi', u'[ebp+iflags]'])
        self.assertEqual(tasm.lex.parse_args(text='edi, [ebp+op0]'),[u'edi', u'[ebp+op0]'])
        self.assertEqual(tasm.lex.parse_args(text='edi, [ebp+s1]'),[u'edi', u'[ebp+s1]'])
        self.assertEqual(tasm.lex.parse_args(text='edi, [ebp+s2]'),[u'edi', u'[ebp+s2]'])
        self.assertEqual(tasm.lex.parse_args(text='edi, [i+2]'),[u'edi', u'[i+2]'])
        self.assertEqual(tasm.lex.parse_args(text='edi, [i+3]'),[u'edi', u'[i+3]'])
        self.assertEqual(tasm.lex.parse_args(text='edi, [i+4]'),[u'edi', u'[i+4]'])
        self.assertEqual(tasm.lex.parse_args(text='edi, [i+5]'),[u'edi', u'[i+5]'])
        self.assertEqual(tasm.lex.parse_args(text='edi, [i-10h]'),[u'edi', u'[i-10h]'])
        self.assertEqual(tasm.lex.parse_args(text='edi, ebx'),[u'edi', u'ebx'])
        self.assertEqual(tasm.lex.parse_args(text='edi, edi'),[u'edi', u'edi'])
        self.assertEqual(tasm.lex.parse_args(text='edi,0'),[u'edi', u'0'])
        self.assertEqual(tasm.lex.parse_args(text='edi,1'),[u'edi', u'1'])
        self.assertEqual(tasm.lex.parse_args(text='edi,14*320'),[u'edi', u'14*320'])
        self.assertEqual(tasm.lex.parse_args(text='edi,8'),[u'edi', u'8'])
        self.assertEqual(tasm.lex.parse_args(text='edi,OFFSET AsCii ; get the offset address'),[u'edi', u'OFFSET AsCii'])
        self.assertEqual(tasm.lex.parse_args(text='edi,buffer'),[u'edi', u'buffer'])
        self.assertEqual(tasm.lex.parse_args(text='edi,edi'),[u'edi', u'edi'])
        self.assertEqual(tasm.lex.parse_args(text='edi,esi'),[u'edi', u'esi'])
        self.assertEqual(tasm.lex.parse_args(text='edi,f'),[u'edi', u'f'])
        self.assertEqual(tasm.lex.parse_args(text='edi,offset str2'),[u'edi', u'offset str2'])
        self.assertEqual(tasm.lex.parse_args(text='edi,offset str3'),[u'edi', u'offset str3'])
        self.assertEqual(tasm.lex.parse_args(text='edi,offset var1'),[u'edi', u'offset var1'])
        self.assertEqual(tasm.lex.parse_args(text='edi,offset var2'),[u'edi', u'offset var2'])
        self.assertEqual(tasm.lex.parse_args(text='edi,offset var4'),[u'edi', u'offset var4'])
        self.assertEqual(tasm.lex.parse_args(text='edi,offset var4+1'),[u'edi', u'offset var4+1'])
        self.assertEqual(tasm.lex.parse_args(text='edi,offset var4+4'),[u'edi', u'offset var4+4'])
        self.assertEqual(tasm.lex.parse_args(text='edi,testOVerlap'),[u'edi', u'testOVerlap'])
        self.assertEqual(tasm.lex.parse_args(text='edi,var1'),[u'edi', u'var1'])
        self.assertEqual(tasm.lex.parse_args(text='edi_0'),[u'edi_0'])
        self.assertEqual(tasm.lex.parse_args(text='edi_0, (offset str_buffer+810h)'),[u'edi_0', u'(offset str_buffer+810h)'])
        self.assertEqual(tasm.lex.parse_args(text='edx ; int'),[u'edx'])
        self.assertEqual(tasm.lex.parse_args(text='edx ; unsigned int'),[u'edx'])
        self.assertEqual(tasm.lex.parse_args(text='edx'),[u'edx'])
        self.assertEqual(tasm.lex.parse_args(text='edx, 1'),[u'edx', u'1'])
        self.assertEqual(tasm.lex.parse_args(text='edx, 10h'),[u'edx', u'10h'])
        self.assertEqual(tasm.lex.parse_args(text='edx, 11h'),[u'edx', u'11h'])
        self.assertEqual(tasm.lex.parse_args(text='edx, 12340507h'),[u'edx', u'12340507h'])
        self.assertEqual(tasm.lex.parse_args(text='edx, 12345678h'),[u'edx', u'12345678h'])
        self.assertEqual(tasm.lex.parse_args(text='edx, 17h'),[u'edx', u'17h'])
        self.assertEqual(tasm.lex.parse_args(text='edx, 340128h'),[u'edx', u'340128h'])
        self.assertEqual(tasm.lex.parse_args(text='edx, 8'),[u'edx', u'8'])
        self.assertEqual(tasm.lex.parse_args(text='edx, [ebp+s1]'),[u'edx', u'[ebp+s1]'])
        self.assertEqual(tasm.lex.parse_args(text='edx, [ebp+var_1C]'),[u'edx', u'[ebp+var_1C]'])
        self.assertEqual(tasm.lex.parse_args(text='edx, [i+56h]'),[u'edx', u'[i+56h]'])
        self.assertEqual(tasm.lex.parse_args(text='edx, cl'),[u'edx', u'cl'])
        self.assertEqual(tasm.lex.parse_args(text='edx, dword ptr [ebp+var_20]'),[u'edx', u'dword ptr [ebp+var_20]'])
        self.assertEqual(tasm.lex.parse_args(text='edx, eax'),[u'edx', u'eax'])
        self.assertEqual(tasm.lex.parse_args(text='edx, ebx'),[u'edx', u'ebx'])
        self.assertEqual(tasm.lex.parse_args(text='edx, ebx, cl'),[u'edx', u'ebx', u'cl'])
        self.assertEqual(tasm.lex.parse_args(text='edx, ecx'),[u'edx', u'ecx'])
        self.assertEqual(tasm.lex.parse_args(text='edx, edi'),[u'edx', u'edi'])
        self.assertEqual(tasm.lex.parse_args(text='edx, edx'),[u'edx', u'edx'])
        self.assertEqual(tasm.lex.parse_args(text='edx, esi'),[u'edx', u'esi'])
        self.assertEqual(tasm.lex.parse_args(text='edx, res'),[u'edx', u'res'])
        self.assertEqual(tasm.lex.parse_args(text='edx, resh'),[u'edx', u'resh'])
        self.assertEqual(tasm.lex.parse_args(text='edx,-2'),[u'edx', u'-2'])
        self.assertEqual(tasm.lex.parse_args(text='edx,0'),[u'edx', u'0'])
        self.assertEqual(tasm.lex.parse_args(text='edx,0abcdef77h'),[u'edx', u'0abcdef77h'])
        self.assertEqual(tasm.lex.parse_args(text='edx,0ffffh'),[u'edx', u'0ffffh'])
        self.assertEqual(tasm.lex.parse_args(text='edx,1'),[u'edx', u'1'])
        self.assertEqual(tasm.lex.parse_args(text='edx,10'),[u'edx', u'10'])
        self.assertEqual(tasm.lex.parse_args(text='edx,2'),[u'edx', u'2'])
        self.assertEqual(tasm.lex.parse_args(text='edx,4'),[u'edx', u'4'])
        self.assertEqual(tasm.lex.parse_args(text='edx,OFFSET ASCiI ; DOS 1+ WRITE STRING TO STANDARD OUTPUT'),[u'edx', u'OFFSET ASCiI'])
        self.assertEqual(tasm.lex.parse_args(text='edx,edi'),[u'edx', u'edi'])
        self.assertEqual(tasm.lex.parse_args(text='edx,edx'),[u'edx', u'edx'])
        self.assertEqual(tasm.lex.parse_args(text='edx,fileName'),[u'edx', u'fileName'])
        self.assertEqual(tasm.lex.parse_args(text='edx,offset _msg ; DS:EDX -> $ Terminated String'),[u'edx', u'offset _msg'])
        self.assertEqual(tasm.lex.parse_args(text='edx_0_0, dword ptr [ebp+var_20]'),[u'edx_0_0', u'dword ptr [ebp+var_20]'])
        self.assertEqual(tasm.lex.parse_args(text='eflags, 40h'),[u'eflags', u'40h'])
        self.assertEqual(tasm.lex.parse_args(text='eflags, 8D5h'),[u'eflags', u'8D5h'])
        self.assertEqual(tasm.lex.parse_args(text='es ds'),[u'es ds'])
        self.assertEqual(tasm.lex.parse_args(text='es'),[u'es'])
        self.assertEqual(tasm.lex.parse_args(text='es,ax'),[u'es', u'ax'])
        self.assertEqual(tasm.lex.parse_args(text='esi ; int'),[u'esi'])
        self.assertEqual(tasm.lex.parse_args(text='esi'),[u'esi'])
        self.assertEqual(tasm.lex.parse_args(text='esi, 0FFFEFDFCh'),[u'esi', u'0FFFEFDFCh'])
        self.assertEqual(tasm.lex.parse_args(text='esi, 1000h'),[u'esi', u'1000h'])
        self.assertEqual(tasm.lex.parse_args(text='esi, 10h'),[u'esi', u'10h'])
        self.assertEqual(tasm.lex.parse_args(text='esi, 12340306h'),[u'esi', u'12340306h'])
        self.assertEqual(tasm.lex.parse_args(text='esi, 12340503h'),[u'esi', u'12340503h'])
        self.assertEqual(tasm.lex.parse_args(text='esi, 12345678h'),[u'esi', u'12345678h'])
        self.assertEqual(tasm.lex.parse_args(text='esi, 6789ABCDh'),[u'esi', u'6789ABCDh'])
        self.assertEqual(tasm.lex.parse_args(text='esi, 8345A1F2h'),[u'esi', u'8345A1F2h'])
        self.assertEqual(tasm.lex.parse_args(text='esi, [ebp+iflags]'),[u'esi', u'[ebp+iflags]'])
        self.assertEqual(tasm.lex.parse_args(text='esi, [ebp+op0]'),[u'esi', u'[ebp+op0]'])
        self.assertEqual(tasm.lex.parse_args(text='esi, [ebp+op0h]'),[u'esi', u'[ebp+op0h]'])
        self.assertEqual(tasm.lex.parse_args(text='esi, [ebp+s0]'),[u'esi', u'[ebp+s0]'])
        self.assertEqual(tasm.lex.parse_args(text='esi, [ebp+s1]'),[u'esi', u'[ebp+s1]'])
        self.assertEqual(tasm.lex.parse_args(text='esi, [i+1]'),[u'esi', u'[i+1]'])
        self.assertEqual(tasm.lex.parse_args(text='esi, ebx'),[u'esi', u'ebx'])
        self.assertEqual(tasm.lex.parse_args(text='esi, edi'),[u'esi', u'edi'])
        self.assertEqual(tasm.lex.parse_args(text='esi, esi'),[u'esi', u'esi'])
        self.assertEqual(tasm.lex.parse_args(text='esi, esi_0'),[u'esi', u'esi_0'])
        self.assertEqual(tasm.lex.parse_args(text='esi, offset unk_40E008'),[u'esi', u'offset unk_40E008'])
        self.assertEqual(tasm.lex.parse_args(text='esi,0'),[u'esi', u'0'])
        self.assertEqual(tasm.lex.parse_args(text='esi,2'),[u'esi', u'2'])
        self.assertEqual(tasm.lex.parse_args(text='esi,6'),[u'esi', u'6'])
        self.assertEqual(tasm.lex.parse_args(text='esi,b'),[u'esi', u'b'])
        self.assertEqual(tasm.lex.parse_args(text='esi,esi'),[u'esi', u'esi'])
        self.assertEqual(tasm.lex.parse_args(text='esi,f'),[u'esi', u'f'])
        self.assertEqual(tasm.lex.parse_args(text='esi,offset pal_jeu'),[u'esi', u'offset pal_jeu'])
        self.assertEqual(tasm.lex.parse_args(text='esi,offset str1'),[u'esi', u'offset str1'])
        self.assertEqual(tasm.lex.parse_args(text='esi,offset testOVerlap'),[u'esi', u'offset testOVerlap'])
        self.assertEqual(tasm.lex.parse_args(text='esi,offset var1'),[u'esi', u'offset var1'])
        self.assertEqual(tasm.lex.parse_args(text='esi,offset var1+1'),[u'esi', u'offset var1+1'])
        self.assertEqual(tasm.lex.parse_args(text='esi,offset var2'),[u'esi', u'offset var2'])
        self.assertEqual(tasm.lex.parse_args(text='esi,offset var3'),[u'esi', u'offset var3'])
        self.assertEqual(tasm.lex.parse_args(text='esi,offset var3+4'),[u'esi', u'offset var3+4'])
        self.assertEqual(tasm.lex.parse_args(text='esi,var2'),[u'esi', u'var2'])
        self.assertEqual(tasm.lex.parse_args(text='esi,var5'),[u'esi', u'var5'])
        self.assertEqual(tasm.lex.parse_args(text='esi_0'),[u'esi_0'])
        self.assertEqual(tasm.lex.parse_args(text='esi_0, ebx'),[u'esi_0', u'ebx'])
        self.assertEqual(tasm.lex.parse_args(text='esp, 0FFFFFFF0h'),[u'esp', u'0FFFFFFF0h'])
        self.assertEqual(tasm.lex.parse_args(text='esp, 10h'),[u'esp', u'10h'])
        self.assertEqual(tasm.lex.parse_args(text='esp, 114h'),[u'esp', u'114h'])
        self.assertEqual(tasm.lex.parse_args(text='esp, 14h'),[u'esp', u'14h'])
        self.assertEqual(tasm.lex.parse_args(text='esp, 18h'),[u'esp', u'18h'])
        self.assertEqual(tasm.lex.parse_args(text='esp, 1Ch'),[u'esp', u'1Ch'])
        self.assertEqual(tasm.lex.parse_args(text='esp, 2'),[u'esp', u'2'])
        self.assertEqual(tasm.lex.parse_args(text='esp, 20h'),[u'esp', u'20h'])
        self.assertEqual(tasm.lex.parse_args(text='esp, 24h'),[u'esp', u'24h'])
        self.assertEqual(tasm.lex.parse_args(text='esp, 2Ch'),[u'esp', u'2Ch'])
        self.assertEqual(tasm.lex.parse_args(text='esp, 3Ch'),[u'esp', u'3Ch'])
        self.assertEqual(tasm.lex.parse_args(text='esp, 4Ch'),[u'esp', u'4Ch'])
        self.assertEqual(tasm.lex.parse_args(text='exec_adc'),[u'exec_adc'])
        self.assertEqual(tasm.lex.parse_args(text='exec_adcb'),[u'exec_adcb'])
        self.assertEqual(tasm.lex.parse_args(text='exec_adcl'),[u'exec_adcl'])
        self.assertEqual(tasm.lex.parse_args(text='exec_adcw'),[u'exec_adcw'])
        self.assertEqual(tasm.lex.parse_args(text='exec_add'),[u'exec_add'])
        self.assertEqual(tasm.lex.parse_args(text='exec_addb'),[u'exec_addb'])
        self.assertEqual(tasm.lex.parse_args(text='exec_addl'),[u'exec_addl'])
        self.assertEqual(tasm.lex.parse_args(text='exec_addw'),[u'exec_addw'])
        self.assertEqual(tasm.lex.parse_args(text='exec_and'),[u'exec_and'])
        self.assertEqual(tasm.lex.parse_args(text='exec_andb'),[u'exec_andb'])
        self.assertEqual(tasm.lex.parse_args(text='exec_andl'),[u'exec_andl'])
        self.assertEqual(tasm.lex.parse_args(text='exec_andw'),[u'exec_andw'])
        self.assertEqual(tasm.lex.parse_args(text='exec_bt'),[u'exec_bt'])
        self.assertEqual(tasm.lex.parse_args(text='exec_btc'),[u'exec_btc'])
        self.assertEqual(tasm.lex.parse_args(text='exec_btcl'),[u'exec_btcl'])
        self.assertEqual(tasm.lex.parse_args(text='exec_btcw'),[u'exec_btcw'])
        self.assertEqual(tasm.lex.parse_args(text='exec_btl'),[u'exec_btl'])
        self.assertEqual(tasm.lex.parse_args(text='exec_btr'),[u'exec_btr'])
        self.assertEqual(tasm.lex.parse_args(text='exec_btrl'),[u'exec_btrl'])
        self.assertEqual(tasm.lex.parse_args(text='exec_btrw'),[u'exec_btrw'])
        self.assertEqual(tasm.lex.parse_args(text='exec_bts'),[u'exec_bts'])
        self.assertEqual(tasm.lex.parse_args(text='exec_btsl'),[u'exec_btsl'])
        self.assertEqual(tasm.lex.parse_args(text='exec_btsw'),[u'exec_btsw'])
        self.assertEqual(tasm.lex.parse_args(text='exec_btw'),[u'exec_btw'])
        self.assertEqual(tasm.lex.parse_args(text='exec_cmp'),[u'exec_cmp'])
        self.assertEqual(tasm.lex.parse_args(text='exec_cmpb'),[u'exec_cmpb'])
        self.assertEqual(tasm.lex.parse_args(text='exec_cmpl'),[u'exec_cmpl'])
        self.assertEqual(tasm.lex.parse_args(text='exec_cmpw'),[u'exec_cmpw'])
        self.assertEqual(tasm.lex.parse_args(text='exec_dec'),[u'exec_dec'])
        self.assertEqual(tasm.lex.parse_args(text='exec_decb'),[u'exec_decb'])
        self.assertEqual(tasm.lex.parse_args(text='exec_decl'),[u'exec_decl'])
        self.assertEqual(tasm.lex.parse_args(text='exec_decw'),[u'exec_decw'])
        self.assertEqual(tasm.lex.parse_args(text='exec_inc'),[u'exec_inc'])
        self.assertEqual(tasm.lex.parse_args(text='exec_incb'),[u'exec_incb'])
        self.assertEqual(tasm.lex.parse_args(text='exec_incl'),[u'exec_incl'])
        self.assertEqual(tasm.lex.parse_args(text='exec_incw'),[u'exec_incw'])
        self.assertEqual(tasm.lex.parse_args(text='exec_neg'),[u'exec_neg'])
        self.assertEqual(tasm.lex.parse_args(text='exec_negb'),[u'exec_negb'])
        self.assertEqual(tasm.lex.parse_args(text='exec_negl'),[u'exec_negl'])
        self.assertEqual(tasm.lex.parse_args(text='exec_negw'),[u'exec_negw'])
        self.assertEqual(tasm.lex.parse_args(text='exec_not'),[u'exec_not'])
        self.assertEqual(tasm.lex.parse_args(text='exec_notb'),[u'exec_notb'])
        self.assertEqual(tasm.lex.parse_args(text='exec_notl'),[u'exec_notl'])
        self.assertEqual(tasm.lex.parse_args(text='exec_notw'),[u'exec_notw'])
        self.assertEqual(tasm.lex.parse_args(text='exec_or'),[u'exec_or'])
        self.assertEqual(tasm.lex.parse_args(text='exec_orb'),[u'exec_orb'])
        self.assertEqual(tasm.lex.parse_args(text='exec_orl'),[u'exec_orl'])
        self.assertEqual(tasm.lex.parse_args(text='exec_orw'),[u'exec_orw'])
        self.assertEqual(tasm.lex.parse_args(text='exec_rcl'),[u'exec_rcl'])
        self.assertEqual(tasm.lex.parse_args(text='exec_rclb'),[u'exec_rclb'])
        self.assertEqual(tasm.lex.parse_args(text='exec_rcll'),[u'exec_rcll'])
        self.assertEqual(tasm.lex.parse_args(text='exec_rclw'),[u'exec_rclw'])
        self.assertEqual(tasm.lex.parse_args(text='exec_rcr'),[u'exec_rcr'])
        self.assertEqual(tasm.lex.parse_args(text='exec_rcrb'),[u'exec_rcrb'])
        self.assertEqual(tasm.lex.parse_args(text='exec_rcrl'),[u'exec_rcrl'])
        self.assertEqual(tasm.lex.parse_args(text='exec_rcrw'),[u'exec_rcrw'])
        self.assertEqual(tasm.lex.parse_args(text='exec_rol'),[u'exec_rol'])
        self.assertEqual(tasm.lex.parse_args(text='exec_rolb'),[u'exec_rolb'])
        self.assertEqual(tasm.lex.parse_args(text='exec_roll'),[u'exec_roll'])
        self.assertEqual(tasm.lex.parse_args(text='exec_rolw'),[u'exec_rolw'])
        self.assertEqual(tasm.lex.parse_args(text='exec_ror'),[u'exec_ror'])
        self.assertEqual(tasm.lex.parse_args(text='exec_rorb'),[u'exec_rorb'])
        self.assertEqual(tasm.lex.parse_args(text='exec_rorl'),[u'exec_rorl'])
        self.assertEqual(tasm.lex.parse_args(text='exec_rorw'),[u'exec_rorw'])
        self.assertEqual(tasm.lex.parse_args(text='exec_sar'),[u'exec_sar'])
        self.assertEqual(tasm.lex.parse_args(text='exec_sarb'),[u'exec_sarb'])
        self.assertEqual(tasm.lex.parse_args(text='exec_sarl'),[u'exec_sarl'])
        self.assertEqual(tasm.lex.parse_args(text='exec_sarw'),[u'exec_sarw'])
        self.assertEqual(tasm.lex.parse_args(text='exec_sbb'),[u'exec_sbb'])
        self.assertEqual(tasm.lex.parse_args(text='exec_sbbb'),[u'exec_sbbb'])
        self.assertEqual(tasm.lex.parse_args(text='exec_sbbl'),[u'exec_sbbl'])
        self.assertEqual(tasm.lex.parse_args(text='exec_sbbw'),[u'exec_sbbw'])
        self.assertEqual(tasm.lex.parse_args(text='exec_shl'),[u'exec_shl'])
        self.assertEqual(tasm.lex.parse_args(text='exec_shlb'),[u'exec_shlb'])
        self.assertEqual(tasm.lex.parse_args(text='exec_shld'),[u'exec_shld'])
        self.assertEqual(tasm.lex.parse_args(text='exec_shldl'),[u'exec_shldl'])
        self.assertEqual(tasm.lex.parse_args(text='exec_shldw'),[u'exec_shldw'])
        self.assertEqual(tasm.lex.parse_args(text='exec_shll'),[u'exec_shll'])
        self.assertEqual(tasm.lex.parse_args(text='exec_shlw'),[u'exec_shlw'])
        self.assertEqual(tasm.lex.parse_args(text='exec_shr'),[u'exec_shr'])
        self.assertEqual(tasm.lex.parse_args(text='exec_shrb'),[u'exec_shrb'])
        self.assertEqual(tasm.lex.parse_args(text='exec_shrd'),[u'exec_shrd'])
        self.assertEqual(tasm.lex.parse_args(text='exec_shrdl'),[u'exec_shrdl'])
        self.assertEqual(tasm.lex.parse_args(text='exec_shrdw'),[u'exec_shrdw'])
        self.assertEqual(tasm.lex.parse_args(text='exec_shrl'),[u'exec_shrl'])
        self.assertEqual(tasm.lex.parse_args(text='exec_shrw'),[u'exec_shrw'])
        self.assertEqual(tasm.lex.parse_args(text='exec_sub'),[u'exec_sub'])
        self.assertEqual(tasm.lex.parse_args(text='exec_subb'),[u'exec_subb'])
        self.assertEqual(tasm.lex.parse_args(text='exec_subl'),[u'exec_subl'])
        self.assertEqual(tasm.lex.parse_args(text='exec_subw'),[u'exec_subw'])
        self.assertEqual(tasm.lex.parse_args(text='exec_xor'),[u'exec_xor'])
        self.assertEqual(tasm.lex.parse_args(text='exec_xorb'),[u'exec_xorb'])
        self.assertEqual(tasm.lex.parse_args(text='exec_xorl'),[u'exec_xorl'])
        self.assertEqual(tasm.lex.parse_args(text='exec_xorw'),[u'exec_xorw'])
        self.assertEqual(tasm.lex.parse_args(text='exitLabel'),[u'exitLabel'])
        self.assertEqual(tasm.lex.parse_args(text='failure ; // because unsigned comparaison'),[u'failure'])
        self.assertEqual(tasm.lex.parse_args(text='failure ; http://blog.rewolf.pl/blog/?p=177'),[u'failure'])
        self.assertEqual(tasm.lex.parse_args(text='failure'),[u'failure'])
        self.assertEqual(tasm.lex.parse_args(text='finTest'),[u'finTest'])
        self.assertEqual(tasm.lex.parse_args(text='flags, 0D5h'),[u'flags', u'0D5h'])
        self.assertEqual(tasm.lex.parse_args(text='flags, 1'),[u'flags', u'1'])
        self.assertEqual(tasm.lex.parse_args(text='flags, 11h'),[u'flags', u'11h'])
        self.assertEqual(tasm.lex.parse_args(text='flags, 801h'),[u'flags', u'801h'])
        self.assertEqual(tasm.lex.parse_args(text='flags, 8C5h'),[u'flags', u'8C5h'])
        self.assertEqual(tasm.lex.parse_args(text='flags, 8D5h'),[u'flags', u'8D5h'])
        self.assertEqual(tasm.lex.parse_args(text='fs cx'),[u'fs cx'])
        self.assertEqual(tasm.lex.parse_args(text='fs, ax'),[u'fs', u'ax'])
        self.assertEqual(tasm.lex.parse_args(text='fs,ax'),[u'fs', u'ax'])
        self.assertEqual(tasm.lex.parse_args(text='i'),[u'i'])
        self.assertEqual(tasm.lex.parse_args(text='i, 1000h'),[u'i', u'1000h'])
        self.assertEqual(tasm.lex.parse_args(text='i, 100h'),[u'i', u'100h'])
        self.assertEqual(tasm.lex.parse_args(text='i, 10h'),[u'i', u'10h'])
        self.assertEqual(tasm.lex.parse_args(text='i, 12345678h'),[u'i', u'12345678h'])
        self.assertEqual(tasm.lex.parse_args(text='i, 20h'),[u'i', u'20h'])
        self.assertEqual(tasm.lex.parse_args(text='i, 4'),[u'i', u'4'])
        self.assertEqual(tasm.lex.parse_args(text='i, esi'),[u'i', u'esi'])
        self.assertEqual(tasm.lex.parse_args(text='i, i'),[u'i', u'i'])
        self.assertEqual(tasm.lex.parse_args(text='incebx'),[u'incebx'])
        self.assertEqual(tasm.lex.parse_args(text='load_raw'),[u'load_raw'])
        self.assertEqual(tasm.lex.parse_args(text='loc_101B7'),[u'loc_101B7'])
        self.assertEqual(tasm.lex.parse_args(text='loc_4081F6'),[u'loc_4081F6'])
        self.assertEqual(tasm.lex.parse_args(text='loc_408229'),[u'loc_408229'])
        self.assertEqual(tasm.lex.parse_args(text='loc_408464'),[u'loc_408464'])
        self.assertEqual(tasm.lex.parse_args(text='loc_408496'),[u'loc_408496'])
        self.assertEqual(tasm.lex.parse_args(text='loc_4084DF'),[u'loc_4084DF'])
        self.assertEqual(tasm.lex.parse_args(text='loc_408511'),[u'loc_408511'])
        self.assertEqual(tasm.lex.parse_args(text='loc_40855A'),[u'loc_40855A'])
        self.assertEqual(tasm.lex.parse_args(text='loc_40858C'),[u'loc_40858C'])
        self.assertEqual(tasm.lex.parse_args(text='loc_409652'),[u'loc_409652'])
        self.assertEqual(tasm.lex.parse_args(text='near ptr _clean_11C43'),[u'near ptr _clean_11C43'])
        self.assertEqual(tasm.lex.parse_args(text='near ptr _memfree_125DA'),[u'near ptr _memfree_125DA'])
        self.assertEqual(tasm.lex.parse_args(text='near ptr _snd_offx'),[u'near ptr _snd_offx'])
        self.assertEqual(tasm.lex.parse_args(text='near ptr sub_12B18'),[u'near ptr sub_12B18'])
        self.assertEqual(tasm.lex.parse_args(text='near ptr sub_12B83'),[u'near ptr sub_12B83'])
        self.assertEqual(tasm.lex.parse_args(text='next'),[u'next'])
        self.assertEqual(tasm.lex.parse_args(text='noerror'),[u'noerror'])
        self.assertEqual(tasm.lex.parse_args(text='offset failure'),[u'offset failure'])
        self.assertEqual(tasm.lex.parse_args(text='offset test_adc'),[u'offset test_adc'])
        self.assertEqual(tasm.lex.parse_args(text='offset test_add'),[u'offset test_add'])
        self.assertEqual(tasm.lex.parse_args(text='offset test_and'),[u'offset test_and'])
        self.assertEqual(tasm.lex.parse_args(text='offset test_bt'),[u'offset test_bt'])
        self.assertEqual(tasm.lex.parse_args(text='offset test_btc      ; DATA XREF: main+7\xe2\x86\x91o'),[u'offset test_btc'])
        self.assertEqual(tasm.lex.parse_args(text='offset test_btr'),[u'offset test_btr'])
        self.assertEqual(tasm.lex.parse_args(text='offset test_bts'),[u'offset test_bts'])
        self.assertEqual(tasm.lex.parse_args(text='offset test_cmp'),[u'offset test_cmp'])
        self.assertEqual(tasm.lex.parse_args(text='offset test_dec'),[u'offset test_dec'])
        self.assertEqual(tasm.lex.parse_args(text='offset test_inc'),[u'offset test_inc'])
        self.assertEqual(tasm.lex.parse_args(text='offset test_neg'),[u'offset test_neg'])
        self.assertEqual(tasm.lex.parse_args(text='offset test_not'),[u'offset test_not'])
        self.assertEqual(tasm.lex.parse_args(text='offset test_or'),[u'offset test_or'])
        self.assertEqual(tasm.lex.parse_args(text='offset test_rcl'),[u'offset test_rcl'])
        self.assertEqual(tasm.lex.parse_args(text='offset test_rcr'),[u'offset test_rcr'])
        self.assertEqual(tasm.lex.parse_args(text='offset test_rol'),[u'offset test_rol'])
        self.assertEqual(tasm.lex.parse_args(text='offset test_ror'),[u'offset test_ror'])
        self.assertEqual(tasm.lex.parse_args(text='offset test_sar'),[u'offset test_sar'])
        self.assertEqual(tasm.lex.parse_args(text='offset test_sbb'),[u'offset test_sbb'])
        self.assertEqual(tasm.lex.parse_args(text='offset test_shl'),[u'offset test_shl'])
        self.assertEqual(tasm.lex.parse_args(text='offset test_shld'),[u'offset test_shld'])
        self.assertEqual(tasm.lex.parse_args(text='offset test_shr'),[u'offset test_shr'])
        self.assertEqual(tasm.lex.parse_args(text='offset test_shrd'),[u'offset test_shrd'])
        self.assertEqual(tasm.lex.parse_args(text='offset test_sub'),[u'offset test_sub'])
        self.assertEqual(tasm.lex.parse_args(text='offset test_xor'),[u'offset test_xor'])
        self.assertEqual(tasm.lex.parse_args(text='offset var5'),[u'offset var5'])
        self.assertEqual(tasm.lex.parse_args(text='ok'),[u'ok'])
        self.assertEqual(tasm.lex.parse_args(text='op0, 32432434h'),[u'op0', u'32432434h'])
        self.assertEqual(tasm.lex.parse_args(text='printeax'),[u'printeax'])
        self.assertEqual(tasm.lex.parse_args(text='printf'),[u'printf'])
        self.assertEqual(tasm.lex.parse_args(text='qword ptr -20h'),[u'qword ptr -20h'])
        self.assertEqual(tasm.lex.parse_args(text='res'),[u'res'])
        self.assertEqual(tasm.lex.parse_args(text='res, 0FFFFFFFFh'),[u'res', u'0FFFFFFFFh'])
        self.assertEqual(tasm.lex.parse_args(text='res, res'),[u'res', u'res'])
        self.assertEqual(tasm.lex.parse_args(text='s0_0'),[u's0_0'])
        self.assertEqual(tasm.lex.parse_args(text='s1_0'),[u's1_0'])
        self.assertEqual(tasm.lex.parse_args(text='short P2'),[u'short P2'])
        self.assertEqual(tasm.lex.parse_args(text='short _lfreaderr'),[u'short _lfreaderr'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_10045'),[u'short loc_10045'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_10064'),[u'short loc_10064'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_1008A'),[u'short loc_1008A'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_40458F'),[u'short loc_40458F'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_4045E7'),[u'short loc_4045E7'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_40463E'),[u'short loc_40463E'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_4046D6'),[u'short loc_4046D6'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_4046F6'),[u'short loc_4046F6'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_404716'),[u'short loc_404716'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_404736'),[u'short loc_404736'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_404756'),[u'short loc_404756'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_404776'),[u'short loc_404776'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_404796'),[u'short loc_404796'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_4047DD'),[u'short loc_4047DD'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_404835'),[u'short loc_404835'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_40488C'),[u'short loc_40488C'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_404924'),[u'short loc_404924'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_404944'),[u'short loc_404944'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_404964'),[u'short loc_404964'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_404984'),[u'short loc_404984'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_4049A4'),[u'short loc_4049A4'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_4049C4'),[u'short loc_4049C4'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_4049E4'),[u'short loc_4049E4'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_404A2B'),[u'short loc_404A2B'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_404A83'),[u'short loc_404A83'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_404ADA'),[u'short loc_404ADA'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_404B72'),[u'short loc_404B72'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_404B92'),[u'short loc_404B92'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_404BB2'),[u'short loc_404BB2'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_404BD2'),[u'short loc_404BD2'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_404BF2'),[u'short loc_404BF2'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_404C12'),[u'short loc_404C12'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_404C32'),[u'short loc_404C32'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_404C79'),[u'short loc_404C79'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_404CD1'),[u'short loc_404CD1'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_404D28'),[u'short loc_404D28'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_404DC0'),[u'short loc_404DC0'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_404DE0'),[u'short loc_404DE0'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_404E00'),[u'short loc_404E00'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_404E20'),[u'short loc_404E20'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_404E40'),[u'short loc_404E40'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_404E60'),[u'short loc_404E60'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_404E80'),[u'short loc_404E80'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_404EC7'),[u'short loc_404EC7'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_404F1F'),[u'short loc_404F1F'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_404F76'),[u'short loc_404F76'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_40500E'),[u'short loc_40500E'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_40502E'),[u'short loc_40502E'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_40504E'),[u'short loc_40504E'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_40506E'),[u'short loc_40506E'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_40508E'),[u'short loc_40508E'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_4050AE'),[u'short loc_4050AE'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_4050CE'),[u'short loc_4050CE'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_405115'),[u'short loc_405115'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_40516D'),[u'short loc_40516D'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_4051C4'),[u'short loc_4051C4'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_4052A0'),[u'short loc_4052A0'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_4052C0'),[u'short loc_4052C0'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_4052E0'),[u'short loc_4052E0'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_405300'),[u'short loc_405300'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_405320'),[u'short loc_405320'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_405340'),[u'short loc_405340'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_405360'),[u'short loc_405360'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_4053A7'),[u'short loc_4053A7'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_4053FF'),[u'short loc_4053FF'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_405456'),[u'short loc_405456'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_405532'),[u'short loc_405532'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_405552'),[u'short loc_405552'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_405572'),[u'short loc_405572'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_405592'),[u'short loc_405592'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_4055B2'),[u'short loc_4055B2'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_4055D2'),[u'short loc_4055D2'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_4055F2'),[u'short loc_4055F2'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_40563E'),[u'short loc_40563E'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_4056A0'),[u'short loc_4056A0'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_40572C'),[u'short loc_40572C'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_40574C'),[u'short loc_40574C'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_40576C'),[u'short loc_40576C'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_40578C'),[u'short loc_40578C'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_4057AC'),[u'short loc_4057AC'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_4057CC'),[u'short loc_4057CC'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_4057EC'),[u'short loc_4057EC'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_405838'),[u'short loc_405838'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_40589A'),[u'short loc_40589A'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_405926'),[u'short loc_405926'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_405946'),[u'short loc_405946'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_405966'),[u'short loc_405966'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_405986'),[u'short loc_405986'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_4059A6'),[u'short loc_4059A6'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_4059C6'),[u'short loc_4059C6'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_4059E6'),[u'short loc_4059E6'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_405A2E'),[u'short loc_405A2E'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_405A85'),[u'short loc_405A85'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_405B0A'),[u'short loc_405B0A'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_405B2A'),[u'short loc_405B2A'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_405B4A'),[u'short loc_405B4A'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_405B6A'),[u'short loc_405B6A'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_405B8A'),[u'short loc_405B8A'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_405BAA'),[u'short loc_405BAA'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_405BCA'),[u'short loc_405BCA'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_405C12'),[u'short loc_405C12'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_405C69'),[u'short loc_405C69'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_405CEE'),[u'short loc_405CEE'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_405D0E'),[u'short loc_405D0E'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_405D2E'),[u'short loc_405D2E'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_405D4E'),[u'short loc_405D4E'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_405D6E'),[u'short loc_405D6E'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_405D8E'),[u'short loc_405D8E'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_405DAE'),[u'short loc_405DAE'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_405DF6'),[u'short loc_405DF6'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_405E4D'),[u'short loc_405E4D'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_405ED2'),[u'short loc_405ED2'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_405EF2'),[u'short loc_405EF2'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_405F12'),[u'short loc_405F12'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_405F32'),[u'short loc_405F32'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_405F52'),[u'short loc_405F52'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_405F72'),[u'short loc_405F72'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_405F92'),[u'short loc_405F92'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_405FDA'),[u'short loc_405FDA'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_406031'),[u'short loc_406031'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_4060B6'),[u'short loc_4060B6'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_4060D6'),[u'short loc_4060D6'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_4060F6'),[u'short loc_4060F6'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_406116'),[u'short loc_406116'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_406136'),[u'short loc_406136'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_406156'),[u'short loc_406156'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_406176'),[u'short loc_406176'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_4068F5'),[u'short loc_4068F5'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_40698C'),[u'short loc_40698C'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_406A1F'),[u'short loc_406A1F'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_406AAF'),[u'short loc_406AAF'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_406B3F'),[u'short loc_406B3F'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_406BCF'),[u'short loc_406BCF'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_406C5A'),[u'short loc_406C5A'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_406CF8'),[u'short loc_406CF8'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_406D8E'),[u'short loc_406D8E'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_406E24'),[u'short loc_406E24'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_406EBA'),[u'short loc_406EBA'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_406F50'),[u'short loc_406F50'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_406FE6'),[u'short loc_406FE6'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_40707C'),[u'short loc_40707C'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_407112'),[u'short loc_407112'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_4071A8'),[u'short loc_4071A8'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_40723E'),[u'short loc_40723E'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_4072D4'),[u'short loc_4072D4'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_40736A'),[u'short loc_40736A'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_407400'),[u'short loc_407400'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_407496'),[u'short loc_407496'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_40752C'),[u'short loc_40752C'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_4075C2'),[u'short loc_4075C2'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_407658'),[u'short loc_407658'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_4076EE'),[u'short loc_4076EE'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_407784'),[u'short loc_407784'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_40781A'),[u'short loc_40781A'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_4078B0'),[u'short loc_4078B0'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_407E46'),[u'short loc_407E46'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_407F72'),[u'short loc_407F72'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_408008'),[u'short loc_408008'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_40809E'),[u'short loc_40809E'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_408139'),[u'short loc_408139'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_4081D5'),[u'short loc_4081D5'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_4083C9'),[u'short loc_4083C9'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_4083E9'),[u'short loc_4083E9'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_40841B'),[u'short loc_40841B'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_408444'),[u'short loc_408444'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_4084BF'),[u'short loc_4084BF'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_40853A'),[u'short loc_40853A'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_40B72A'),[u'short loc_40B72A'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_40B7AD'),[u'short loc_40B7AD'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_40D571'),[u'short loc_40D571'])
        self.assertEqual(tasm.lex.parse_args(text='short loc_40D581'),[u'short loc_40D581'])
        self.assertEqual(tasm.lex.parse_args(text='si, [bx+5]'),[u'si', u'[bx+5]'])
        self.assertEqual(tasm.lex.parse_args(text='si, offset _byte_27FE8'),[u'si', u'offset _byte_27FE8'])
        self.assertEqual(tasm.lex.parse_args(text='si, offset _byte_306DE'),[u'si', u'offset _byte_306DE'])
        self.assertEqual(tasm.lex.parse_args(text='si, offset _byte_308BE'),[u'si', u'offset _byte_308BE'])
        self.assertEqual(tasm.lex.parse_args(text='si, offset _dword_27BC8'),[u'si', u'offset _dword_27BC8'])
        self.assertEqual(tasm.lex.parse_args(text='small word ptr [esp]'),[u'small word ptr [esp]'])
        self.assertEqual(tasm.lex.parse_args(text='sp, _savesp_245D0'),[u'sp', u'_savesp_245D0'])
        self.assertEqual(tasm.lex.parse_args(text='test2'),[u'test2'])
        self.assertEqual(tasm.lex.parse_args(text='test_bcd'),[u'test_bcd'])
        self.assertEqual(tasm.lex.parse_args(text='test_bsx'),[u'test_bsx'])
        self.assertEqual(tasm.lex.parse_args(text='test_conv'),[u'test_conv'])
        self.assertEqual(tasm.lex.parse_args(text='test_divb'),[u'test_divb'])
        self.assertEqual(tasm.lex.parse_args(text='test_divl'),[u'test_divl'])
        self.assertEqual(tasm.lex.parse_args(text='test_divw'),[u'test_divw'])
        self.assertEqual(tasm.lex.parse_args(text='test_idivb'),[u'test_idivb'])
        self.assertEqual(tasm.lex.parse_args(text='test_idivl'),[u'test_idivl'])
        self.assertEqual(tasm.lex.parse_args(text='test_idivw'),[u'test_idivw'])
        self.assertEqual(tasm.lex.parse_args(text='test_imulb'),[u'test_imulb'])
        self.assertEqual(tasm.lex.parse_args(text='test_imull'),[u'test_imull'])
        self.assertEqual(tasm.lex.parse_args(text='test_imull2'),[u'test_imull2'])
        self.assertEqual(tasm.lex.parse_args(text='test_imulw'),[u'test_imulw'])
        self.assertEqual(tasm.lex.parse_args(text='test_imulw2'),[u'test_imulw2'])
        self.assertEqual(tasm.lex.parse_args(text='test_jcc'),[u'test_jcc'])
        self.assertEqual(tasm.lex.parse_args(text='test_lea'),[u'test_lea'])
        self.assertEqual(tasm.lex.parse_args(text='test_loop'),[u'test_loop'])
        self.assertEqual(tasm.lex.parse_args(text='test_misc'),[u'test_misc'])
        self.assertEqual(tasm.lex.parse_args(text='test_mul'),[u'test_mul'])
        self.assertEqual(tasm.lex.parse_args(text='test_mulb'),[u'test_mulb'])
        self.assertEqual(tasm.lex.parse_args(text='test_mull'),[u'test_mull'])
        self.assertEqual(tasm.lex.parse_args(text='test_mulw'),[u'test_mulw'])
        self.assertEqual(tasm.lex.parse_args(text='test_popcnt'),[u'test_popcnt'])
        self.assertEqual(tasm.lex.parse_args(text='test_string'),[u'test_string'])
        self.assertEqual(tasm.lex.parse_args(text='test_xchg'),[u'test_xchg'])
        self.assertEqual(tasm.lex.parse_args(text='toto'),[u'toto'])
        self.assertEqual(tasm.lex.parse_args(text='toto1'),[u'toto1'])
        self.assertEqual(tasm.lex.parse_args(text='toto2'),[u'toto2'])
        self.assertEqual(tasm.lex.parse_args(text='var1'),[u'var1'])
        self.assertEqual(tasm.lex.parse_args(text='var1,1'),[u'var1', u'1'])
        self.assertEqual(tasm.lex.parse_args(text='var1,2'),[u'var1', u'2'])
        self.assertEqual(tasm.lex.parse_args(text='var1,al'),[u'var1', u'al'])
        self.assertEqual(tasm.lex.parse_args(text='var1[1],2'),[u'var1[1]', u'2'])
        self.assertEqual(tasm.lex.parse_args(text='var1[bx+si],2'),[u'var1[bx+si]', u'2'])
        self.assertEqual(tasm.lex.parse_args(text='var1[bx],2'),[u'var1[bx]', u'2'])
        self.assertEqual(tasm.lex.parse_args(text='var2,2'),[u'var2', u'2'])
        self.assertEqual(tasm.lex.parse_args(text='var2,bx'),[u'var2', u'bx'])
        self.assertEqual(tasm.lex.parse_args(text='var3'),[u'var3'])
        self.assertEqual(tasm.lex.parse_args(text='var3+3*4,4000000'),[u'var3+3*4', u'4000000'])
        self.assertEqual(tasm.lex.parse_args(text='var3+ebp,4000000'),[u'var3+ebp', u'4000000'])
        self.assertEqual(tasm.lex.parse_args(text='var3,-12'),[u'var3', u'-12'])
        self.assertEqual(tasm.lex.parse_args(text='var3,-13'),[u'var3', u'-13'])
        self.assertEqual(tasm.lex.parse_args(text='var3,3'),[u'var3', u'3'])
        self.assertEqual(tasm.lex.parse_args(text='var3,ecx'),[u'var3', u'ecx'])
        self.assertEqual(tasm.lex.parse_args(text='word ptr [ebp+var_20], ax'),[u'word ptr [ebp+var_20]', u'ax'])
        self.assertEqual(tasm.lex.parse_args(text='word ptr [ebp+var_20], dx'),[u'word ptr [ebp+var_20]', u'dx'])
        self.assertEqual(tasm.lex.parse_args(text='word ptr [var5+2],25'),[u'word ptr [var5+2]', u'25'])
        self.assertEqual(tasm.lex.parse_args(text='word ptr [var5+2],50'),[u'word ptr [var5+2]', u'50'])
        self.assertEqual(tasm.lex.parse_args(text='word ptr var5,0'),[u'word ptr var5', u'0'])
        self.assertEqual(tasm.lex.parse_args(text=u'0'),[u'0'])
        self.assertEqual(tasm.lex.parse_args(text=u'0BC6058h'),[u'0BC6058h'])
        self.assertEqual(tasm.lex.parse_args(text=u'9ABCDEFh'),[u'9ABCDEFh'])
        self.assertEqual(tasm.lex.parse_args(text=u'[esp]'),[u'[esp]'])
        self.assertEqual(tasm.lex.parse_args(text=u'ax'),[u'ax'])
        self.assertEqual(tasm.lex.parse_args(text=u'bx'),[u'bx'])
        self.assertEqual(tasm.lex.parse_args(text=u'cs'),[u'cs'])
        self.assertEqual(tasm.lex.parse_args(text=u'cx'),[u'cx'])
        self.assertEqual(tasm.lex.parse_args(text=u'ds'),[u'ds'])
        self.assertEqual(tasm.lex.parse_args(text=u'dword'),[u'dword'])
        self.assertEqual(tasm.lex.parse_args(text=u'dx'),[u'dx'])
        self.assertEqual(tasm.lex.parse_args(text=u'eax'),[u'eax'])
        self.assertEqual(tasm.lex.parse_args(text=u'ebp'),[u'ebp'])
        self.assertEqual(tasm.lex.parse_args(text=u'ebx'),[u'ebx'])
        self.assertEqual(tasm.lex.parse_args(text=u'ecx'),[u'ecx'])
        self.assertEqual(tasm.lex.parse_args(text=u'edi'),[u'edi'])
        self.assertEqual(tasm.lex.parse_args(text=u'edi_0'),[u'edi_0'])
        self.assertEqual(tasm.lex.parse_args(text=u'edx'),[u'edx'])
        self.assertEqual(tasm.lex.parse_args(text=u'es'),[u'es'])
        self.assertEqual(tasm.lex.parse_args(text=u'esi'),[u'esi'])
        self.assertEqual(tasm.lex.parse_args(text=u'esi_0'),[u'esi_0'])
        self.assertEqual(tasm.lex.parse_args(text=u'fs'),[u'fs'])
        self.assertEqual(tasm.lex.parse_args(text=u'i'),[u'i'])
        self.assertEqual(tasm.lex.parse_args(text=u'ptr'),[u'ptr'])
        self.assertEqual(tasm.lex.parse_args(text=u'res'),[u'res'])
        self.assertEqual(tasm.lex.parse_args(text=u's0_0'),[u's0_0'])
        self.assertEqual(tasm.lex.parse_args(text=u'small'),[u'small'])
        self.assertEqual(tasm.lex.parse_args(text=u'word'),[u'word'])

if __name__ == "__main__":
    unittest.main()
